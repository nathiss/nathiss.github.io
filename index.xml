<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MadeByMe</title><link>https://madebyme.today/</link><description>Recent content on MadeByMe</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright 2023-2024, Kamil Rusin</copyright><lastBuildDate>Sun, 25 Feb 2024 14:26:12 +0100</lastBuildDate><atom:link href="https://madebyme.today/index.xml" rel="self" type="application/rss+xml"/><item><title>Generating SVG Avatars From Identifiers</title><link>https://madebyme.today/projects/generating-svg-avatars-from-identifiers/</link><pubDate>Sun, 25 Feb 2024 14:26:12 +0100</pubDate><guid>https://madebyme.today/projects/generating-svg-avatars-from-identifiers/</guid><category>SVG</category><category>Rust</category><description>&lt;p>When you create a new social service on the internet, one of the things you need to think about is how to make a user&amp;rsquo;s
space feel like their own. Services like &lt;a
href="https://github.blog/2013-08-14-identicons/"
>GitHub&lt;/a>, Roll20, or &lt;a
href="https://www.reddit.com/r/reddit/comments/vtkmni/introducing_collectible_avatars/"
>Reddit&lt;/a>
generate &amp;mdash; or allow you to generate &amp;mdash; a custom avatar (i.e. &lt;a
href="https://en.wikipedia.org/wiki/Identicon"
>Identicons&lt;/a>) for your account. Avatar auto-generation
is especially neat, as it does not require any engagement from the user. Let&amp;rsquo;s try to figure that out on our own.&lt;/p>
&lt;div class="alert alert-info">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-globe-europe-africa me-2" aria-hidden="true">&lt;/i>
Standing on the shoulders of giants
&lt;/h6>
&lt;p class="my-3">
This blog post has been inspired by &lt;a
href="https://francoisbest.com/posts/2021/hashvatars"
>Representing SHA-256 Hashes As Avatars&lt;/a> by &lt;a
href="https://francoisbest.com/"
>François Best&lt;/a>. I&amp;rsquo;m re-creating ideas
presented by François in their article &amp;mdash; with slight modifications &amp;mdash; in &lt;a
href="https://madebyme.today/tags/rust/"
>Rust&lt;/a>.
&lt;/p>
&lt;/div>
&lt;p>I think this blog post is one of those things which are easier to understand if you&amp;rsquo;d see the end result first. So, for
those interested here&amp;rsquo;s a spoiler.&lt;/p>
&lt;div class="alert alert-spoiler">
&lt;input id="callout-spoiler-1709398734517120546"
class="collapsible-toggle"
type="checkbox"
/>
&lt;label for="callout-spoiler-1709398734517120546" class="collapsible-label-toggle alert-heading">
Spoiler!
&lt;/label>
&lt;div class="collapsible-content">
&lt;div class="collapsible-content-inner">
&lt;p>This is the end result:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734516152736">
#figure-svg-1709398734516152736 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;g>
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(127.51471, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(127.51471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(144.38971, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(135.01471, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(135.01471, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(151.88971, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(146.26471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(138.76471, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(251.18384, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(239.93384, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(230.55884, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(228.68384, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(224.93384, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(228.68384, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z"
fill="hsl(230.55884, 20%, 52.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(228.68384, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z"
fill="hsl(167.05148, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z"
fill="hsl(172.67648, 20%, 65%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z"
fill="hsl(168.92648, 80%, 52.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z"
fill="hsl(178.30148, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z"
fill="hsl(176.42648, 40%, 40%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z"
fill="hsl(180.17648, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z"
fill="hsl(185.80148, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z"
fill="hsl(183.92648, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/g>
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for identifier &amp;quot;Foo&amp;quot;.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>The avatar has 24 segments and consists of 24 &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathElement"
>&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> tags. The coordinates describing paths are static, but their
colors are generated from &lt;a
href="https://en.wikipedia.org/wiki/SHA-2"
>SHA-256&lt;/a> of the identifier.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">SHA256(&amp;#34;Foo&amp;#34;) == [ 44, 38, 180, 107, 104, 255, 198, 143,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl"> 249, 155, 69, 60, 29, 48, 65, 52,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl"> 19, 66, 45, 112, 100, 131, 191, 160,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl"> 249, 138, 94, 136, 98, 102, 231, 174]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>&lt;/span>&lt;span class="cl">Base64(SHA256(&amp;#34;Foo&amp;#34;)) == LCa0a2j/xo/5m0U8HTBBNBNCLXBkg7+g+YpeiGJm564=
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The rest of this blog post focuses on translating the byte array into an avatar that looks &lt;em>nice&lt;/em>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;h2 id="svg-scaffolding" >
&lt;a href="#svg-scaffolding" aria-label="Anchor">#&lt;/a>
SVG scaffolding
&lt;/h2>
&lt;p>Let&amp;rsquo;s think how to prepare the SVG&amp;rsquo;s structure. We know that each segment must be its own &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathElement"
>&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> element, so we can
color them individually with the &lt;a
href="https://www.w3.org/TR/SVG2/painting.html#SpecifyingFillPaint"
>fill&lt;/a> property. Generating annuluses sectors can be challenging &amp;mdash; it would require
using two(!) &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands"
>arcs&lt;/a>, which is way too much &amp;mdash; instead, we can cheat a little and create overlapping
circle sectors. It will make paths simpler and requires only one(!) arc.&lt;/p>
&lt;p>Starting with the &lt;code>&amp;lt;svg&amp;gt;&lt;/code> tag we get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-svg" data-lang="svg">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;svg&lt;/span> &lt;span class="na">viewBox=&lt;/span>&lt;span class="s">&amp;#34;-1 -1 2 2&amp;#34;&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;/svg&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Paths generation gets much easier if the center of &amp;ldquo;circles&amp;rdquo; is in $(0, 0)$. We can do that by setting the &lt;code>viewBox&lt;/code>
property as shown above: top-left corner is $(-1, -1)$, width is $2$, and height is $2$.&lt;/p>
&lt;p>OK. Now we need to create circle sectors. SVG has some tags for constructing &lt;a
href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes"
>basic shapes&lt;/a> (like circles, rectangles,
or ellipses). Sadly, pizza slices are &lt;em>not&lt;/em> considered as &amp;ldquo;basic&amp;rdquo;, so there&amp;rsquo;s no &lt;code>&amp;lt;pizza-slice&amp;gt;&lt;/code> to help us here.
Instead, we need to use the &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathElement"
>&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> tag.&lt;/p>
&lt;h3 id="making-pizza-slices-pizza" >
&lt;a href="#making-pizza-slices-pizza" aria-label="Anchor">#&lt;/a>
Making pizza slices &amp;#x1f355;
&lt;/h3>
&lt;p>The &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathElement"
>&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> tag is nice, because it allows you to construct any complex shape. For it to work we need to describe how
we want our shape to look like with its special &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathData"
>path data&lt;/a> syntax. It&amp;rsquo;s fairly complex, but we only need to grasp 4 of
its commands:&lt;/p>
&lt;ul>
&lt;li>the &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathDataMovetoCommands"
>absolute &lt;strong>&amp;ldquo;moveto&amp;rdquo;&lt;/strong>&lt;/a> command &amp;mdash; which establishes a new initial point,&lt;/li>
&lt;li>the &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathDataLinetoCommands"
>absolute &lt;strong>&amp;ldquo;lineto&amp;rdquo;&lt;/strong>&lt;/a> command &amp;mdash; which draws a line from the current point to the given
$(x, y)$,&lt;/li>
&lt;li>the &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands"
>absolute elliptical arc curve&lt;/a> command &amp;mdash; which draws an elliptical arc from the current point to
the given $(x, y)$,&lt;/li>
&lt;li>the &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathDataClosePathCommand"
>&lt;strong>&amp;ldquo;closepath&amp;rdquo;&lt;/strong>&lt;/a> command &amp;mdash; which ends the current path by connecting it back to its initial
point.&lt;/li>
&lt;/ul>
&lt;p>To start easy, let&amp;rsquo;s consider an example with 4 pizza slices:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-svg" data-lang="svg">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;svg&lt;/span> &lt;span class="na">overflow=&lt;/span>&lt;span class="s">&amp;#34;visible&amp;#34;&lt;/span> &lt;span class="na">viewBox=&lt;/span>&lt;span class="s">&amp;#34;-1 -1 2 2&amp;#34;&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;IndianRed&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3">3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L 1,0 A 1,1,0,0,1,0,1 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;LightCoral&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4">4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;Salmon&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5">5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;DarkSalmon&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;/svg&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It renders to:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734517257947">
#figure-svg-1709398734517257947 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0,1 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;div class="alert alert-info">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-pencil me-2" aria-hidden="true">&lt;/i>
Note
&lt;/h6>
&lt;p class="my-3">
I added &lt;code>overflow=&amp;quot;visible&amp;quot;&lt;/code> to the SVG tag, because &amp;mdash; with a non-zero stroke &amp;mdash; the image is &lt;em>slightly&lt;/em> bigger than
its &lt;code>viewBox&lt;/code> and the stroke lines get cut off at $(-1, 0)$, $(1, 0)$, $(0, 1)$, and $(-1, 0)$.
&lt;/p>
&lt;/div>
&lt;p>We can see an interesting patter here: coordinates of the &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathDataLinetoCommands"
>&lt;strong>&amp;ldquo;lineto&amp;rdquo;&lt;/strong>&lt;/a> command are the same, as the
coordinates of the &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands"
>elliptical arc curve&lt;/a> command of the &lt;em>previous&lt;/em> element.&lt;/p>
&lt;p>&lt;em>Ok, but how to divide these slices into halves?&lt;/em> &amp;mdash; you may ask.&lt;/p>
&lt;p>To do that we need to find the points in the middle of the arcs.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734517556250">
#figure-svg-1709398734517556250 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg id="slices-with-points" overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;style>
#slices-with-points text {
font-size: 0.2px;
font-family: var(--bs-font-monospace);
fill: var(--bs-body-color);
display: inline-block;
}
#slices-with-points circle {
fill: var(--bs-body-color);
}
&lt;/style>
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0,1 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;circle cx="0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="-0.70710678118" text-anchor="start" dominant-baseline="text-top">(ax, ay)&lt;/text>
&lt;circle cx="0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="0.70710678118" text-anchor="start" dominant-baseline="hanging">(bx, by)&lt;/text>
&lt;circle cx="-0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="-0.70710678118" text-anchor="end" dominant-baseline="text-top">(cx, cy)&lt;/text>
&lt;circle cx="-0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="0.70710678118" text-anchor="end" dominant-baseline="hanging">(dx, dy)&lt;/text>
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;p>Fortunately &amp;mdash; since the circle&amp;rsquo;s middle point is $(0, 0)$ and the arc points are in the middle of their arcs &amp;mdash; we
know that the absolute value of their coordinates is the same. So, our diagram simplifies to:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734517828452">
#figure-svg-1709398734517828452 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg id="slices-with-same-points" overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;style>
#slices-with-same-points text {
font-size: 0.2px;
font-family: var(--bs-font-monospace);
fill: var(--bs-body-color);
display: inline-block;
}
#slices-with-same-points circle {
fill: var(--bs-body-color);
}
&lt;/style>
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0,1 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;circle cx="0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="-0.70710678118" text-anchor="start" dominant-baseline="text-top">(a, -a)&lt;/text>
&lt;circle cx="0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="0.70710678118" text-anchor="start" dominant-baseline="hanging">(a, a)&lt;/text>
&lt;circle cx="-0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="-0.70710678118" text-anchor="end" dominant-baseline="text-top">(-a, -a)&lt;/text>
&lt;circle cx="-0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="0.70710678118" text-anchor="end" dominant-baseline="hanging">(-a, a)&lt;/text>
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;p>Great. &amp;#x1f44c;&lt;/p>
&lt;p>Now we can use the equation of a circle to find the middle points.&lt;/p>
&lt;p>$$
\begin{aligned}
(x - x_0)^2 + (y - y_0)^2 &amp;amp;= r^2 \\[0.25em]
(a - 0)^2 + (a - 0)^2 &amp;amp;= 1^2 \\[0.25em]
2a^2 &amp;amp;= 1 \\[0.25em]
a^2 &amp;amp;= \frac{1}{2} \\[0.25em]
a &amp;amp;= \sqrt{\frac{1}{2}}
\end{aligned}
$$&lt;/p>
&lt;p>By adding four more pizza slices we get:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734518114555">
#figure-svg-1709398734518114555 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;h3 id="layers-of-pizza" >
&lt;a href="#layers-of-pizza" aria-label="Anchor">#&lt;/a>
Layers of pizza
&lt;/h3>
&lt;p>The next step is to create additional (smaller) layers of circle sectors. Let&amp;rsquo;s say we want three circles; there&amp;rsquo;re two
obvious ways of selecting division points: equal radii, or equal areas. Equal radii is simpler, so let&amp;rsquo;s try this one
first.&lt;/p>
&lt;p>If the outermost circle has a radius of $1$, then the middle circle will have a radius of $0.\overline{6}$, and the
smallest one will have $0.\overline{3}$.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734518400658">
#figure-svg-1709398734518400658 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.6666667 A0.6666667,0.6666667,0,0,1,0.47140452,-0.47140452 z" fill="LightYellow" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.47140452,-0.47140452 A0.6666667,0.6666667,0,0,1,0.6666667,0 z" fill="LemonChiffon" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.6666667,0 A0.6666667,0.6666667,0,0,1,0.47140452,0.47140452 z" fill="LightGoldenrodYellow"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.47140452,0.47140452 A0.6666667,0.6666667,0,0,1,0,0.6666667 z" fill="PapayaWhip" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.6666667 A0.6666667,0.6666667,0,0,1,-0.47140452,0.47140452 z" fill="Moccasin" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.47140452,0.47140452 A0.6666667,0.6666667,0,0,1,-0.6666667,0 z" fill="PeachPuff" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.6666667,0 A0.6666667,0.6666667,0,0,1,-0.47140452,-0.47140452 z" fill="PaleGoldenrod"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.47140452,-0.47140452 A0.6666667,0.6666667,0,0,1,-0,-0.6666667 z" fill="Khaki" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.33333334 A0.33333334,0.33333334,0,0,1,0.23570226,-0.23570226 z" fill="MediumSeaGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.23570226,-0.23570226 A0.33333334,0.33333334,0,0,1,0.33333334,0 z" fill="SeaGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.33333334,0 A0.33333334,0.33333334,0,0,1,0.23570226,0.23570226 z" fill="ForestGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.23570226,0.23570226 A0.33333334,0.33333334,0,0,1,0,0.33333334 z" fill="Green" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.33333334 A0.33333334,0.33333334,0,0,1,-0.23570226,0.23570226 z" fill="DarkGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.23570226,0.23570226 A0.33333334,0.33333334,0,0,1,-0.33333334,0 z" fill="YellowGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.33333334,0 A0.33333334,0.33333334,0,0,1,-0.23570226,-0.23570226 z" fill="OliveDrab" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.23570226,-0.23570226 A0.33333334,0.33333334,0,0,1,-0,-0.33333334 z" fill="Olive" stroke="black"
stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
\quad\text{and}\quad
r_2 = 0.\overline{6}
\quad\text{and}\quad
r_3 = 0.\overline{3}
$$&lt;/p>
&lt;p>Not that it matters, but the smallest circle is a little &lt;em>too&lt;/em> small for my liking. But, before we decide, we need to
see circles with equal areas first.&lt;/p>
&lt;p>$$
\begin{aligned}
\Pi r_1^2 - \Pi r_2^2 = \Pi r_2^2 - \Pi r_3^2
\quad&amp;amp;\text{and}\quad
\Pi r_2^2 - \Pi r_3^2 = \Pi r_3^2 \\[0.25em]
1 - r_2^2 = r_2^2 - r_3^2
\quad&amp;amp;\text{and}\quad
r_2^2 - r_3^2 = r_3^2 \\[0.25em]
1 = 2r_2^2 - r_3^2
\quad&amp;amp;\text{and}\quad
r_2^2 = 2r_3^2 \\[0.25em]
1 = 3r_3^2
\quad&amp;amp;\text{and}\quad
r_2^2 = 2r_3^2 \\[0.25em]
r_3 = \sqrt{\frac{1}{3}}
\quad&amp;amp;\text{and}\quad
r_2 = \sqrt{\frac{2}{3}}
\end{aligned}
$$&lt;/p>
&lt;p>Which gives us this avatar:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734518610860">
#figure-svg-1709398734518610860 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.8164966 A0.8164966,0.8164966,0,0,1,0.57735026,-0.57735026 z" fill="LightYellow" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.57735026,-0.57735026 A0.8164966,0.8164966,0,0,1,0.8164966,0 z" fill="LemonChiffon" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.8164966,0 A0.8164966,0.8164966,0,0,1,0.57735026,0.57735026 z" fill="LightGoldenrodYellow"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.57735026,0.57735026 A0.8164966,0.8164966,0,0,1,0,0.8164966 z" fill="PapayaWhip" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.8164966 A0.8164966,0.8164966,0,0,1,-0.57735026,0.57735026 z" fill="Moccasin" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.57735026,0.57735026 A0.8164966,0.8164966,0,0,1,-0.8164966,0 z" fill="PeachPuff" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.8164966,0 A0.8164966,0.8164966,0,0,1,-0.57735026,-0.57735026 z" fill="PaleGoldenrod"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.57735026,-0.57735026 A0.8164966,0.8164966,0,0,1,-0,-0.8164966 z" fill="Khaki" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.57735026 A0.57735026,0.57735026,0,0,1,0.4082483,-0.4082483 z" fill="MediumSeaGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.4082483,-0.4082483 A0.57735026,0.57735026,0,0,1,0.57735026,0 z" fill="SeaGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.57735026,0 A0.57735026,0.57735026,0,0,1,0.4082483,0.4082483 z" fill="ForestGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.4082483,0.4082483 A0.57735026,0.57735026,0,0,1,0,0.57735026 z" fill="Green" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.57735026 A0.57735026,0.57735026,0,0,1,-0.4082483,0.4082483 z" fill="DarkGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.4082483,0.4082483 A0.57735026,0.57735026,0,0,1,-0.57735026,0 z" fill="YellowGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.57735026,0 A0.57735026,0.57735026,0,0,1,-0.4082483,-0.4082483 z" fill="OliveDrab" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.4082483,-0.4082483 A0.57735026,0.57735026,0,0,1,-0,-0.57735026 z" fill="Olive" stroke="black"
stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
\quad\text{and}\quad
r_2 = \sqrt{\frac{2}{3}}
\quad\text{and}\quad
r_3 = \sqrt{\frac{1}{3}}
$$&lt;/p>
&lt;p>Which is also not ideal, but the other way around&amp;hellip; I was tinkering with the radii a bit and I think I found a &lt;a
href="https://en.wikipedia.org/wiki/Arithmetic_mean"
>middle
ground&lt;/a> with which I&amp;rsquo;m happy.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734518768861">
#figure-svg-1709398734518768861 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="LightYellow" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="LemonChiffon" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="LightGoldenrodYellow"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="PapayaWhip" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="Moccasin" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="PeachPuff" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="PaleGoldenrod" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="Khaki" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z" fill="MediumSeaGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="SeaGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="ForestGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="Green" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="DarkGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z" fill="YellowGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z" fill="OliveDrab" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z" fill="Olive" stroke="black"
stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
\quad\text{and}\quad
r_2 = \frac{0.\overline{6} + \sqrt{\frac{2}{3}}}{2}
\quad\text{and}\quad
r_3 = \frac{0.\overline{3} + \sqrt{\frac{1}{3}}}{2}
$$&lt;/p>
&lt;p>Radii in the circles above are the arithmetic average of the equal radii variant and the equal areas variant.&lt;/p>
&lt;h2 id="working-with-colors" >
&lt;a href="#working-with-colors" aria-label="Anchor">#&lt;/a>
Working with colors
&lt;/h2>
&lt;p>With the SVG structure out of the way we can focus on selecting quasi-random colors for the circle segments based on the
identifier&amp;rsquo;s hash. &lt;a
href="https://en.wikipedia.org/wiki/SHA-2"
>SHA-256&lt;/a> hashes have 32 bytes; it&amp;rsquo;s more than we need &amp;mdash; assuming we need a single byte
per circle sector &amp;mdash; which gives us another benefit: we can slide in the 4&lt;sup>th&lt;/sup> circle, if we want
to.&lt;/p>
&lt;p>For now though, let&amp;rsquo;s talk about the colors. If we&amp;rsquo;d use &lt;a
href="https://en.wikipedia.org/wiki/HSL_and_HSV"
>HSL&lt;/a>, we can split each byte into 4 pieces: 4 bits for hue
(since it&amp;rsquo;s the most dominant), 2 bits for saturation, and 2 bits for lightness. Path&amp;rsquo;s &lt;a
href="https://www.w3.org/TR/SVG2/painting.html#SpecifyingFillPaint"
>fill&lt;/a> property accepts any
&lt;a
href="https://www.w3.org/TR/SVG2/painting.html#SpecifyingPaint"
>paint&lt;/a> value, which basically means we need to format our color to a standard CSS&amp;rsquo;s hue.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-5">&lt;a class="lnlinks" href="#hl-2-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-6">&lt;a class="lnlinks" href="#hl-2-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">16.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-7">&lt;a class="lnlinks" href="#hl-2-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-8">&lt;a class="lnlinks" href="#hl-2-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-9">&lt;a class="lnlinks" href="#hl-2-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-10">&lt;a class="lnlinks" href="#hl-2-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-11">&lt;a class="lnlinks" href="#hl-2-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">20.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">80.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-12">&lt;a class="lnlinks" href="#hl-2-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">40.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">50.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-13">&lt;a class="lnlinks" href="#hl-2-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-14">&lt;a class="lnlinks" href="#hl-2-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">format!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hsl(&lt;/span>&lt;span class="si">{h}&lt;/span>&lt;span class="s">, &lt;/span>&lt;span class="si">{s}&lt;/span>&lt;span class="s">%, &lt;/span>&lt;span class="si">{l}&lt;/span>&lt;span class="s">%)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-15">&lt;a class="lnlinks" href="#hl-2-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alright, let&amp;rsquo;s generate an avatar for &lt;code>&amp;quot;foo&amp;quot;&lt;/code> and see how it looks like.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734519112465">
#figure-svg-1709398734519112465 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(45, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(45, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(247.5, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(135, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(135, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(337.5, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(270, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(180, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(337.5, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(202.5, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(90, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(67.5, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(22.5, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(67.5, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="hsl(90, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(67.5, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z" fill="hsl(22.5, 20%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="hsl(90, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="hsl(45, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="hsl(157.5, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="hsl(135, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z" fill="hsl(180, 20%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z" fill="hsl(247.5, 80%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z" fill="hsl(225, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for &amp;quot;foo&amp;quot;.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Well, it does not look terrible, but it&amp;rsquo;s not eye-catching either. To be perfectly honest, we should expect something
like this; &lt;a
href="https://en.wikipedia.org/wiki/SHA-2"
>SHA-256&lt;/a> returns (and for that matter all other hash functions too) a quasi-random values. If we
convert those &lt;em>raw&lt;/em> bytes to fill colors, we&amp;rsquo;ll get quasi-random colors. To make it nicer we need to modify our
algorithm slightly; we need to calculate a global theme, if you will, for the avatar, so that a part of circle segments'
colors come from that theme. We can do that by folding all hash bytes into a single one with XOR.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalized_theme&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">16.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-7">&lt;a class="lnlinks" href="#hl-3-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-8">&lt;a class="lnlinks" href="#hl-3-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-9">&lt;a class="lnlinks" href="#hl-3-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-10">&lt;a class="lnlinks" href="#hl-3-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">120.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-11">&lt;a class="lnlinks" href="#hl-3-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">20.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">80.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-12">&lt;a class="lnlinks" href="#hl-3-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">40.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">50.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-13">&lt;a class="lnlinks" href="#hl-3-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-14">&lt;a class="lnlinks" href="#hl-3-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">format!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hsl(&lt;/span>&lt;span class="si">{h}&lt;/span>&lt;span class="s">, &lt;/span>&lt;span class="si">{s}&lt;/span>&lt;span class="s">%, &lt;/span>&lt;span class="si">{l}&lt;/span>&lt;span class="s">%)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-15">&lt;a class="lnlinks" href="#hl-3-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-16">&lt;a class="lnlinks" href="#hl-3-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-17">&lt;a class="lnlinks" href="#hl-3-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">f32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-18">&lt;a class="lnlinks" href="#hl-3-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-19">&lt;a class="lnlinks" href="#hl-3-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-20">&lt;a class="lnlinks" href="#hl-3-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">u8&lt;/span>::&lt;span class="no">MAX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-21">&lt;a class="lnlinks" href="#hl-3-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-22">&lt;a class="lnlinks" href="#hl-3-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-23">&lt;a class="lnlinks" href="#hl-3-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">generate_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash&lt;/span>: &lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-24">&lt;a class="lnlinks" href="#hl-3-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-25">&lt;a class="lnlinks" href="#hl-3-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-26">&lt;a class="lnlinks" href="#hl-3-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">colors&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-27">&lt;a class="lnlinks" href="#hl-3-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cloned&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-28">&lt;a class="lnlinks" href="#hl-3-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-29">&lt;a class="lnlinks" href="#hl-3-29">29&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">collect&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-30">&lt;a class="lnlinks" href="#hl-3-30">30&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-31">&lt;a class="lnlinks" href="#hl-3-31">31&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">unimplemented!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Generate SVG paths.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-32">&lt;a class="lnlinks" href="#hl-3-32">32&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This code renders:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734519328367">
#figure-svg-1709398734519328367 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(133.58824, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(133.58824, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(201.08824, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(163.58824, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(163.58824, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(231.08824, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(208.58824, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(178.58824, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(231.08824, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(186.08824, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(148.58824, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(141.08824, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(126.08824, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(141.08824, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="hsl(148.58824, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(141.08824, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z"
fill="hsl(126.08824, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="hsl(148.58824, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="hsl(133.58824, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="hsl(171.08824, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="hsl(163.58824, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z"
fill="hsl(178.58824, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z"
fill="hsl(201.08824, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z"
fill="hsl(193.58824, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for &amp;quot;foo&amp;quot; with a theme.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>It looks rather good, if I say so myself. The solution works as it&amp;rsquo;s suppose to: it &lt;em>most probably&lt;/em> produces different
avatars for different identifiers (&lt;a
href="https://en.wikipedia.org/wiki/Hash_collision"
>hash collisions&lt;/a> do happen) and they look acceptable. However, the rings seem to
&lt;em>phase&lt;/em> into each other &amp;mdash; their colors are too similar. We could experiment with another theme: a ring theme &amp;mdash; which
would be a XOR-fold of all bytes that represent a single ring &amp;mdash; and check the results.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalized_theme&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_ring_theme&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-2">&lt;a class="lnlinks" href="#hl-4-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-3">&lt;a class="lnlinks" href="#hl-4-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-4">&lt;a class="lnlinks" href="#hl-4-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-5">&lt;a class="lnlinks" href="#hl-4-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-6">&lt;a class="lnlinks" href="#hl-4-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">16.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-7">&lt;a class="lnlinks" href="#hl-4-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-8">&lt;a class="lnlinks" href="#hl-4-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-9">&lt;a class="lnlinks" href="#hl-4-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-10">&lt;a class="lnlinks" href="#hl-4-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_theme&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-11">&lt;a class="lnlinks" href="#hl-4-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">120.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_ring_theme&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-12">&lt;a class="lnlinks" href="#hl-4-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">30.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-13">&lt;a class="lnlinks" href="#hl-4-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">20.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">80.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-14">&lt;a class="lnlinks" href="#hl-4-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">40.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">50.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-15">&lt;a class="lnlinks" href="#hl-4-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-16">&lt;a class="lnlinks" href="#hl-4-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">format!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hsl(&lt;/span>&lt;span class="si">{h}&lt;/span>&lt;span class="s">, &lt;/span>&lt;span class="si">{s}&lt;/span>&lt;span class="s">%, &lt;/span>&lt;span class="si">{l}&lt;/span>&lt;span class="s">%)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-17">&lt;a class="lnlinks" href="#hl-4-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-18">&lt;a class="lnlinks" href="#hl-4-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-19">&lt;a class="lnlinks" href="#hl-4-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">f32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-20">&lt;a class="lnlinks" href="#hl-4-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-21">&lt;a class="lnlinks" href="#hl-4-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">u8&lt;/span>::&lt;span class="no">MAX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-22">&lt;a class="lnlinks" href="#hl-4-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-23">&lt;a class="lnlinks" href="#hl-4-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-24">&lt;a class="lnlinks" href="#hl-4-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">generate_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash&lt;/span>: &lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-25">&lt;a class="lnlinks" href="#hl-4-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-26">&lt;a class="lnlinks" href="#hl-4-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ring_themes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-27">&lt;a class="lnlinks" href="#hl-4-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">windows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-28">&lt;a class="lnlinks" href="#hl-4-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calculate_theme&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-29">&lt;a class="lnlinks" href="#hl-4-29">29&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">collect&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-30">&lt;a class="lnlinks" href="#hl-4-30">30&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-31">&lt;a class="lnlinks" href="#hl-4-31">31&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">colors&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-32">&lt;a class="lnlinks" href="#hl-4-32">32&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-33">&lt;a class="lnlinks" href="#hl-4-33">33&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cloned&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-34">&lt;a class="lnlinks" href="#hl-4-34">34&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">enumerate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-35">&lt;a class="lnlinks" href="#hl-4-35">35&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ring_themes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-36">&lt;a class="lnlinks" href="#hl-4-36">36&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">collect&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-37">&lt;a class="lnlinks" href="#hl-4-37">37&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-38">&lt;a class="lnlinks" href="#hl-4-38">38&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">unimplemented!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Generate SVG paths.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-39">&lt;a class="lnlinks" href="#hl-4-39">39&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With the final touch we get:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734519585869">
#figure-svg-1709398734519585869 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(127.51471, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(127.51471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(144.38971, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(135.01471, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(135.01471, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(151.88971, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(146.26471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(138.76471, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(251.18384, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(239.93384, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(230.55884, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(228.68384, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(224.93384, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(228.68384, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="hsl(230.55884, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(228.68384, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z"
fill="hsl(167.05148, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="hsl(172.67648, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="hsl(168.92648, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="hsl(178.30148, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="hsl(176.42648, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z"
fill="hsl(180.17648, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z"
fill="hsl(185.80148, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z"
fill="hsl(183.92648, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for &amp;quot;foo&amp;quot; with a global theme and a ring theme.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Which is exactly the thing that hides in the spoiler block at the top. If you restrained yourself and didn&amp;rsquo;t check it
out: congratulations. Now feel free to do so. &amp;#x1f603;&lt;/p>
&lt;h2 id="conclusions" >
&lt;a href="#conclusions" aria-label="Anchor">#&lt;/a>
Conclusions
&lt;/h2>
&lt;p>Working on this blog post has been an effort I wanted to make to better understand how SVGs work from the inside, as
well as, a challenge to reverse-engineer ideas from &lt;a
href="https://francoisbest.com/posts/2021/hashvatars"
>Representing SHA-256 Hashes As Avatars&lt;/a>.&lt;/p>
&lt;p>I&amp;rsquo;m not working on any service which would benefit from these avatars. If I happen to work on one in the future I&amp;rsquo;ll for
sure like to try them out. To make this solution easier to re-use in other places, I&amp;rsquo;ve made a Rust crate called
&lt;a
href="https://crates.io/crates/svg_avatars"
>&lt;code>svg_avatars&lt;/code>&lt;/a>, which implements this exact solution. The crate is fairly minimal, so if anyone has any idea on how to
enhance it, I&amp;rsquo;d love to hear from you/check out your PRs.&lt;/p>
&lt;p>As a closing thought, one of the parameters of the &lt;a
href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands"
>absolute elliptical arc curve&lt;/a> command is the
&lt;code>sweep-flag&lt;/code> parameter. It allows you to determine, whether an arc should be a smiley face or a sad face. If the
parameter is &lt;code>1&lt;/code> &amp;mdash; as it is in our case &amp;mdash; then the arc is a sad face. However, if you&amp;rsquo;d flip the flags to be &lt;code>0&lt;/code>,
then all arcs become smiley faces&amp;hellip;&lt;/p>
&lt;figure>&lt;style id="figure-svg-1709398734519840472">
#figure-svg-1709398734519840472 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,0,0.70710677,-0.70710677 z" fill="hsl(127.51471, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,0,1,0 z" fill="hsl(127.51471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,0,0.70710677,0.70710677 z" fill="hsl(144.38971, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,0,0,1 z" fill="hsl(135.01471, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,0,-0.70710677,0.70710677 z" fill="hsl(135.01471, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,0,-1,0 z" fill="hsl(151.88971, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,0,-0.70710677,-0.70710677 z" fill="hsl(146.26471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,0,-0,-1 z" fill="hsl(138.76471, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,0,0.5243774,-0.5243774 z" fill="hsl(251.18384, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,0,0.7415816,0 z" fill="hsl(239.93384, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,0,0.5243774,0.5243774 z" fill="hsl(230.55884, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,0,0,0.7415816 z" fill="hsl(228.68384, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,0,-0.5243774,0.5243774 z" fill="hsl(224.93384, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,0,-0.7415816,0 z" fill="hsl(228.68384, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,0,-0.5243774,-0.5243774 z" fill="hsl(230.55884, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,0,-0,-0.7415816 z" fill="hsl(228.68384, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,0,0.32197526,-0.32197526 z"
fill="hsl(167.05148, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,0,0.45534182,0 z" fill="hsl(172.67648, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,0,0.32197526,0.32197526 z" fill="hsl(168.92648, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,0,0,0.45534182 z" fill="hsl(178.30148, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,0,-0.32197526,0.32197526 z" fill="hsl(176.42648, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,0,-0.45534182,0 z"
fill="hsl(180.17648, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,0,-0.32197526,-0.32197526 z"
fill="hsl(185.80148, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,0,-0,-0.45534182 z"
fill="hsl(183.92648, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>&lt;em>Smiley-face&lt;/em> avatar for &amp;quot;foo&amp;quot;.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>&amp;hellip;and the avatar &lt;a
href="https://en.wikipedia.org/wiki/Emergence"
>emerges&lt;/a> as a spiderweb. Who does not love a single-line-change feature for Spooktober.&lt;/p>
&lt;!-- Footnotes &amp; link definitions -->
&lt;!-- markdownlint-disable link-image-reference-definitions -->
&lt;!-- markdownlint-enable link-image-reference-definitions -->
&lt;!-- markdownlint-disable link-image-reference-definitions -->
&lt;!-- markdownlint-enable link-image-reference-definitions -->
&lt;!-- markdownlint-disable link-image-reference-definitions -->
&lt;!-- markdownlint-enable link-image-reference-definitions --></description></item><item><title>Performance Analysis of Python's `dict()` and `{}`</title><link>https://madebyme.today/blog/python-dict-vs-curly-brackets/</link><pubDate>Mon, 22 Jan 2024 19:34:37 +0100</pubDate><guid>https://madebyme.today/blog/python-dict-vs-curly-brackets/</guid><category>Python</category><category>CPython</category><category>dictionaries</category><description>&lt;p>Some time ago, during a code review, I had a discussion with a colleague of mine about preferring &lt;code>dict()&lt;/code> over &lt;code>{}&lt;/code> in
new Python code. They argued that &lt;code>dict()&lt;/code> is more readable &amp;mdash; and expresses intent more clearly &amp;mdash; therefore should
be preferred. I wasn&amp;rsquo;t convinced by that, but at that time I didn&amp;rsquo;t have any counterarguments, so I passed.&lt;/p>
&lt;p>Yet that made me wonder: what&amp;rsquo;s the difference between the &lt;code>dict&lt;/code> type and &lt;code>{}&lt;/code> literal expression?&lt;/p>
&lt;p>Let&amp;rsquo;s go down the rabbit hole.&lt;/p>
&lt;div class="alert alert-info">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-pencil me-2" aria-hidden="true">&lt;/i>
Note
&lt;/h6>
&lt;p class="my-3">
I&amp;rsquo;ll be using &lt;a
href="https://www.python.org/downloads/release/python-3120/"
>Python 3.12&lt;/a> for all code samples here. This is &lt;strong>really important&lt;/strong>, as there are
&lt;a
href="https://docs.python.org/3.12/whatsnew/changelog.html"
>significant differences&lt;/a> between recent minor Python versions.
&lt;/p>
&lt;/div>
&lt;h2 id="pythons-dictionaries" >
&lt;a href="#pythons-dictionaries" aria-label="Anchor">#&lt;/a>
Python&amp;rsquo;s dictionaries
&lt;/h2>
&lt;p>First, let&amp;rsquo;s check what&amp;rsquo;s the performance difference between the two methods. I&amp;rsquo;ll use the &lt;a
href="https://docs.python.org/3.12/library/timeit.html"
>&lt;code>timeit&lt;/code>&lt;/a>
module for that.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">$ python -m timeit &lt;span class="s2">&amp;#34;dict()&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="m">10000000&lt;/span> loops, best of 5: &lt;span class="m">40&lt;/span> nsec per loop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">$ python -m timeit &lt;span class="s2">&amp;#34;{}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="m">20000000&lt;/span> loops, best of 5: 19.6 nsec per loop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On my MacBook M1 the difference is &lt;strong>almost 2x&lt;/strong>. A non-trivial difference, especially knowing that both of these
expressions produce the exact same object.&lt;/p>
&lt;p>Where does the difference come from?&lt;/p>
&lt;p>Before we get into that, we need to sidetrack a little bit and talk about what happens when you execute Python code.
Python is an &lt;a
href="https://en.wikipedia.org/wiki/Scripting_language"
>interpreted language&lt;/a> &amp;mdash; it needs to have an interpreter. &lt;a
href="https://github.com/python/cpython/tree/v3.12.0"
>CPython&lt;/a> is
the most wildly used interpreter of Python; it&amp;rsquo;s a reference implementation, meaning that other interpreters use it to
determine the &amp;ldquo;correct&amp;rdquo; behavior. If you&amp;rsquo;ve installed Python from a default distribution, you have CPython installed on
your machine.&lt;/p>
&lt;p>Interestingly, CPython is both a compiler and an interpreter. When executing Python code it first compiles it into
&lt;a
href="https://docs.python.org/3.12/library/dis.html#python-bytecode-instructions"
>bytecode&lt;/a> instructions and interprets them.&lt;/p>
&lt;p>To better understand the performance difference between &lt;code>dist()&lt;/code> and &lt;code>{}&lt;/code> let&amp;rsquo;s compare the bytecode instructions they
compile into. Python has a built-in module called &lt;a
href="https://docs.python.org/3.12/library/dis.html"
>dis&lt;/a> which does exactly that.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="nn">dis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">a&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">...&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">b&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">...&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">dis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9"> 9&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">1&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="n">RESUME&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-10">&lt;a class="lnlinks" href="#hl-1-10">10&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-11">&lt;a class="lnlinks" href="#hl-1-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">2&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="n">LOAD_GLOBAL&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NULL&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-12">&lt;a class="lnlinks" href="#hl-1-12">12&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">12&lt;/span> &lt;span class="n">CALL&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-13">&lt;a class="lnlinks" href="#hl-1-13">13&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">20&lt;/span> &lt;span class="n">RETURN_VALUE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-14">&lt;a class="lnlinks" href="#hl-1-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">dis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-15">&lt;a class="lnlinks" href="#hl-1-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">1&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="n">RESUME&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-16">&lt;a class="lnlinks" href="#hl-1-16">16&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-17">&lt;a class="lnlinks" href="#hl-1-17">17&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">2&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="n">BUILD_MAP&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-18">&lt;a class="lnlinks" href="#hl-1-18">18&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">4&lt;/span> &lt;span class="n">RETURN_VALUE&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Although they produce the same end result these two expression, quite clearly, execute different code.&lt;/p>
&lt;h3 id="bytecode-instructions" >
&lt;a href="#bytecode-instructions" aria-label="Anchor">#&lt;/a>
Bytecode instructions
&lt;/h3>
&lt;p>The output of &lt;code>dis.dis&lt;/code> isn&amp;rsquo;t very hard to understand.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1">1&lt;/a>&lt;/span>&lt;span class="cl"> (1) | (2) | (3) | (4) | (5)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2">2&lt;/a>&lt;/span>&lt;span class="cl">-----|-----------|-----------------------|-----|---------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3">3&lt;/a>&lt;/span>&lt;span class="cl"> 1 | 0 | RESUME | 0 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4">4&lt;/a>&lt;/span>&lt;span class="cl"> | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-5">&lt;a class="lnlinks" href="#hl-2-5">5&lt;/a>&lt;/span>&lt;span class="cl"> 2 | 2 | LOAD_GLOBAL | 1 | (NULL + dict)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-6">&lt;a class="lnlinks" href="#hl-2-6">6&lt;/a>&lt;/span>&lt;span class="cl"> | 12 | CALL | 0 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-7">&lt;a class="lnlinks" href="#hl-2-7">7&lt;/a>&lt;/span>&lt;span class="cl"> | 20 | RETURN_VALUE | |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each column has a purpose:&lt;/p>
&lt;ol>
&lt;li>Line number in the source code.&lt;/li>
&lt;li>The address of the instruction &amp;mdash; byte index in the compiled bytecode.&lt;/li>
&lt;li>The bytecode name (opcode).&lt;/li>
&lt;li>Operation parameters.&lt;/li>
&lt;li>Human-readable interpretation of the operation parameters.&lt;/li>
&lt;/ol>
&lt;p>Alright, equipped with this knowledge and by cross-referencing the &lt;a
href="https://docs.python.org/3.12/library/dis.html#python-bytecode-instructions"
>opcode set&lt;/a> we know that:&lt;/p>
&lt;ol>
&lt;li>&lt;a
href="https://docs.python.org/3.12/library/dis.html#opcode-RESUME"
>&lt;code>RESUME&lt;/code>&lt;/a> &amp;mdash; does nothing. It performs internal tracking, debugging and optimization checks.&lt;/li>
&lt;li>&lt;a
href="https://docs.python.org/3.12/library/dis.html#opcode-LOAD_GLOBAL"
>&lt;code>LOAD_GLOBAL&lt;/code>&lt;/a> &amp;mdash; loads a global variable onto the stack. From the human-readable interpretation of the opcode
parameters we know that it loads &lt;code>dict&lt;/code> (ignore &lt;code>NULL&lt;/code> for now).&lt;/li>
&lt;li>&lt;a
href="https://docs.python.org/3.12/library/dis.html#opcode-CALL"
>&lt;code>CALL&lt;/code>&lt;/a> &amp;mdash; calls a callable object with the number of arguments specified by &lt;code>argc&lt;/code> &amp;mdash; in our case it&amp;rsquo;s zero.&lt;/li>
&lt;li>&lt;a
href="https://docs.python.org/3.12/library/dis.html#opcode-RETURN_VALUE"
>&lt;code>RETURN_VALUE&lt;/code>&lt;/a> &amp;mdash; returns with the last element from the stack to the caller.&lt;/li>
&lt;/ol>
&lt;p>Compiling &lt;code>return {}&lt;/code> yields one more opcode:&lt;/p>
&lt;!-- markdownlint-disable ol-prefix -->
&lt;ol start="5">
&lt;li>&lt;a
href="https://docs.python.org/3.12/library/dis.html#opcode-BUILD_MAP"
>&lt;code>BUILD_MAP&lt;/code>&lt;/a> &amp;mdash; pushes a new dictionary object onto the stack. Pops &lt;code>2 * count&lt;/code> items so that the dictionary holds
count entries.&lt;/li>
&lt;/ol>
&lt;!-- markdownlint-enable ol-prefix -->
&lt;p>Already we have a few obvious differences between the two cases. The &lt;code>{}&lt;/code> expression builds a dictionary directly, while
&lt;code>dict()&lt;/code> delegates that to a callable object. Before that can even happen it first needs to load the global value
(&lt;code>dict&lt;/code>) onto the stack &amp;mdash; it actually does that every single time we call that function.&lt;/p>
&lt;p>Why?&lt;/p>
&lt;p>Because &lt;code>dict&lt;/code> is not constant: it can be overwritten &amp;mdash; and therefore &amp;mdash; produce a different value.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">a&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">...&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="nb">dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">lambda&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">42&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="k">assert&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">42&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can happen. This is why Python needs to generate this overhead of loading and calling a callable for every call of
the function.&lt;/p>
&lt;p>OK, it all sound very neat. Calling a callable does create an overhead and it&amp;rsquo;s reasonable to assume that the difference
we saw at the beginning of this post is a result of this overhead. However, are we sure that &lt;code>dict()&lt;/code> internally calls
the same code, as &lt;code>{}&lt;/code> does? &lt;code>dict&lt;/code> is a class and, luckily, the &lt;a
href="https://docs.python.org/3/library/dis.html#dis.dis"
>&lt;code>dis.dis&lt;/code>&lt;/a> function can compile classes to bytecode.&lt;/p>
&lt;div class="alert alert-info">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-pencil me-2" aria-hidden="true">&lt;/i>
Example
&lt;/h6>
&lt;p class="my-3">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">dis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Foo&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">bar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5"> 5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">42&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7"> 7&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__str__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-8">&lt;a class="lnlinks" href="#hl-0-8"> 8&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="vm">__class__&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="vm">__name__&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-9">&lt;a class="lnlinks" href="#hl-0-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-10">&lt;a class="lnlinks" href="#hl-0-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">dis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Foo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It prints out disassembly for all of the classes&amp;rsquo;s methods:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-txt" data-lang="txt">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">Disassembly of __str__:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2"> 2&lt;/a>&lt;/span>&lt;span class="cl"> 8 0 RESUME 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> 9 2 LOAD_FAST 0 (self)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5"> 5&lt;/a>&lt;/span>&lt;span class="cl"> 4 LOAD_ATTR 0 (__class__)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6"> 6&lt;/a>&lt;/span>&lt;span class="cl"> 24 LOAD_ATTR 2 (__name__)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7"> 7&lt;/a>&lt;/span>&lt;span class="cl"> 44 RETURN_VALUE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">Disassembly of bar:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-10">&lt;a class="lnlinks" href="#hl-1-10">10&lt;/a>&lt;/span>&lt;span class="cl"> 5 0 RESUME 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-11">&lt;a class="lnlinks" href="#hl-1-11">11&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-12">&lt;a class="lnlinks" href="#hl-1-12">12&lt;/a>&lt;/span>&lt;span class="cl"> 6 2 RETURN_CONST 1 (42)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;/div>
&lt;p>Let&amp;rsquo;s try this for &lt;code>dict&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">dis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">dict&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-2">&lt;a class="lnlinks" href="#hl-4-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip; it doesn&amp;rsquo;t print anything? Why?&lt;/p>
&lt;p>Well, the &lt;a
href="https://docs.python.org/3.12/library/dis.html"
>dis&lt;/a> module isn&amp;rsquo;t very useful for internal types and &lt;code>dict&lt;/code> is one of those types &amp;mdash; defined
within the interpreter&amp;rsquo;s source code.&lt;/p>
&lt;h3 id="getting-lost-in-the-cpython-source-code" >
&lt;a href="#getting-lost-in-the-cpython-source-code" aria-label="Anchor">#&lt;/a>
Getting lost in the CPython source code
&lt;/h3>
&lt;p>To tap into the forbidden magic, we need to clone the &lt;a
href="https://github.com/python/cpython/tree/main"
>CPython repository&lt;/a> first. We don&amp;rsquo;t need all the
history, so let&amp;rsquo;s &lt;a
href="https://git-scm.com/docs/git-clone#Documentation/git-clone.txt---depthltdepthgt"
>&lt;code>--depth 1&lt;/code>&lt;/a> this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="ln" id="hl-5-1">&lt;a class="lnlinks" href="#hl-5-1">1&lt;/a>&lt;/span>&lt;span class="cl">git clone --depth &lt;span class="m">1&lt;/span> --branch v3.12.0 https://github.com/python/cpython.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-2">&lt;a class="lnlinks" href="#hl-5-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-3">&lt;a class="lnlinks" href="#hl-5-3">3&lt;/a>&lt;/span>&lt;span class="cl">git clone --depth &lt;span class="m">1&lt;/span> --branch v3.12.0 git@github.com:python/cpython.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then we need to find what we&amp;rsquo;re actually looking for &amp;mdash; a place where opcode instructions are interpreted. After a cup
of coffee and a lot of greps later we find the &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Python/bytecodes.c"
>&lt;code>Python/bytecodes.c&lt;/code>&lt;/a> file. It consists of a single &lt;code>switch&lt;/code>
statement and it seems like all bytecode instruction are interpreted there.&lt;/p>
&lt;h4 id="the-dict-type" >
&lt;a href="#the-dict-type" aria-label="Anchor">#&lt;/a>
The &lt;code>dict&lt;/code> type
&lt;/h4>
&lt;p>Let&amp;rsquo;s tackle &lt;code>dict&lt;/code> first. All internal types are defined as &lt;code>PyTypeObject&lt;/code> objects and the &lt;code>dict&lt;/code> type is defined in
the &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L3839"
>&lt;code>dictobject.c&lt;/code>&lt;/a> file. It has a lot of attributes defined, but only two are of interest
for us:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-6-1">&lt;a class="lnlinks" href="#hl-6-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">PyTypeObject&lt;/span> &lt;span class="n">PyDict_Type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-2">&lt;a class="lnlinks" href="#hl-6-2"> 2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">PyVarObject_HEAD_INIT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">PyType_Type&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-3">&lt;a class="lnlinks" href="#hl-6-3"> 3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="s">&amp;#34;dict&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-4">&lt;a class="lnlinks" href="#hl-6-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PyDictObject&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-5">&lt;a class="lnlinks" href="#hl-6-5"> 5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-6">&lt;a class="lnlinks" href="#hl-6-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">dict_init&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_init */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-7">&lt;a class="lnlinks" href="#hl-6-7"> 7&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-8">&lt;a class="lnlinks" href="#hl-6-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">dict_new&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_new */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-9">&lt;a class="lnlinks" href="#hl-6-9"> 9&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-10">&lt;a class="lnlinks" href="#hl-6-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The pair (&lt;code>dict_new&lt;/code> and &lt;code>dict_init&lt;/code>) will tell us what happens when someone creates a new dictionary.&lt;/p>
&lt;div class="alert alert-info">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-pencil me-2" aria-hidden="true">&lt;/i>
Note
&lt;/h6>
&lt;p class="my-3">
&lt;p>The constructor in Python is called &lt;code>__new__&lt;/code>. It&amp;rsquo;s a static method that returns a new object of its type.&lt;/p>
&lt;p>The initializer method is called &lt;code>__init__&lt;/code>. It takes a newly created object and initializes its attributes. The
&lt;code>__init__&lt;/code>method is called after the &lt;code>__new__&lt;/code> method.&lt;/p>
&lt;/p>
&lt;/div>
&lt;p>The &lt;code>dict_new&lt;/code> function is defined here: &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L3751"
>dictobject.c#L3751&lt;/a>.&lt;/p>
&lt;!-- markdownlint-disable fenced-code-language -->
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-7-1">&lt;a class="lnlinks" href="#hl-7-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-2">&lt;a class="lnlinks" href="#hl-7-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nf">dict_new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PyTypeObject&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PyObject&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">kwds&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-3">&lt;a class="lnlinks" href="#hl-7-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-4">&lt;a class="lnlinks" href="#hl-7-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">assert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-5">&lt;a class="lnlinks" href="#hl-7-5"> 5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">assert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">tp_alloc&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-6">&lt;a class="lnlinks" href="#hl-7-6"> 6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// dict subclasses must implement the GC protocol
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-7">&lt;a class="lnlinks" href="#hl-7-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">assert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">_PyType_IS_GC&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-8">&lt;a class="lnlinks" href="#hl-7-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-9">&lt;a class="lnlinks" href="#hl-7-9"> 9&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">self&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nf">tp_alloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-10">&lt;a class="lnlinks" href="#hl-7-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">self&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-11">&lt;a class="lnlinks" href="#hl-7-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-12">&lt;a class="lnlinks" href="#hl-7-12">12&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-13">&lt;a class="lnlinks" href="#hl-7-13">13&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyDictObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">PyDictObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-14">&lt;a class="lnlinks" href="#hl-7-14">14&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="ln" id="hl-7-15">&lt;a class="lnlinks" href="#hl-7-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">d&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ma_used&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-16">&lt;a class="lnlinks" href="#hl-7-16">16&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">d&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ma_version_tag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">DICT_NEXT_VERSION&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-17">&lt;a class="lnlinks" href="#hl-7-17">17&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">_PyInterpreterState_GET&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-18">&lt;a class="lnlinks" href="#hl-7-18">18&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">dictkeys_incref&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Py_EMPTY_KEYS&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="ln" id="hl-7-19">&lt;a class="lnlinks" href="#hl-7-19">19&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">d&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ma_keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Py_EMPTY_KEYS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="ln" id="hl-7-20">&lt;a class="lnlinks" href="#hl-7-20">20&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">d&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ma_values&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-21">&lt;a class="lnlinks" href="#hl-7-21">21&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">ASSERT_CONSISTENT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-22">&lt;a class="lnlinks" href="#hl-7-22">22&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-23">&lt;a class="lnlinks" href="#hl-7-23">23&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-24">&lt;a class="lnlinks" href="#hl-7-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-25">&lt;a class="lnlinks" href="#hl-7-25">25&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">self&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-26">&lt;a class="lnlinks" href="#hl-7-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- markdownlint-enable fenced-code-language -->
&lt;p>We see that first, it allocates a new object via the provided allocator (9&lt;sup>th&lt;/sup> line) and then sets
some of its internal fields (15&lt;sup>th&lt;/sup>, 19&lt;sup>th&lt;/sup>, and 20&lt;sup>th&lt;/sup>).
Interestingly for us, it &lt;strong>does not&lt;/strong> pre-allocate the dictionary&amp;rsquo;s internal memory (see marked lines). It might seems
strange at first, but please remember: an object&amp;rsquo;s initialization &amp;mdash; like memory pre-allocation &amp;mdash; is not a
responsibility of the &lt;code>__new__&lt;/code> method, that what the &lt;code>__init__&lt;/code> method is for.&lt;/p>
&lt;p>With the new object in memory, the &lt;code>dict_init&lt;/code> function can insert entries to it. The insertion logic is delegated to
the &lt;code>dict_update_common&lt;/code> function, which can be found here: &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L2678"
>dictobject.c#L2678&lt;/a>.&lt;/p>
&lt;!-- markdownlint-disable fenced-code-language -->
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-8-1">&lt;a class="lnlinks" href="#hl-8-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-2">&lt;a class="lnlinks" href="#hl-8-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nf">dict_update_common&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">kwds&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-3">&lt;a class="lnlinks" href="#hl-8-3"> 3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">methname&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-4">&lt;a class="lnlinks" href="#hl-8-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-5">&lt;a class="lnlinks" href="#hl-8-5"> 5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">arg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-6">&lt;a class="lnlinks" href="#hl-8-6"> 6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-7">&lt;a class="lnlinks" href="#hl-8-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-8">&lt;a class="lnlinks" href="#hl-8-8"> 8&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nf">PyArg_UnpackTuple&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methname&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-9">&lt;a class="lnlinks" href="#hl-8-9"> 9&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-10">&lt;a class="lnlinks" href="#hl-8-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-11">&lt;a class="lnlinks" href="#hl-8-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="ln" id="hl-8-12">&lt;a class="lnlinks" href="#hl-8-12">12&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">dict_update_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arg&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-13">&lt;a class="lnlinks" href="#hl-8-13">13&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-14">&lt;a class="lnlinks" href="#hl-8-14">14&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-15">&lt;a class="lnlinks" href="#hl-8-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">kwds&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-16">&lt;a class="lnlinks" href="#hl-8-16">16&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">PyArg_ValidateKeywordArguments&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">kwds&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="ln" id="hl-8-17">&lt;a class="lnlinks" href="#hl-8-17">17&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">PyDict_Merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">kwds&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-18">&lt;a class="lnlinks" href="#hl-8-18">18&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-19">&lt;a class="lnlinks" href="#hl-8-19">19&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-20">&lt;a class="lnlinks" href="#hl-8-20">20&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-21">&lt;a class="lnlinks" href="#hl-8-21">21&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-22">&lt;a class="lnlinks" href="#hl-8-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- markdownlint-enable fenced-code-language -->
&lt;p>It updates the dictionary from both args and kwargs.&lt;/p>
&lt;h5 id="args--dict_update_arg" >
&lt;a href="#args--dict_update_arg" aria-label="Anchor">#&lt;/a>
args &amp;amp; &lt;code>dict_update_arg&lt;/code>
&lt;/h5>
&lt;p>For &lt;code>args&lt;/code> it calls the &lt;code>dict_update_arg&lt;/code> function.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-9-1">&lt;a class="lnlinks" href="#hl-9-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-2">&lt;a class="lnlinks" href="#hl-9-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nf">dict_update_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-3">&lt;a class="lnlinks" href="#hl-9-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-4">&lt;a class="lnlinks" href="#hl-9-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">PyDict_CheckExact&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-5">&lt;a class="lnlinks" href="#hl-9-5"> 5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nf">PyDict_Merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-6">&lt;a class="lnlinks" href="#hl-9-6"> 6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-7">&lt;a class="lnlinks" href="#hl-9-7"> 7&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">func&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-8">&lt;a class="lnlinks" href="#hl-9-8"> 8&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">_PyObject_LookupAttr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nf">_Py_ID&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">func&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-9">&lt;a class="lnlinks" href="#hl-9-9"> 9&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-10">&lt;a class="lnlinks" href="#hl-9-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-11">&lt;a class="lnlinks" href="#hl-9-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">func&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-12">&lt;a class="lnlinks" href="#hl-9-12">12&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">Py_DECREF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">func&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-13">&lt;a class="lnlinks" href="#hl-9-13">13&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nf">PyDict_Merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-14">&lt;a class="lnlinks" href="#hl-9-14">14&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-15">&lt;a class="lnlinks" href="#hl-9-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nf">PyDict_MergeFromSeq2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-16">&lt;a class="lnlinks" href="#hl-9-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The function checks if &lt;code>arg&lt;/code> is a dictionary, if so it merges the two (&lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L2988"
>&lt;code>PyDict_Merge&lt;/code>&lt;/a>), otherwise it adds new entries
from a sequence of pairs (&lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L2722"
>&lt;code>PyDict_MergeFromSeq2&lt;/code>&lt;/a>).&lt;/p>
&lt;h5 id="kwargs--pydict_merge" >
&lt;a href="#kwargs--pydict_merge" aria-label="Anchor">#&lt;/a>
kwargs &amp;amp; &lt;code>PyDict_Merge&lt;/code>
&lt;/h5>
&lt;p>The &lt;code>kwargs&lt;/code> path ends in the same place &amp;mdash; &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L2988"
>&lt;code>PyDict_Merge&lt;/code>&lt;/a>. Let&amp;rsquo;s take a look.&lt;/p>
&lt;p>Internally, it delegates all logic to the &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L2807"
>&lt;code>dict_merge&lt;/code>&lt;/a> function.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-10-1">&lt;a class="lnlinks" href="#hl-10-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-2">&lt;a class="lnlinks" href="#hl-10-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nf">dict_merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PyInterpreterState&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">interp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">override&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-3">&lt;a class="lnlinks" href="#hl-10-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-4">&lt;a class="lnlinks" href="#hl-10-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyDictObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">mp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">other&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-5">&lt;a class="lnlinks" href="#hl-10-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-6">&lt;a class="lnlinks" href="#hl-10-6"> 6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">assert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">override&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">override&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-7">&lt;a class="lnlinks" href="#hl-10-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-8">&lt;a class="lnlinks" href="#hl-10-8"> 8&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="cm">/* We accept for the argument either a concrete dictionary object,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-9">&lt;a class="lnlinks" href="#hl-10-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cm"> * or an abstract &amp;#34;mapping&amp;#34; object. For the former, we can do
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-10">&lt;a class="lnlinks" href="#hl-10-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cm"> * things quite efficiently. For the latter, we only require that
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-11">&lt;a class="lnlinks" href="#hl-10-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cm"> * PyMapping_Keys() and PyObject_GetItem() be supported.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-12">&lt;a class="lnlinks" href="#hl-10-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-13">&lt;a class="lnlinks" href="#hl-10-13">13&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nf">PyDict_Check&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-14">&lt;a class="lnlinks" href="#hl-10-14">14&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">PyErr_BadInternalCall&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-15">&lt;a class="lnlinks" href="#hl-10-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-16">&lt;a class="lnlinks" href="#hl-10-16">16&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-17">&lt;a class="lnlinks" href="#hl-10-17">17&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">mp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">PyDictObject&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-18">&lt;a class="lnlinks" href="#hl-10-18">18&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">PyDict_Check&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">Py_TYPE&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">tp_iter&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">getiterfunc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">dict_iter&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-19">&lt;a class="lnlinks" href="#hl-10-19">19&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-20">&lt;a class="lnlinks" href="#hl-10-20">20&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-21">&lt;a class="lnlinks" href="#hl-10-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-22">&lt;a class="lnlinks" href="#hl-10-22">22&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="cm">/* Do it the generic, slower way */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-23">&lt;a class="lnlinks" href="#hl-10-23">23&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-24">&lt;a class="lnlinks" href="#hl-10-24">24&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-25">&lt;a class="lnlinks" href="#hl-10-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-26">&lt;a class="lnlinks" href="#hl-10-26">26&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">ASSERT_CONSISTENT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-27">&lt;a class="lnlinks" href="#hl-10-27">27&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-10-28">&lt;a class="lnlinks" href="#hl-10-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From the comment, we know that the function has been optimized for being called with another dictionary as a parameter.
If the parameter is not a dictionary, then it&amp;rsquo;s a generic &lt;a
href="https://docs.python.org/3.12/library/collections.abc.html#collections.abc.Mapping"
>&lt;code>Mapping&lt;/code>&lt;/a> &amp;mdash; a container object that supports arbitrary key
lookups.&lt;/p>
&lt;h4 id="the--expression" >
&lt;a href="#the--expression" aria-label="Anchor">#&lt;/a>
The &lt;code>{}&lt;/code> expression
&lt;/h4>
&lt;p>The literal expression should be easier to reason about. Let&amp;rsquo;s go back to the &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Python/bytecodes.c"
>bytecode.c&lt;/a> file and find mapping for the
&lt;code>BUILD_MAP&lt;/code> opcode.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-11-1">&lt;a class="lnlinks" href="#hl-11-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nf">inst&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">BUILD_MAP&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">oparg&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="n">map&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-2">&lt;a class="lnlinks" href="#hl-11-2"> 2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">map&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">_PyDict_FromItems&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-3">&lt;a class="lnlinks" href="#hl-11-3"> 3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">values&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-4">&lt;a class="lnlinks" href="#hl-11-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">values&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-5">&lt;a class="lnlinks" href="#hl-11-5"> 5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">oparg&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-6">&lt;a class="lnlinks" href="#hl-11-6"> 6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">map&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-7">&lt;a class="lnlinks" href="#hl-11-7"> 7&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">goto&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-8">&lt;a class="lnlinks" href="#hl-11-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-9">&lt;a class="lnlinks" href="#hl-11-9"> 9&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">DECREF_INPUTS&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-10">&lt;a class="lnlinks" href="#hl-11-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">ERROR_IF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">map&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-11-11">&lt;a class="lnlinks" href="#hl-11-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>See sources here: &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Python/bytecodes.c#L1541"
>bytecode.c#L1541&lt;/a>.&lt;/em>&lt;/p>
&lt;p>We see that the dictionary is fully constructed and returned by &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L1616"
>&lt;code>_PyDict_FromItems&lt;/code>&lt;/a>. Let&amp;rsquo;s go there.&lt;/p>
&lt;!-- markdownlint-disable fenced-code-language -->
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-12-1">&lt;a class="lnlinks" href="#hl-12-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-2">&lt;a class="lnlinks" href="#hl-12-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nf">_PyDict_FromItems&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">keys&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Py_ssize_t&lt;/span> &lt;span class="n">keys_offset&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-3">&lt;a class="lnlinks" href="#hl-12-3"> 3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Py_ssize_t&lt;/span> &lt;span class="n">values_offset&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-4">&lt;a class="lnlinks" href="#hl-12-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">Py_ssize_t&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-5">&lt;a class="lnlinks" href="#hl-12-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-6">&lt;a class="lnlinks" href="#hl-12-6"> 6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="kt">bool&lt;/span> &lt;span class="n">unicode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-7">&lt;a class="lnlinks" href="#hl-12-7"> 7&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">keys&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-8">&lt;a class="lnlinks" href="#hl-12-8"> 8&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyInterpreterState&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">interp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">_PyInterpreterState_GET&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-9">&lt;a class="lnlinks" href="#hl-12-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-10">&lt;a class="lnlinks" href="#hl-12-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Py_ssize_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-11">&lt;a class="lnlinks" href="#hl-12-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nf">PyUnicode_CheckExact&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">ks&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-12">&lt;a class="lnlinks" href="#hl-12-12">12&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">unicode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-13">&lt;a class="lnlinks" href="#hl-12-13">13&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-14">&lt;a class="lnlinks" href="#hl-12-14">14&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-15">&lt;a class="lnlinks" href="#hl-12-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">ks&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">keys_offset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-16">&lt;a class="lnlinks" href="#hl-12-16">16&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-17">&lt;a class="lnlinks" href="#hl-12-17">17&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="ln" id="hl-12-18">&lt;a class="lnlinks" href="#hl-12-18">18&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">dict_new_presized&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">interp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">unicode&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-19">&lt;a class="lnlinks" href="#hl-12-19">19&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">dict&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-20">&lt;a class="lnlinks" href="#hl-12-20">20&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-21">&lt;a class="lnlinks" href="#hl-12-21">21&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-22">&lt;a class="lnlinks" href="#hl-12-22">22&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-23">&lt;a class="lnlinks" href="#hl-12-23">23&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">ks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">keys&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-24">&lt;a class="lnlinks" href="#hl-12-24">24&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">vs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">values&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-25">&lt;a class="lnlinks" href="#hl-12-25">25&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-26">&lt;a class="lnlinks" href="#hl-12-26">26&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Py_ssize_t&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-27">&lt;a class="lnlinks" href="#hl-12-27">27&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ks&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-28">&lt;a class="lnlinks" href="#hl-12-28">28&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">vs&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-29">&lt;a class="lnlinks" href="#hl-12-29">29&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">PyDict_SetItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-30">&lt;a class="lnlinks" href="#hl-12-30">30&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">Py_DECREF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dict&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-31">&lt;a class="lnlinks" href="#hl-12-31">31&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-32">&lt;a class="lnlinks" href="#hl-12-32">32&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-33">&lt;a class="lnlinks" href="#hl-12-33">33&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">ks&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">keys_offset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-34">&lt;a class="lnlinks" href="#hl-12-34">34&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">vs&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">values_offset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-35">&lt;a class="lnlinks" href="#hl-12-35">35&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-36">&lt;a class="lnlinks" href="#hl-12-36">36&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-37">&lt;a class="lnlinks" href="#hl-12-37">37&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">dict&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-12-38">&lt;a class="lnlinks" href="#hl-12-38">38&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- markdownlint-enable fenced-code-language -->
&lt;p>I&amp;rsquo;ve marked the most interesting line: in opposition to &lt;code>dict_new&lt;/code>, it &lt;strong>pre-allocates&lt;/strong> the dictionary, so it already
has a capacity for all of its entries. After that it inserts key-value pairs one-by-one.&lt;/p>
&lt;h2 id="conclusions" >
&lt;a href="#conclusions" aria-label="Anchor">#&lt;/a>
Conclusions
&lt;/h2>
&lt;p>To sum things up.&lt;/p>
&lt;p>When you do &lt;code>dict(a=1, b=2)&lt;/code>, Python needs to:&lt;/p>
&lt;ul>
&lt;li>allocate a new &lt;code>PyObject&lt;/code>,&lt;/li>
&lt;li>construct a &lt;code>dict&lt;/code> via the &lt;code>__new__&lt;/code> method,&lt;/li>
&lt;li>call its &lt;code>__init__&lt;/code> method, which internally calls &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L2988"
>&lt;code>PyDict_Merge&lt;/code>&lt;/a>,&lt;/li>
&lt;li>because &lt;code>kwargs&lt;/code> is not &lt;code>dict&lt;/code>, &lt;a
href="https://github.com/python/cpython/blob/v3.12.0/Objects/dictobject.c#L2988"
>&lt;code>PyDict_Merge&lt;/code>&lt;/a> needs to use the slower method, which inserts entries one-by-one.&lt;/li>
&lt;/ul>
&lt;p>Whereas doing &lt;code>{}&lt;/code> causes Python to:&lt;/p>
&lt;ul>
&lt;li>construct a new &lt;strong>pre-allocated&lt;/strong> dictionary,&lt;/li>
&lt;li>insert entries one-by-one.&lt;/li>
&lt;/ul>
&lt;p>To be fair, unless you construct dictionaries in a loop, I don&amp;rsquo;t believe there&amp;rsquo;s a lot to gain performance-wise by
switching from &lt;code>dict&lt;/code> to &lt;code>{}&lt;/code>. There&amp;rsquo;s one thing I&amp;rsquo;d like you to remember after reading this post:&lt;/p>
&lt;div class="alert alert-info">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-clipboard2-fill me-2" aria-hidden="true">&lt;/i>
tl;dr
&lt;/h6>
&lt;p class="my-3">
The &lt;code>{}&lt;/code> is always faster than &lt;code>dict&lt;/code>.
&lt;/p>
&lt;/div>
&lt;h2 id="appendix" >
&lt;a href="#appendix" aria-label="Anchor">#&lt;/a>
Appendix
&lt;/h2>
&lt;p>Similar analysis can be done for lists, sets, and (&lt;em>possibly&lt;/em>) tuples. However, this post is already too long, so I&amp;rsquo;ll
drop all the other resources I&amp;rsquo;ve gathered here.&lt;/p>
&lt;h3 id="lists" >
&lt;a href="#lists" aria-label="Anchor">#&lt;/a>
Lists
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="ln" id="hl-13-1">&lt;a class="lnlinks" href="#hl-13-1">1&lt;/a>&lt;/span>&lt;span class="cl">$ python -m timeit &lt;span class="s2">&amp;#34;list((1, 2, &amp;#39;a&amp;#39;))&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-13-2">&lt;a class="lnlinks" href="#hl-13-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="m">5000000&lt;/span> loops, best of 5: 53.4 nsec per loop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-13-3">&lt;a class="lnlinks" href="#hl-13-3">3&lt;/a>&lt;/span>&lt;span class="cl">$ python -m timeit &lt;span class="s2">&amp;#34;[1, 2, &amp;#39;a&amp;#39;]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-13-4">&lt;a class="lnlinks" href="#hl-13-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="m">10000000&lt;/span> loops, best of 5: 29.7 nsec per loop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="list-type" >
&lt;a href="#list-type" aria-label="Anchor">#&lt;/a>
&lt;code>list&lt;/code> type
&lt;/h4>
&lt;p>The Python&amp;rsquo;s &lt;code>list&lt;/code> type is defined in the &lt;code>listobject.c&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-14-1">&lt;a class="lnlinks" href="#hl-14-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">PyTypeObject&lt;/span> &lt;span class="n">PyList_Type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-14-2">&lt;a class="lnlinks" href="#hl-14-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-14-3">&lt;a class="lnlinks" href="#hl-14-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">initproc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">list___init__&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_init */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-14-4">&lt;a class="lnlinks" href="#hl-14-4">4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyType_GenericAlloc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_alloc */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-14-5">&lt;a class="lnlinks" href="#hl-14-5">5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyType_GenericNew&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_new */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-14-6">&lt;a class="lnlinks" href="#hl-14-6">6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-14-7">&lt;a class="lnlinks" href="#hl-14-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>PyType_GenericNew&lt;/code> does nothing &amp;mdash; it ignores &lt;code>args&lt;/code> and &lt;code>kwargs&lt;/code>, and return an object allocated by
&lt;code>type-&amp;gt;typ_alloc&lt;/code>. Source: &lt;a
href="https://github.com/python/cpython/blob/main/Objects/typeobject.c#L1768"
class="hide-external"
>https://github.com/python/cpython/blob/main/Objects/typeobject.c#L1768&lt;/a>&lt;/p>
&lt;p>&lt;code>PyType_GenericAlloc&lt;/code> allocated a new object and (if it&amp;rsquo;s garbage-collectable) marks it as &amp;ldquo;to-be-collected&amp;rdquo;.&lt;/p>
&lt;p>&lt;code>list___init__&lt;/code> is a convenience wrapper around the &lt;code>list___init___impl&lt;/code> function, which does the actual initialization.
It does some basic pre-steps:&lt;/p>
&lt;ul>
&lt;li>fails if any &lt;code>kwarg&lt;/code> has been passed,&lt;/li>
&lt;li>fails if &lt;code>args&lt;/code> has more than 1 element,&lt;/li>
&lt;li>converts the first argument of &lt;code>args&lt;/code> to an iterable.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>list___init___impl&lt;/code> clears the list (if not empty) and extends it by the provided iterable (by calling the
&lt;code>list_extend&lt;/code> function).&lt;/p>
&lt;div class="alert alert-warning">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-question-circle me-2" aria-hidden="true">&lt;/i>
Question
&lt;/h6>
&lt;p class="my-3">
&lt;p>I think the two:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nb">list&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">_tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">_tmp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>are equivalent in every way (but the generated opcodes sequence) and are calling the same underlying C code.&lt;/p>
&lt;/p>
&lt;/div>
&lt;h4 id="-literal-expression" >
&lt;a href="#-literal-expression" aria-label="Anchor">#&lt;/a>
&lt;code>[]&lt;/code> literal expression
&lt;/h4>
&lt;p>Opcode &lt;code>BUILD_LIST&lt;/code> uses the &lt;code>_PyList_FromArraySteal&lt;/code> function to construct a list object and return it.&lt;/p>
&lt;div class="alert alert-info">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-pencil me-2" aria-hidden="true">&lt;/i>
Note
&lt;/h6>
&lt;p class="my-3">
&lt;p>_PyList_FromArraySteal is used since 3.12. See &lt;a
href="https://docs.python.org/3.12/whatsnew/changelog.html"
>3.12 changelog&lt;/a>
and &lt;a
href="https://github.com/python/cpython/pull/100147"
>gh-100146&lt;/a>. Before 3.12, the opcode was repeatedly calling &lt;code>POP()&lt;/code>
to get items from the stack, and then inserting them into the list.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="n">oparg&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">POP&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">PyList_SET_ITEM&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">oparg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See &lt;a
href="https://github.com/python/cpython/pull/100147/files#diff-729a985b0cb8b431cb291f1edb561bbbfea22e3f8c262451cd83328a0936a342L1447-L1450"
>change in gh-100146 PR&lt;/a>.&lt;/p>
&lt;/p>
&lt;/div>
&lt;p>The &lt;code>_PyList_FromArraySteal&lt;/code> helper creates an empty list (if there are no items), or preallocates the list before
inserting items to it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-15-1">&lt;a class="lnlinks" href="#hl-15-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">PyObject&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">dst&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">list&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ob_item&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-15-2">&lt;a class="lnlinks" href="#hl-15-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nf">memcpy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dst&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">src&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="sets" >
&lt;a href="#sets" aria-label="Anchor">#&lt;/a>
Sets
&lt;/h3>
&lt;div class="alert alert-warning">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-exclamation-triangle me-2" aria-hidden="true">&lt;/i>
Warning
&lt;/h6>
&lt;p class="my-3">
AFAIK there&amp;rsquo;s no way to construct a new set with a literal expression, hence the following analysis is performed for
sets with two elements: &lt;code>1&lt;/code> and &lt;code>2&lt;/code>.
&lt;/p>
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="ln" id="hl-16-1">&lt;a class="lnlinks" href="#hl-16-1">1&lt;/a>&lt;/span>&lt;span class="cl">$ python -m timeit &lt;span class="s2">&amp;#34;set((1, 2))&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-16-2">&lt;a class="lnlinks" href="#hl-16-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="m">5000000&lt;/span> loops, best of 5: 82.6 nsec per loop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-16-3">&lt;a class="lnlinks" href="#hl-16-3">3&lt;/a>&lt;/span>&lt;span class="cl">$ python -m timeit &lt;span class="s2">&amp;#34;{1, 2}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-16-4">&lt;a class="lnlinks" href="#hl-16-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="m">5000000&lt;/span> loops, best of 5: 45.5 nsec per loop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="set-type" >
&lt;a href="#set-type" aria-label="Anchor">#&lt;/a>
&lt;code>set&lt;/code> type
&lt;/h4>
&lt;p>The Python&amp;rsquo;s &lt;code>set&lt;/code> type is defined in the &lt;code>setobject.c&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-17-1">&lt;a class="lnlinks" href="#hl-17-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">PyTypeObject&lt;/span> &lt;span class="n">PySet_Type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-17-2">&lt;a class="lnlinks" href="#hl-17-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-17-3">&lt;a class="lnlinks" href="#hl-17-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">initproc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">set_init&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_init */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-17-4">&lt;a class="lnlinks" href="#hl-17-4">4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyType_GenericAlloc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_alloc */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-17-5">&lt;a class="lnlinks" href="#hl-17-5">5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">set_new&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_new */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-17-6">&lt;a class="lnlinks" href="#hl-17-6">6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-17-7">&lt;a class="lnlinks" href="#hl-17-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>set_new&lt;/code> uses the allocated to create a new empty set object. Internally it calls the &lt;code>make_new_set&lt;/code> function.&lt;/p>
&lt;p>&lt;code>set_init&lt;/code> performs some pre-steps:&lt;/p>
&lt;ul>
&lt;li>fails if any &lt;code>kwarg&lt;/code> has been passed,&lt;/li>
&lt;li>fails if &lt;code>args&lt;/code> has more then 1 element,&lt;/li>
&lt;li>converts the first argument of &lt;code>args&lt;/code> to an iterable,&lt;/li>
&lt;li>if the set object has already been filled, then it clears it&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip; and calls the &lt;code>set_update_internal&lt;/code> function, to insert values into the set object.&lt;/p>
&lt;h4 id="1-2-literal-expression" >
&lt;a href="#1-2-literal-expression" aria-label="Anchor">#&lt;/a>
&lt;code>{1, 2}&lt;/code> literal expression
&lt;/h4>
&lt;p>The opcode handler has no dedicated helpers. It constructs a new set (empty), and then iterates over all items from the
stack and insets them one-by-one.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-18-1">&lt;a class="lnlinks" href="#hl-18-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nf">inst&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">BUILD_SET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">oparg&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-2">&lt;a class="lnlinks" href="#hl-18-2"> 2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">set&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">PySet_New&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-3">&lt;a class="lnlinks" href="#hl-18-3"> 3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">set&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-4">&lt;a class="lnlinks" href="#hl-18-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">GOTO_ERROR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-5">&lt;a class="lnlinks" href="#hl-18-5"> 5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">err&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-6">&lt;a class="lnlinks" href="#hl-18-6"> 6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">oparg&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-7">&lt;a class="lnlinks" href="#hl-18-7"> 7&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">PyObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-8">&lt;a class="lnlinks" href="#hl-18-8"> 8&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">err&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-9">&lt;a class="lnlinks" href="#hl-18-9"> 9&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">err&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">PySet_Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">item&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-10">&lt;a class="lnlinks" href="#hl-18-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">Py_DECREF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">item&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-11">&lt;a class="lnlinks" href="#hl-18-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-12">&lt;a class="lnlinks" href="#hl-18-12">12&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-13">&lt;a class="lnlinks" href="#hl-18-13">13&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">Py_DECREF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-14">&lt;a class="lnlinks" href="#hl-18-14">14&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nf">ERROR_IF&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-15">&lt;a class="lnlinks" href="#hl-18-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-18-16">&lt;a class="lnlinks" href="#hl-18-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Source: &lt;a
href="https://github.com/python/cpython/blob/main/Python/bytecodes.c#L1627"
class="hide-external"
>https://github.com/python/cpython/blob/main/Python/bytecodes.c#L1627&lt;/a>.&lt;/p>
&lt;div class="alert alert-warning">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-exclamation-triangle me-2" aria-hidden="true">&lt;/i>
Warning
&lt;/h6>
&lt;p class="my-3">
&lt;p>Warning
The generated bytecode is different if we add another argument to the literal expression: &lt;code>{1, 2, 3}&lt;/code>. Then it becomes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">2&lt;/span> &lt;span class="n">BUILD_SET&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">4&lt;/span> &lt;span class="n">LOAD_CONST&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">frozenset&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">}))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">6&lt;/span> &lt;span class="n">SET_UPDATE&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">8&lt;/span> &lt;span class="n">RETURN_VALUE&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;/div>
&lt;h3 id="tuples" >
&lt;a href="#tuples" aria-label="Anchor">#&lt;/a>
Tuples
&lt;/h3>
&lt;p>This one&amp;rsquo;s tricky. Constructing a tuple with the &lt;code>tuple&lt;/code> type requires an iterable. The easiest way of getting one it to
create a tuple literal, which is obviously less efficient, than using a tuple literal syntax in the first place.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-19-1">&lt;a class="lnlinks" href="#hl-19-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="nn">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-2">&lt;a class="lnlinks" href="#hl-19-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">version_info&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-3">&lt;a class="lnlinks" href="#hl-19-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">version_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">major&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">minor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">micro&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">releaselevel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;final&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">serial&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-4">&lt;a class="lnlinks" href="#hl-19-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-5">&lt;a class="lnlinks" href="#hl-19-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">a&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-6">&lt;a class="lnlinks" href="#hl-19-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">...&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">tuple&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[]))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-7">&lt;a class="lnlinks" href="#hl-19-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-8">&lt;a class="lnlinks" href="#hl-19-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">b&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-9">&lt;a class="lnlinks" href="#hl-19-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">...&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-10">&lt;a class="lnlinks" href="#hl-19-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-11">&lt;a class="lnlinks" href="#hl-19-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="nn">dis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-12">&lt;a class="lnlinks" href="#hl-19-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-13">&lt;a class="lnlinks" href="#hl-19-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">dis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-14">&lt;a class="lnlinks" href="#hl-19-14">14&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">1&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="n">RESUME&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-15">&lt;a class="lnlinks" href="#hl-19-15">15&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-16">&lt;a class="lnlinks" href="#hl-19-16">16&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">2&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="n">LOAD_GLOBAL&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NULL&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">tuple&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-17">&lt;a class="lnlinks" href="#hl-19-17">17&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">12&lt;/span> &lt;span class="n">LOAD_CONST&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-18">&lt;a class="lnlinks" href="#hl-19-18">18&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">14&lt;/span> &lt;span class="n">LOAD_CONST&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-19">&lt;a class="lnlinks" href="#hl-19-19">19&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">16&lt;/span> &lt;span class="n">BUILD_LIST&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-20">&lt;a class="lnlinks" href="#hl-19-20">20&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">18&lt;/span> &lt;span class="n">BUILD_TUPLE&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-21">&lt;a class="lnlinks" href="#hl-19-21">21&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">20&lt;/span> &lt;span class="n">CALL&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-22">&lt;a class="lnlinks" href="#hl-19-22">22&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">28&lt;/span> &lt;span class="n">RETURN_VALUE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-23">&lt;a class="lnlinks" href="#hl-19-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">dis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-24">&lt;a class="lnlinks" href="#hl-19-24">24&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">1&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="n">RESUME&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-25">&lt;a class="lnlinks" href="#hl-19-25">25&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-26">&lt;a class="lnlinks" href="#hl-19-26">26&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">2&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="n">LOAD_CONST&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-27">&lt;a class="lnlinks" href="#hl-19-27">27&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">4&lt;/span> &lt;span class="n">LOAD_CONST&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-28">&lt;a class="lnlinks" href="#hl-19-28">28&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">6&lt;/span> &lt;span class="n">BUILD_LIST&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-29">&lt;a class="lnlinks" href="#hl-19-29">29&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">8&lt;/span> &lt;span class="n">BUILD_TUPLE&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-19-30">&lt;a class="lnlinks" href="#hl-19-30">30&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">10&lt;/span> &lt;span class="n">RETURN_VALUE&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It might not make much sense to include this example in the article.&lt;/p>
&lt;h4 id="tuple-type" >
&lt;a href="#tuple-type" aria-label="Anchor">#&lt;/a>
&lt;code>tuple&lt;/code> type
&lt;/h4>
&lt;p>The Python&amp;rsquo;s &lt;code>tuple&lt;/code> type is defined in &lt;code>tupleobject.c&lt;/code>. Interestingly, it has no &lt;code>tp_alloc&lt;/code>, nor &lt;code>tp_init&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="ln" id="hl-20-1">&lt;a class="lnlinks" href="#hl-20-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">PyTypeObject&lt;/span> &lt;span class="n">PyTuple_Type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-20-2">&lt;a class="lnlinks" href="#hl-20-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-20-3">&lt;a class="lnlinks" href="#hl-20-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_init */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-20-4">&lt;a class="lnlinks" href="#hl-20-4">4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_alloc */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-20-5">&lt;a class="lnlinks" href="#hl-20-5">5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">tuple_new&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="cm">/* tp_new */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-20-6">&lt;a class="lnlinks" href="#hl-20-6">6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-20-7">&lt;a class="lnlinks" href="#hl-20-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>tuple_new&lt;/code> function is responsible for allocating a new tuple object, with the items passed as a parameter.&lt;/p></description></item><item><title>Redirecting Subdomains to URLs</title><link>https://madebyme.today/blog/redirecting-subdomains-to-urls/</link><pubDate>Thu, 04 Jan 2024 14:52:47 +0100</pubDate><guid>https://madebyme.today/blog/redirecting-subdomains-to-urls/</guid><category>GitHub</category><category>GitHub Pages</category><category>DNS</category><category>HTTP</category><description>&lt;p>This blog is hosted on &lt;a
href="https://github.com/nathiss/nathiss.github.io"
>GitHub Pages&lt;/a>. The service offers free static
website hosting (TLS included!). The way it works is that GitHub issues a dedicated subdomain for each hosted website;
for this one it&amp;rsquo;s: &lt;a
href="https://nathiss.github.io/"
>nathiss.github.io&lt;/a>. However, if you try to access it you&amp;rsquo;ll be
redirected to &lt;a
href="https://madebyme.today/"
>madebyme.today&lt;/a> instead.&lt;/p>
&lt;p>I&amp;rsquo;ve set up a custom domain, and GitHub is kind enough to respond with
&lt;a
href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/301"
>301 Moved Permanently&lt;/a> to requests using the old
subdomain.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">$ curl -i https://nathiss.github.io/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">HTTP/2 &lt;span class="m">301&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">server: GitHub.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">content-type: text/html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">location: https://madebyme.today/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">content-length: &lt;span class="m">162&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-8">&lt;a class="lnlinks" href="#hl-0-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-9">&lt;a class="lnlinks" href="#hl-0-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-10">&lt;a class="lnlinks" href="#hl-0-10">10&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;301 Moved Permanently&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-11">&lt;a class="lnlinks" href="#hl-0-11">11&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-12">&lt;a class="lnlinks" href="#hl-0-12">12&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;301 Moved Permanently&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-13">&lt;a class="lnlinks" href="#hl-0-13">13&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx&amp;lt;/center&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-14">&lt;a class="lnlinks" href="#hl-0-14">14&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-15">&lt;a class="lnlinks" href="#hl-0-15">15&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;/html&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s take a closer look and see how it&amp;rsquo;s done.&lt;/p>
&lt;h2 id="setting-up-custom-domain-for-github-pages" >
&lt;a href="#setting-up-custom-domain-for-github-pages" aria-label="Anchor">#&lt;/a>
Setting up custom domain for GitHub Pages
&lt;/h2>
&lt;p>GitHub Pages supports custom domains with very little config; you, as the owner, only need to set up these DNS
records:&lt;/p>
&lt;div class="table-responsive">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Content/Target&lt;/th>
&lt;th>TTL&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>@&lt;/td>
&lt;td>A&lt;/td>
&lt;td>185.199.108.153&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@&lt;/td>
&lt;td>A&lt;/td>
&lt;td>185.199.109.153&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@&lt;/td>
&lt;td>A&lt;/td>
&lt;td>185.199.110.153&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@&lt;/td>
&lt;td>A&lt;/td>
&lt;td>185.199.111.153&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@&lt;/td>
&lt;td>AAAA&lt;/td>
&lt;td>2606:50c0:8000::153&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@&lt;/td>
&lt;td>AAAA&lt;/td>
&lt;td>2606:50c0:8001::153&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@&lt;/td>
&lt;td>AAAA&lt;/td>
&lt;td>2606:50c0:8002::153&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@&lt;/td>
&lt;td>AAAA&lt;/td>
&lt;td>2606:50c0:8003::153&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>www&lt;/td>
&lt;td>CNAME&lt;/td>
&lt;td>&amp;lt;username&amp;gt;.github.io.&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>&amp;hellip; and create the &lt;code>CNAME&lt;/code> file in the root of your repository with the new domain:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-txt" data-lang="txt">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>&lt;/span>&lt;span class="cl">example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The last thing to do is to enable GitHub Pages for your repository. GitHub will validate DNS records and serve the
website under the configured domain. Anyone accessing &lt;code>https://example.com&lt;/code> will see your website.&lt;/p>
&lt;p>It&amp;rsquo;s pretty well explained in &lt;a
href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/about-custom-domains-and-github-pages"
>About custom domains and GitHub Pages&lt;/a>,
and &lt;a
href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site"
>Managing a custom domain for your GitHub Pages site&lt;/a>.&lt;/p>
&lt;div class="alert alert-info">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-pencil me-2" aria-hidden="true">&lt;/i>
Note
&lt;/h6>
&lt;p class="my-3">
&lt;p>Optionally, you may want to verify your domain for GitHub Pages; it prevents other users from taking over your
domain. It can happen when your GitHub Pages site gets disabled one way or another.&lt;/p>
&lt;p>See &lt;a
href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/verifying-your-custom-domain-for-github-pages"
>Verifying your custom domain for GitHub Pages&lt;/a>
for details.&lt;/p>
&lt;/p>
&lt;/div>
&lt;h2 id="using-domains-as-aliases" >
&lt;a href="#using-domains-as-aliases" aria-label="Anchor">#&lt;/a>
Using domains as aliases
&lt;/h2>
&lt;p>Recently I came up with an idea to configure subdomains, that will redirect to a few tools I&amp;rsquo;d like to make accessible
online. For example &lt;code>calendar.madebyme.today&lt;/code> could be a redirect to my GCalendar.&lt;/p>
&lt;p>However, &lt;a
href="https://en.wikipedia.org/wiki/Domain_Name_System"
>DNS&lt;/a> can&amp;rsquo;t be used like that. It&amp;rsquo;s a
&lt;a
href="https://en.wikipedia.org/wiki/Name_resolution_%28computer_systems%29"
>name resolution system&lt;/a> &amp;ndash; it knowns nothing about
HTTP. If I&amp;rsquo;d host my own web server, then I could configure it to do redirects with the proper 301 status code.&lt;/p>
&lt;p>Snippet below shows an example config with
&lt;a
href="http://nginx.org/en/docs/http/ngx_http_core_module.html#server_name"
>Nginx&amp;rsquo;s &lt;code>server_name&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-txt" data-lang="txt">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1">1&lt;/a>&lt;/span>&lt;span class="cl">server {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2">2&lt;/a>&lt;/span>&lt;span class="cl"> server_name calendar.madebyme.today;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3">3&lt;/a>&lt;/span>&lt;span class="cl"> return 301 https://example.com/;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4">4&lt;/a>&lt;/span>&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, that&amp;rsquo;s not the case and, as far as I know, GitHub does not provide any way of setting up HTTP redirects for
GitHub Pages.&lt;/p>
&lt;h3 id="redir-301" >
&lt;a href="#redir-301" aria-label="Anchor">#&lt;/a>
Redir 301
&lt;/h3>
&lt;p>&lt;a
href="https://redir301.link/"
>Redir 301&lt;/a> is a service that uses DNS records to redirect subdomains to URLs. It requires two
DNS records in order to work:&lt;/p>
&lt;div class="table-responsive">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Content/Target&lt;/th>
&lt;th>TTL&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>subdomain&lt;/td>
&lt;td>CNAME&lt;/td>
&lt;td>redir301.link.&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>301.subdomain&lt;/td>
&lt;td>TXT&lt;/td>
&lt;td>&amp;lt;destination URL&amp;gt;&lt;/td>
&lt;td>600&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>Let&amp;rsquo;s test it, shall we?&lt;/p>
&lt;p>I&amp;rsquo;d very much prefer not to mess with my current DNS records, so let&amp;rsquo;s use &lt;a
href="https://messwithdns.net/"
>mess with dns&lt;/a> for
this experiment.&lt;/p>
&lt;div class="alert alert-primary">
&lt;h6 class="alert-heading">
&lt;i class="bi bi-fire me-2" aria-hidden="true">&lt;/i>
Tip
&lt;/h6>
&lt;p class="my-3">
If you&amp;rsquo;re planning on changing your DNS records and are unsure about the changes, then I&amp;rsquo;d suggest to do so first via
&lt;a
href="https://messwithdns.net/"
>mess with dns&lt;/a>, a tool by &lt;a
href="https://jvns.ca/"
>Julia Evans&lt;/a> and
&lt;a
href="https://marieflanagan.com/"
>Marie Claire LeBlanc Flanagan&lt;/a>. It&amp;rsquo;s a service for performing experiments with DNS. Anyone
can set up their DNS records and test with them for free.
&lt;/p>
&lt;/div>
&lt;p>By following the guide we&amp;rsquo;ve got:&lt;/p>
&lt;figure>&lt;a href="./mess_with_dns.png" class="hide-external" >&lt;img src="./mess_with_dns.png"
alt="mess with dns configuration for Redir 301"loading="lazy"
/>&lt;/a>&lt;figcaption>
&lt;p>Click on the image for the full size.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Let&amp;rsquo;s wait for the DNS records to propagate&amp;hellip; &amp;#x1f553;&lt;/p>
&lt;p>&amp;hellip;and when we request the subdomain:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">$ curl -i http://calendar.aster176.messwithdns.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">HTTP/1.1 &lt;span class="m">301&lt;/span> Moved Permanently
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">Date: Thu, &lt;span class="m">04&lt;/span> Jan &lt;span class="m">2024&lt;/span> 09:47:53 GMT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">Server: Apache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">Location: https://example.com/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">Cache-Control: no-cache, no-store, must-revalidate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-7">&lt;a class="lnlinks" href="#hl-3-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">Pragma: no-cache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-8">&lt;a class="lnlinks" href="#hl-3-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">Expires: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-9">&lt;a class="lnlinks" href="#hl-3-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">Transfer-Encoding: chunked
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-10">&lt;a class="lnlinks" href="#hl-3-10">10&lt;/a>&lt;/span>&lt;span class="cl">Content-Type: application/cgi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;it returns 301 with the &lt;a
href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Location"
>Location&lt;/a> header
:thumbs_up:&lt;/p>
&lt;p>It&amp;rsquo;s worth to point out that it does not support HTTPS, only HTTP. It&amp;rsquo;s a Redir 301 limitation; the free tier of the
service does not offer TLS certificates.&lt;/p>
&lt;p>Additionally, as stated by the owner, a &amp;ldquo;fair use&amp;rdquo; policy applies to Redir 301. There&amp;rsquo;s a non-zero cost to run the
service, so if you decide on using the system, please consider donating the maintainer. See &lt;a
href="https://redir301.link/"
class="hide-external"
>https://redir301.link/&lt;/a>
for details.&lt;/p>
&lt;h3 id="redirecting-with-github-pages" >
&lt;a href="#redirecting-with-github-pages" aria-label="Anchor">#&lt;/a>
Redirecting with GitHub Pages
&lt;/h3>
&lt;p>The HTTP Location header isn&amp;rsquo;t the only way of redirecting to a URL. Another method is to use JavaScript, and the
simplest way to achieve this is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span> &lt;span class="na">onload&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;window.location = &amp;#39;https://example.com/&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-2">&lt;a class="lnlinks" href="#hl-4-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-3">&lt;a class="lnlinks" href="#hl-4-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This approach is not recommended, because users might have disabled JavaScript in their browsers.&lt;/p>
&lt;p>Yet another way is to inform the browser to perform the redirection for us; that can be done via the
&lt;a
href="https://en.wikipedia.org/wiki/Meta_refresh"
>meta refresh&lt;/a> tag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="ln" id="hl-5-1">&lt;a class="lnlinks" href="#hl-5-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">http-equiv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;refresh&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;0; url=https://example.com/&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To use this, we need to set up a website under &lt;code>calendar.aster176.messwithdns.com&lt;/code>, that will have the correct meta
refresh tag. However, due to the fact that the domain &lt;code>madebyme.today&lt;/code> is already associated with my GitHub account, I
had some issues with making the &lt;code>calendar.aster176.messwithdns.com&lt;/code> subdomain work. As a workaround I&amp;rsquo;ll switch to
&lt;code>example.madebyme.today&lt;/code> from now on.&lt;/p>
&lt;p>Let&amp;rsquo;s set up required DNS records first, to give them time to propagate. Since I already have my domain configured to
be used by GitHub Pages, I only really need to add one more record:&lt;/p>
&lt;div class="table-responsive">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Content/Target&lt;/th>
&lt;th>TTL&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>example&lt;/td>
&lt;td>CNAME&lt;/td>
&lt;td>nathiss.github.io.&lt;/td>
&lt;td>1h&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>With that out of the way, we can create a new repo.&lt;/p>
&lt;p>We need two files:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>index.html&lt;/code> with the meta tag:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="ln" id="hl-6-1">&lt;a class="lnlinks" href="#hl-6-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-2">&lt;a class="lnlinks" href="#hl-6-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-3">&lt;a class="lnlinks" href="#hl-6-3"> 3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-4">&lt;a class="lnlinks" href="#hl-6-4"> 4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-5">&lt;a class="lnlinks" href="#hl-6-5"> 5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">http-equiv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;refresh&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;0; url=https://example.com/&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-6">&lt;a class="lnlinks" href="#hl-6-6"> 6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://example.com&amp;#34;&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;canonical&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-7">&lt;a class="lnlinks" href="#hl-6-7"> 7&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Redirecting to https://example.com&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-8">&lt;a class="lnlinks" href="#hl-6-8"> 8&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-9">&lt;a class="lnlinks" href="#hl-6-9"> 9&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-10">&lt;a class="lnlinks" href="#hl-6-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://example.com/&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Redirect&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-11">&lt;a class="lnlinks" href="#hl-6-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-12">&lt;a class="lnlinks" href="#hl-6-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>CNAME&lt;/code> to point to GitHub which subdomain it should use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-txt" data-lang="txt">&lt;span class="line">&lt;span class="ln" id="hl-7-1">&lt;a class="lnlinks" href="#hl-7-1">1&lt;/a>&lt;/span>&lt;span class="cl">example.madebyme.today
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>See the full setup here: &lt;a
href="https://github.com/nathiss/redirect-example"
>redirect-example&lt;/a>.&lt;/p>
&lt;p>Alright, let&amp;rsquo;s see if our new DNS record has propagated:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="ln" id="hl-8-1">&lt;a class="lnlinks" href="#hl-8-1">1&lt;/a>&lt;/span>&lt;span class="cl">$ dig example.madebyme.today CNAME +noall +answer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-2">&lt;a class="lnlinks" href="#hl-8-2">2&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-3">&lt;a class="lnlinks" href="#hl-8-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">;&lt;/span> &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.6 &amp;lt;&amp;lt;&amp;gt;&amp;gt; example.madebyme.today CNAME +noall +answer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-4">&lt;a class="lnlinks" href="#hl-8-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">;;&lt;/span> global options: +cmd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-5">&lt;a class="lnlinks" href="#hl-8-5">5&lt;/a>&lt;/span>&lt;span class="cl">example.madebyme.today. &lt;span class="m">3233&lt;/span> IN CNAME nathiss.github.io.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It has indeed.&lt;/p>
&lt;p>The last thing to do, is to enable GitHub Pages for the new repo. Go to &lt;code>Settings &amp;gt; Pages&lt;/code>.&lt;/p>
&lt;figure>&lt;a href="./gh_pages_enable.png" class="hide-external" >&lt;img src="./gh_pages_enable.png"
alt="GitHub Pages configuration for redirect-example repository"loading="lazy"
/>&lt;/a>&lt;figcaption>
&lt;p>Click on the image for the full size.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Select a branch and a folder your site will be served from. GitHub automatically picks up custom domain name configured
in the &lt;code>CNAME&lt;/code> file. Wait a moment for it to perform some DNS checks and to provision a new TLS certificate for your
subdomain, then enable HTTPS enforcement for your site.&lt;/p>
&lt;figure>&lt;a href="./gh_pages_custom_domain.png" class="hide-external" >&lt;img src="./gh_pages_custom_domain.png"
alt="GitHub Pages configuration with custom domain and enforced HTTPS"loading="lazy"
/>&lt;/a>&lt;figcaption>
&lt;p>Click on the image for the full size.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>All parts should be in place, let&amp;rsquo;s check if it works:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="ln" id="hl-9-1">&lt;a class="lnlinks" href="#hl-9-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">$ curl -i https://example.madebyme.today/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-2">&lt;a class="lnlinks" href="#hl-9-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">HTTP/2 &lt;span class="m">200&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-3">&lt;a class="lnlinks" href="#hl-9-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">server: GitHub.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-4">&lt;a class="lnlinks" href="#hl-9-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">content-type: text/html&lt;span class="p">;&lt;/span> &lt;span class="nv">charset&lt;/span>&lt;span class="o">=&lt;/span>utf-8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-5">&lt;a class="lnlinks" href="#hl-9-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-6">&lt;a class="lnlinks" href="#hl-9-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">content-length: &lt;span class="m">356&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-7">&lt;a class="lnlinks" href="#hl-9-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-8">&lt;a class="lnlinks" href="#hl-9-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-9">&lt;a class="lnlinks" href="#hl-9-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-10">&lt;a class="lnlinks" href="#hl-9-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &amp;lt;head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-11">&lt;a class="lnlinks" href="#hl-9-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &amp;lt;meta &lt;span class="nv">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-12">&lt;a class="lnlinks" href="#hl-9-12">12&lt;/a>&lt;/span>&lt;span class="cl"> &amp;lt;meta http-equiv&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;refresh&amp;#34;&lt;/span> &lt;span class="nv">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;0; url=https://example.com/&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-13">&lt;a class="lnlinks" href="#hl-9-13">13&lt;/a>&lt;/span>&lt;span class="cl"> &amp;lt;link &lt;span class="nv">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://example.com&amp;#34;&lt;/span> &lt;span class="nv">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;canonical&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-14">&lt;a class="lnlinks" href="#hl-9-14">14&lt;/a>&lt;/span>&lt;span class="cl"> &amp;lt;title&amp;gt;Redirecting to https://example.com&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-15">&lt;a class="lnlinks" href="#hl-9-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &amp;lt;/head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-16">&lt;a class="lnlinks" href="#hl-9-16">16&lt;/a>&lt;/span>&lt;span class="cl"> &amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-17">&lt;a class="lnlinks" href="#hl-9-17">17&lt;/a>&lt;/span>&lt;span class="cl"> &amp;lt;a &lt;span class="nv">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://example.com/&amp;#34;&lt;/span>&amp;gt;Redirect&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-18">&lt;a class="lnlinks" href="#hl-9-18">18&lt;/a>&lt;/span>&lt;span class="cl"> &amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-9-19">&lt;a class="lnlinks" href="#hl-9-19">19&lt;/a>&lt;/span>&lt;span class="cl">&amp;lt;/html&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;#x1f389;&lt;/p>
&lt;p>If a browser respects the meta refresh tag, then it works. When it doesn&amp;rsquo;t, the user has an option to manually click on
the &amp;ldquo;Redirect&amp;rdquo; link.&lt;/p>
&lt;h2 id="conclusion" >
&lt;a href="#conclusion" aria-label="Anchor">#&lt;/a>
Conclusion
&lt;/h2>
&lt;p>Redirects via GitHub Pages is not an ideal solution. Having to use meta&amp;rsquo;s &lt;code>http-equiv=&amp;quot;refresh&amp;quot;&lt;/code>, instead of the proper
301 Moved Permanently makes me sad. Having said that, personally, I&amp;rsquo;d prefer to use GitHub Pages, as the backing
service, rather than Redir 301.&lt;/p>
&lt;p>The only benefit of Redir 301 over GitHub Pages is the 301 status code with the Location header. However, it&amp;rsquo;s
reasonable to assume that &lt;em>vast majority&lt;/em> of modern browsers supports (and does not block) the meta refresh tag.&lt;/p>
&lt;p>I think GitHub Pages can prove to be a more reliable service in the long run, plus it provisions free TLS certificates
out-of-the-box.&lt;/p>
&lt;p>I&amp;rsquo;d love to hear about other approaches of doing domain-to-URL redirects without a self-hosted web server. Let me know
in the comments what works for you.&lt;/p></description></item><item><title>Life in Weeks</title><link>https://madebyme.today/blog/life-in-weeks/</link><pubDate>Sun, 29 Oct 2023 15:22:21 +0200</pubDate><guid>https://madebyme.today/blog/life-in-weeks/</guid><description>&lt;p>This entry has been inspired by &lt;a
href="https://busterbenson.com/"
>Buster Benson&lt;/a>&amp;rsquo;s
&lt;a
href="https://busterbenson.com/life-in-weeks"
>Life in Weeks&lt;/a>. The rules are very similar: each block represents a week in my
life. More significant events are named and might have descriptions.&lt;/p>
&lt;p>It&amp;rsquo;s not the end product. I&amp;rsquo;ll add entries frequently, but irregularly. My goal in this exercise is to understand how
the sum of forces that have acted upon me has influenced my life.&lt;/p>
&lt;p>I&amp;rsquo;m happy to share this template with anyone willing to try a similar board. It&amp;rsquo;s just a
&lt;a
href="https://gohugo.io/templates/partials/"
>partial template&lt;/a>, and a
&lt;a
href="https://gohugo.io/templates/data-templates/"
>data template&lt;/a>. If you want to give it a go, then reach out to me.&lt;/p>
&lt;p>&lt;strong>P.S.&lt;/strong> Working on this page has reminded me of
&lt;a
href="https://oliveremberton.com/2014/life-is-a-game-this-is-your-strategy-guide/"
>&amp;ldquo;Life Is a Game. This Is Your Strategy Guide.&amp;rdquo;&lt;/a>
by &lt;a
href="https://oliveremberton.com/"
>Oliver Emberton&lt;/a>. It was recommended to me by a fantastic person and it opened my eyes.
I hope you too will find it both entertaining and insightful. So, for anyone intrigued, happy reading!&lt;/p></description></item><item><title>Keep a Changelog</title><link>https://madebyme.today/blog/keep-a-changelog/</link><pubDate>Sat, 21 Oct 2023 23:16:09 +0200</pubDate><guid>https://madebyme.today/blog/keep-a-changelog/</guid><category>Python</category><category>Changelog</category><description>&lt;p>Recently I was tasked with initialization of a new Python project. One of the requirements was to prepare a changelog.
I liked the idea, but my gut feeling was that the future project contributors won&amp;rsquo;t keep the changelog always up-to-date
and it&amp;rsquo;s quality will decline over time. This article proposes a feature which enforces changelog updates, when it&amp;rsquo;s
required to do so.&lt;/p>
&lt;h2 id="whats-a-changelog" >
&lt;a href="#whats-a-changelog" aria-label="Anchor">#&lt;/a>
What&amp;rsquo;s a changelog
&lt;/h2>
&lt;blockquote>
&lt;p>A &lt;strong>changelog&lt;/strong> is a log or record of all notable changes made to a project. The project is often a website or
software project, and the changelog usually includes records of changes such as bug fixes, new features, etc.&lt;/p>
&lt;/blockquote>
&lt;p>from &lt;a
href="https://en.wikipedia.org/wiki/Changelog"
>Wikipedia&lt;/a>.&lt;/p>
&lt;p>The phrase &amp;ldquo;notable changes&amp;rdquo; is the key here. Not all changes to the project are required to have an entry in its
changelog: workflow updates, typo fixes in README, SonarQube settings; they all are transparent to the Python package
produced by the project.&lt;/p>
&lt;p>Let&amp;rsquo;s take a look at an example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">├─ .github
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">│ └─ workflows
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">│ └── workflow.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">├─ docs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">│ ├─ conf.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">│ ├─ index.rst
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-8">&lt;a class="lnlinks" href="#hl-0-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">│ └─ Makefile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-9">&lt;a class="lnlinks" href="#hl-0-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">├─ foo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-10">&lt;a class="lnlinks" href="#hl-0-10">10&lt;/a>&lt;/span>&lt;span class="cl">│ ├─ __init__.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-11">&lt;a class="lnlinks" href="#hl-0-11">11&lt;/a>&lt;/span>&lt;span class="cl">│ └─ bar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-12">&lt;a class="lnlinks" href="#hl-0-12">12&lt;/a>&lt;/span>&lt;span class="cl">│ ├─ __init__.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-13">&lt;a class="lnlinks" href="#hl-0-13">13&lt;/a>&lt;/span>&lt;span class="cl">│ └─ baz.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-14">&lt;a class="lnlinks" href="#hl-0-14">14&lt;/a>&lt;/span>&lt;span class="cl">├─ tests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-15">&lt;a class="lnlinks" href="#hl-0-15">15&lt;/a>&lt;/span>&lt;span class="cl">│ ├─ __init__.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-16">&lt;a class="lnlinks" href="#hl-0-16">16&lt;/a>&lt;/span>&lt;span class="cl">│ └─ test_bar.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-17">&lt;a class="lnlinks" href="#hl-0-17">17&lt;/a>&lt;/span>&lt;span class="cl">├─ .gitignore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-18">&lt;a class="lnlinks" href="#hl-0-18">18&lt;/a>&lt;/span>&lt;span class="cl">├─ README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-19">&lt;a class="lnlinks" href="#hl-0-19">19&lt;/a>&lt;/span>&lt;span class="cl">├─ Makefile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-20">&lt;a class="lnlinks" href="#hl-0-20">20&lt;/a>&lt;/span>&lt;span class="cl">├─ setup.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-21">&lt;a class="lnlinks" href="#hl-0-21">21&lt;/a>&lt;/span>&lt;span class="cl">├─ MANIFEST.in
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-22">&lt;a class="lnlinks" href="#hl-0-22">22&lt;/a>&lt;/span>&lt;span class="cl">├─ pyproject.toml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-23">&lt;a class="lnlinks" href="#hl-0-23">23&lt;/a>&lt;/span>&lt;span class="cl">└─ Changelog.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a pretty standard (and also minimalistic!) take on a Python project. The pipeline defined in
&lt;code>.github/workflows/workflow.yaml&lt;/code> builds, tests and publishes the package. Initially project stored its version in
&lt;code>pyproject.toml&lt;/code>, while &lt;code>Changelog.md&lt;/code> contained human-readable lists of additions, fixes, and improvements for each
release. Having a standard usually makes things easier, so we adopted
&lt;a
href="https://keepachangelog.com/en/1.1.0/"
>keep a changelog&lt;/a>, which also uses
&lt;a
href="https://semver.org/spec/v2.0.0.html"
>Semantic Versioning 2.0.0&lt;/a>, so that was nice.&lt;/p>
&lt;p>&lt;a
href="https://keepachangelog.com/en/1.1.0/"
>Keep a changelog&lt;/a> is just a Markdown template &amp;ndash; it has no associated toolset.
Here&amp;rsquo;s an example of a changelog with two entries:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-md" data-lang="md">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gh"># Changelog
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gh">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">All notable changes to this project will be documented in this file.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">The format is based on [&lt;span class="nt">Keep a Changelog&lt;/span>](&lt;span class="na">https://keepachangelog.com/en/1.0.0/&lt;/span>),
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">and this project adheres to [&lt;span class="nt">Semantic Versioning&lt;/span>](&lt;span class="na">https://semver.org/spec/v2.0.0.html&lt;/span>).
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">## [1.2.0] - 2023-10-01
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-10">&lt;a class="lnlinks" href="#hl-1-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">### Added
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-11">&lt;a class="lnlinks" href="#hl-1-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-12">&lt;a class="lnlinks" href="#hl-1-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">-&lt;/span> Support for Python 3.12.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-13">&lt;a class="lnlinks" href="#hl-1-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">-&lt;/span> Utility for parsing &lt;span class="sb">`foo`&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-14">&lt;a class="lnlinks" href="#hl-1-14">14&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-15">&lt;a class="lnlinks" href="#hl-1-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">### Fixed
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-16">&lt;a class="lnlinks" href="#hl-1-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-17">&lt;a class="lnlinks" href="#hl-1-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">-&lt;/span> Worker subprocesses are now correctly closed.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-18">&lt;a class="lnlinks" href="#hl-1-18">18&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-19">&lt;a class="lnlinks" href="#hl-1-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">### Changed
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-20">&lt;a class="lnlinks" href="#hl-1-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-21">&lt;a class="lnlinks" href="#hl-1-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">-&lt;/span> Update &lt;span class="sb">`pylint`&lt;/span> version to &lt;span class="sb">`~= 2.17`&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-22">&lt;a class="lnlinks" href="#hl-1-22">22&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-23">&lt;a class="lnlinks" href="#hl-1-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">## [1.1.2] - 2019-02-15
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-24">&lt;a class="lnlinks" href="#hl-1-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-25">&lt;a class="lnlinks" href="#hl-1-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">### Fixed
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-26">&lt;a class="lnlinks" href="#hl-1-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-27">&lt;a class="lnlinks" href="#hl-1-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">-&lt;/span> Typo in project&amp;#39;s title in docs.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="keeping-a-changelog-up-to-date" >
&lt;a href="#keeping-a-changelog-up-to-date" aria-label="Anchor">#&lt;/a>
Keep(ing) a changelog up-to-date
&lt;/h2>
&lt;p>When releasing a new package version one needs to remember to update the version in two places: &lt;code>pyproject.toml&lt;/code> and
&lt;code>Changelog.md&lt;/code>. Also, there&amp;rsquo;s no mechanism to enforce that behavior; we could create a workflow step to validate that
both places are in sync, but relaying on CI to inform contributors about the necessary changes seems far from ideal.&lt;/p>
&lt;p>Instead, we made &lt;code>Changelog.md&lt;/code> the only place where the version can be updated. &lt;code>pyproject.toml&lt;/code> expects the version to
be statically defined; we can disable that behavior by marking the version as &lt;em>dynamic&lt;/em>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">build-system&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nx">requires&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;setuptools&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;wheel&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nx">build-backend&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;setuptools.build_meta&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-5">&lt;a class="lnlinks" href="#hl-2-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">project&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-6">&lt;a class="lnlinks" href="#hl-2-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;foo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-7">&lt;a class="lnlinks" href="#hl-2-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nx">readme&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;README.md&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-8">&lt;a class="lnlinks" href="#hl-2-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nx">requires-python&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;gt;=3.9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-9">&lt;a class="lnlinks" href="#hl-2-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nx">dependencies&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-10">&lt;a class="lnlinks" href="#hl-2-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;requests&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-11">&lt;a class="lnlinks" href="#hl-2-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-12">&lt;a class="lnlinks" href="#hl-2-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nx">dynamic&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c"># &amp;lt;----&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The version still needs to be defined somewhere, and using &lt;code>setup.py&lt;/code> for that purpose gives us an advantage &amp;ndash; we can
execute an arbitrary Python code there.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pathlib&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Generator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">setuptools&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">setup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-7">&lt;a class="lnlinks" href="#hl-3-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-8">&lt;a class="lnlinks" href="#hl-3-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">__get_versions&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Generator&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">tuple&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-9">&lt;a class="lnlinks" href="#hl-3-9"> 9&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">dir_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__file__&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-10">&lt;a class="lnlinks" href="#hl-3-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir_name&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="s2">&amp;#34;Changelog.md&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-11">&lt;a class="lnlinks" href="#hl-3-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">lines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-12">&lt;a class="lnlinks" href="#hl-3-12">12&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-13">&lt;a class="lnlinks" href="#hl-3-13">13&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">lines&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-14">&lt;a class="lnlinks" href="#hl-3-14">14&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;^##\s+\[(\d+\.\d+\.\d+)\]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-15">&lt;a class="lnlinks" href="#hl-3-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-16">&lt;a class="lnlinks" href="#hl-3-16">16&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-17">&lt;a class="lnlinks" href="#hl-3-17">17&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">yield&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-18">&lt;a class="lnlinks" href="#hl-3-18">18&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-19">&lt;a class="lnlinks" href="#hl-3-19">19&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-20">&lt;a class="lnlinks" href="#hl-3-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">__get_highest_version&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-21">&lt;a class="lnlinks" href="#hl-3-21">21&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">highest_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">__get_versions&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-22">&lt;a class="lnlinks" href="#hl-3-22">22&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">highest_version&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-23">&lt;a class="lnlinks" href="#hl-3-23">23&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-24">&lt;a class="lnlinks" href="#hl-3-24">24&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-25">&lt;a class="lnlinks" href="#hl-3-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">setup&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-26">&lt;a class="lnlinks" href="#hl-3-26">26&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">__get_highest_version&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-27">&lt;a class="lnlinks" href="#hl-3-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now the only place where package&amp;rsquo;s version needs to be updated is the changelog itself. Note that this change does not
enforce updating the changelog for every change. However, to release a new version of the package one is required to
add a new changelog entry.&lt;/p>
&lt;p>Now, since the presence of &lt;code>Changelog.md&lt;/code> is necessary for the build to succeed, we should inform the build system about
this dependency. &lt;code>MANIFEST.in&lt;/code> contains include/exclude patters for non-standard files (see
&lt;a
href="https://packaging.python.org/en/latest/guides/using-manifest-in/"
>official docs&lt;/a>). Add the following line to the
manifest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1">1&lt;/a>&lt;/span>&lt;span class="cl"># ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-2">&lt;a class="lnlinks" href="#hl-4-2">2&lt;/a>&lt;/span>&lt;span class="cl">include Changelog.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="accessing-project-version-from-sphinx" >
&lt;a href="#accessing-project-version-from-sphinx" aria-label="Anchor">#&lt;/a>
Accessing project version from Sphinx
&lt;/h3>
&lt;p>&lt;a
href="https://www.sphinx-doc.org/en/master/"
>Sphinx&lt;/a> is a most popular tool for generating documentation out of Python source
files. It keeps its configuration in the &lt;code>conf.py&lt;/code> file, which has two special attributes related to the project&amp;rsquo;s
version:&lt;/p>
&lt;ul>
&lt;li>&lt;code>version&lt;/code> &amp;ndash; the major project version (see
&lt;a
href="https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-version"
>official documentation&lt;/a>),&lt;/li>
&lt;li>&lt;code>release&lt;/code> &amp;ndash; the full project version (see
&lt;a
href="https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-release"
>official documentation&lt;/a>).&lt;/li>
&lt;/ul>
&lt;p>With the current setup it&amp;rsquo;s hard for Sphinx to read the version, since it&amp;rsquo;s only accessible from &lt;code>setup.py&lt;/code>. The easiest
workaround is to extract the parsing to an external module and then use that module as a dependency in both &lt;code>conf.py&lt;/code>
and &lt;code>setup.py&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-5-1">&lt;a class="lnlinks" href="#hl-5-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1"># version.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-2">&lt;a class="lnlinks" href="#hl-5-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-3">&lt;a class="lnlinks" href="#hl-5-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pathlib&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-4">&lt;a class="lnlinks" href="#hl-5-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Generator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-5">&lt;a class="lnlinks" href="#hl-5-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-6">&lt;a class="lnlinks" href="#hl-5-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">setuptools&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">setup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-7">&lt;a class="lnlinks" href="#hl-5-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-8">&lt;a class="lnlinks" href="#hl-5-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-9">&lt;a class="lnlinks" href="#hl-5-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">__get_versions&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Generator&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">tuple&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-10">&lt;a class="lnlinks" href="#hl-5-10">10&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">dir_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__file__&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-11">&lt;a class="lnlinks" href="#hl-5-11">11&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir_name&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="s2">&amp;#34;Changelog.md&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-12">&lt;a class="lnlinks" href="#hl-5-12">12&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">lines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-13">&lt;a class="lnlinks" href="#hl-5-13">13&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-14">&lt;a class="lnlinks" href="#hl-5-14">14&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">line&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">lines&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-15">&lt;a class="lnlinks" href="#hl-5-15">15&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;^##\s+\[(\d+\.\d+\.\d+)\]&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">line&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-16">&lt;a class="lnlinks" href="#hl-5-16">16&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-17">&lt;a class="lnlinks" href="#hl-5-17">17&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">z&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">group&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-18">&lt;a class="lnlinks" href="#hl-5-18">18&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">yield&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-19">&lt;a class="lnlinks" href="#hl-5-19">19&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-20">&lt;a class="lnlinks" href="#hl-5-20">20&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-21">&lt;a class="lnlinks" href="#hl-5-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">__get_highest_version&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-22">&lt;a class="lnlinks" href="#hl-5-22">22&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">highest_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">__get_versions&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-23">&lt;a class="lnlinks" href="#hl-5-23">23&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">highest_version&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-24">&lt;a class="lnlinks" href="#hl-5-24">24&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-25">&lt;a class="lnlinks" href="#hl-5-25">25&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-26">&lt;a class="lnlinks" href="#hl-5-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">__get_highest_version&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After that we can import the module in &lt;code>setup.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-6-1">&lt;a class="lnlinks" href="#hl-6-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">setuptools&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">setup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-2">&lt;a class="lnlinks" href="#hl-6-2">2&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-3">&lt;a class="lnlinks" href="#hl-6-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">version&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-4">&lt;a class="lnlinks" href="#hl-6-4">4&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-5">&lt;a class="lnlinks" href="#hl-6-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">setup&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-6">&lt;a class="lnlinks" href="#hl-6-6">6&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">__get_highest_version&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-6-7">&lt;a class="lnlinks" href="#hl-6-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip; and &lt;code>conf.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-7-1">&lt;a class="lnlinks" href="#hl-7-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-2">&lt;a class="lnlinks" href="#hl-7-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pathlib&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-3">&lt;a class="lnlinks" href="#hl-7-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-4">&lt;a class="lnlinks" href="#hl-7-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">project&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;foo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-5">&lt;a class="lnlinks" href="#hl-7-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">copyright&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;2023&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-6">&lt;a class="lnlinks" href="#hl-7-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Kamil Rusin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-7">&lt;a class="lnlinks" href="#hl-7-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-8">&lt;a class="lnlinks" href="#hl-7-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">root_dir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__file__&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parents&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-9">&lt;a class="lnlinks" href="#hl-7-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root_dir&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-10">&lt;a class="lnlinks" href="#hl-7-10">10&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-11">&lt;a class="lnlinks" href="#hl-7-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">version&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">__project_version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-12">&lt;a class="lnlinks" href="#hl-7-12">12&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-13">&lt;a class="lnlinks" href="#hl-7-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">__project_version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-7-14">&lt;a class="lnlinks" href="#hl-7-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">release&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">version&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Again, we cannot forget about informing the build system about the new dependency in &lt;code>MANIFEST.in&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="ln" id="hl-8-1">&lt;a class="lnlinks" href="#hl-8-1">1&lt;/a>&lt;/span>&lt;span class="cl"># ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-2">&lt;a class="lnlinks" href="#hl-8-2">2&lt;/a>&lt;/span>&lt;span class="cl">include Changelog.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-8-3">&lt;a class="lnlinks" href="#hl-8-3">3&lt;/a>&lt;/span>&lt;span class="cl">include version.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="afterthought" >
&lt;a href="#afterthought" aria-label="Anchor">#&lt;/a>
Afterthought
&lt;/h2>
&lt;p>Maintaining a changelog can make a project easier to understand. Hopefully, with the changes proposed in this article
you&amp;rsquo;ll find changelogs more manageable. This feature does not enforce changelog updates from the contributors &amp;ndash; they
will only need to do so, when they want to release a new version of the package.&lt;/p>
&lt;p>I &lt;em>highly&lt;/em> encourage to always release a new version even for the smallest change in the project sources that is
observable for the users. Whether it&amp;rsquo;s worth to add changelog entries for project&amp;rsquo;s meta updates, is up to you.&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;figure class="img-thumbnail">&lt;img src="./jasper-garratt-esc26JcEdek-unsplash.webp"
alt="Log" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;p>Photo by &lt;a
href="https://unsplash.com/@jaspergarrattphotography?utm_content=creditCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=unsplash"
>Jasper Garratt&lt;/a> on &lt;a
href="https://unsplash.com/photos/green-moss-on-brown-tree-trunk-esc26JcEdek?utm_content=creditCopyText&amp;amp;utm_medium=referral&amp;amp;utm_source=unsplash"
>Unsplash&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable line-length --></description></item><item><title>Cancellable</title><link>https://madebyme.today/projects/cancellable/</link><pubDate>Wed, 26 Jul 2023 09:08:18 +0200</pubDate><guid>https://madebyme.today/projects/cancellable/</guid><category>Rust</category><category>Crates</category><category>Open Source</category><description>&lt;p>Recently I&amp;rsquo;m investing a lot of time into developing a game server in &lt;a
href="https://www.rust-lang.org/"
>Rust&lt;/a>. I started with
implementing network layer based on &lt;a
href="https://en.wikipedia.org/wiki/WebSocket"
>WebSockets&lt;/a>. It&amp;rsquo;s far from being ready,
but I developed a helper crate for creating detached, cancellable services.&lt;/p>
&lt;h2 id="game-server-backstory" >
&lt;a href="#game-server-backstory" aria-label="Anchor">#&lt;/a>
Game server backstory
&lt;/h2>
&lt;p>The idea of developing an authoritative game server always seemed appealing to me. Network programming, however, has
many pitfalls:&lt;/p>
&lt;ul>
&lt;li>Server need to validate all use inputs to protect game state from bad actors.&lt;/li>
&lt;li>Ill-formed data sent by one client &lt;em>should&lt;/em> not deny service for another player.&lt;/li>
&lt;li>&lt;a
href="https://en.wikipedia.org/wiki/Async/await"
>Async programming&lt;/a> is hard in general.&lt;/li>
&lt;/ul>
&lt;p>So, in the past I have had many attempts to develop a game server. Each improving on mistakes made in the previous one.&lt;/p>
&lt;ul>
&lt;li>&lt;a
href="https://github.com/nathiss/spectrum-old"
>spectrum-old&lt;/a> &amp;ndash; A real-time multiplayer browser game,&lt;/li>
&lt;li>&lt;a
href="https://github.com/nathiss/Fusion-cpp"
>Fusion-cpp&lt;/a> &amp;ndash; This is the source code of the server for the Fusion game,&lt;/li>
&lt;li>&lt;em>[private repo]&lt;/em>,&lt;/li>
&lt;li>&lt;em>[private repo]&lt;/em>,&lt;/li>
&lt;li>&lt;em>[private repo]&lt;/em>.&lt;/li>
&lt;/ul>
&lt;p>And now I&amp;rsquo;m working on another. :thumbs_up:&lt;/p>
&lt;p>This time, improvements over the previous one are creating implementation that depend on traits and organizing TODOs to
a single GitHub project.&lt;/p>
&lt;!-- markdownlint-disable no-bare-urls -->
&lt;figure>&lt;a href="https://xkcd.com/1906/" class="hide-external" target="_blank">&lt;img src="https://imgs.xkcd.com/comics/making_progress.png"
alt="xkcd: Making Progress"loading="lazy"
/>&lt;/a>&lt;figcaption>
&lt;h4>Making Progress&lt;/h4>&lt;p>xkcd #1906&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable no-bare-urls -->
&lt;h2 id="cancellable-crate" >
&lt;a href="#cancellable-crate" aria-label="Anchor">#&lt;/a>
Cancellable crate
&lt;/h2>
&lt;p>Network functionalities in game servers (listeners, TCP streams, etc.) await for some input and &lt;em>usually&lt;/em> yield a
result.&lt;/p>
&lt;div class="table-responsive">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Component&lt;/th>
&lt;th>Input&lt;/th>
&lt;th>Output&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Listener&lt;/td>
&lt;td>new incoming connection&lt;/td>
&lt;td>&lt;code>Client&lt;/code> object&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP Stream&lt;/td>
&lt;td>data package&lt;/td>
&lt;td>parsed &lt;code>ClientMessage&lt;/code> model&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ping service&lt;/td>
&lt;td>timer tick&lt;/td>
&lt;td>new ping frame&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>We can define a &lt;code>trait&lt;/code> that will describe common interface for all of them:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cp">#[async_trait::async_trait]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Cancellable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span> &lt;span class="nb">Result&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span> &lt;span class="nc">Error&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CancellationResult&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Method &lt;code>run&lt;/code> performs a single unit of work of the service. Internally it can &lt;code>await&lt;/code> for the input to be available and
then return its result. If the returned value is &lt;code>Err(Self::Error)&lt;/code> then the service completes. If it succeeds, then it
should return &lt;code>Ok(CancellationResult)&lt;/code>. &lt;code>CancellationResult&lt;/code> is an enum defined as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">enum&lt;/span> &lt;span class="nc">CancellationResult&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Continue&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Break&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CancellationResult&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>: &lt;span class="nc">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Into&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="n">Item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">into&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-10">&lt;a class="lnlinks" href="#hl-1-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-11">&lt;a class="lnlinks" href="#hl-1-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enum&amp;rsquo;s variant control whether the service will continue to perform its work. If the service produces a value, then it
should wrap it as &lt;code>CancellableResult::Item(t)&lt;/code>; it&amp;rsquo;s also a signal that the service should continue to work. If no
value is available, but the service should continue then it returns &lt;code>CancellableResult::Continue&lt;/code> (similar to
&lt;a
href="https://doc.rust-lang.org/stable/std/task/enum.Poll.html#variant.Pending"
>&lt;code>Poll::Pending&lt;/code>&lt;/a>).&lt;/p>
&lt;p>If the service finishes its work successfully (e.g. when the peer closes the connection) then the service should return
&lt;code>CancellableResult::Break&lt;/code>.&lt;/p>
&lt;p>&lt;code>Cancellable&lt;/code> trait has methods for spawning the service as a detached, background task:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cp">#[async_trait::async_trait]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Cancellable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-5">&lt;a class="lnlinks" href="#hl-2-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">spawn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cancellation_token&lt;/span>: &lt;span class="nc">CancellationToken&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">CancellableHandle&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="bp">Self&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-6">&lt;a class="lnlinks" href="#hl-2-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-7">&lt;a class="lnlinks" href="#hl-2-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-8">&lt;a class="lnlinks" href="#hl-2-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-9">&lt;a class="lnlinks" href="#hl-2-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">spawn_with_callback&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">F&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-10">&lt;a class="lnlinks" href="#hl-2-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-11">&lt;a class="lnlinks" href="#hl-2-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cancellation_token&lt;/span>: &lt;span class="nc">CancellationToken&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-12">&lt;a class="lnlinks" href="#hl-2-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">callback&lt;/span>: &lt;span class="nc">F&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-13">&lt;a class="lnlinks" href="#hl-2-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">CancellableHandle&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="bp">Self&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-14">&lt;a class="lnlinks" href="#hl-2-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-15">&lt;a class="lnlinks" href="#hl-2-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">F&lt;/span>: &lt;span class="nb">FnMut&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="nb">Result&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-16">&lt;a class="lnlinks" href="#hl-2-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-17">&lt;a class="lnlinks" href="#hl-2-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-18">&lt;a class="lnlinks" href="#hl-2-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-19">&lt;a class="lnlinks" href="#hl-2-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Both return a handle, which can be awaited for the service to complete, &lt;span class="text-decoration-underline">once it has been
cancelled&lt;/span>!&lt;/p>
&lt;p>If the service produces results, then it can be spawned with &lt;code>spawn_with_callback&lt;/code>, to consume them. If the callback
returns &lt;code>Err(Self::Result)&lt;/code> then the service completes immediately.&lt;/p>
&lt;p>This setup offers a way of detaching services which perform work &amp;ldquo;on their own&amp;rdquo;, but sometimes services &lt;em>need&lt;/em> to accept
additional data. An example is TCP stream: it reads data packages from a peer and consumes them via callback. However,
if the server decides the connection should be terminated, then the service should complete its work.&lt;/p>
&lt;p>Enter&amp;hellip;&lt;/p>
&lt;h3 id="communicating-with-detached-service" >
&lt;a href="#communicating-with-detached-service" aria-label="Anchor">#&lt;/a>
Communicating with detached service
&lt;/h3>
&lt;p>When we spawn the service task we already get a handle:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CancellableToken&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">handle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">spawn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clone&lt;/span>&lt;span class="p">()).&lt;/span>&lt;span class="k">await&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The handle can be used as an interface to send data to its service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">handle&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ConnectionStatus&lt;/span>::&lt;span class="n">TerminatedByServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reason&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The actual interface needs to be implementation-dependent &amp;ndash; defined in the &lt;code>Cancellable&lt;/code> trait. By easily extending
the trait we get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-5-1">&lt;a class="lnlinks" href="#hl-5-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cp">#[async_trait::async_trait]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-2">&lt;a class="lnlinks" href="#hl-5-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Cancellable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-3">&lt;a class="lnlinks" href="#hl-5-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-4">&lt;a class="lnlinks" href="#hl-5-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span> &lt;span class="nc">Handle&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-5">&lt;a class="lnlinks" href="#hl-5-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-6">&lt;a class="lnlinks" href="#hl-5-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">new_handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>::&lt;span class="n">Handle&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-7">&lt;a class="lnlinks" href="#hl-5-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When the service is spawned (either by &lt;code>spawn&lt;/code> or &lt;code>spawn_with_callback&lt;/code>), the method will call &lt;code>new_handle&lt;/code> to construct
the handle. The handle is owned by &lt;code>CancellableHandle&lt;/code>, which implements &lt;code>Deref&lt;/code> for &lt;code>Self::Handle&lt;/code> type. With that
setup, we can define a channel by which spawner can communicate with spawnee.&lt;/p>
&lt;p>I like the final product, so I&amp;rsquo;ve packaged it as a crate. It&amp;rsquo;s available on
&lt;a
href="https://crates.io/crates/cancellable"
>crates.io&lt;/a>.&lt;/p>
&lt;p>&amp;#x1f30a;&lt;/p></description></item><item><title>Natural Selection and Loss Functions</title><link>https://madebyme.today/blog/franklin/natural-selection-and-loss-functions/</link><pubDate>Sun, 02 Apr 2023 14:50:51 +0200</pubDate><guid>https://madebyme.today/blog/franklin/natural-selection-and-loss-functions/</guid><category>Genetic Algorithm</category><category>Rust</category><description>&lt;p>Natural Selection is what allows our species (and images!) to improve over time. In this article we&amp;rsquo;ll implement a
scoring mechanism, through which &amp;ldquo;&lt;a
href="https://madebyme.today/blog/franklin/randomness-of-life/"
>Mona Lisa&lt;/a>&amp;rdquo; will actually
look like one.&lt;/p>
&lt;h2 id="natural-selection" >
&lt;a href="#natural-selection" aria-label="Anchor">#&lt;/a>
Natural Selection
&lt;/h2>
&lt;p>&lt;a
href="https://en.wikipedia.org/wiki/Natural_selection"
>Natural selection&lt;/a> is the process though which species adapt to their
environments. If the &lt;a
href="https://en.wikipedia.org/wiki/Evolution"
>evolution&lt;/a> is a wheel, then natural selection is the
force that spins it. Organism that are better adapted tend to produce more offspring and pass on their genes. This
process favours genes that aided their bearers to survive/reproduce, increasing their number in the following
generations.&lt;/p>
&lt;p>&lt;a
href="https://en.wikipedia.org/wiki/Fitness_%28biology%29"
>In biology&lt;/a> &lt;em>&amp;ldquo;fitness&amp;rdquo;&lt;/em> is defined by how successful an organism is at
reproduction.&lt;/p>
&lt;p>Wikipedia says:&lt;/p>
&lt;blockquote>
&lt;p>If an organism lives half as long as others of its species, but has twice as many offspring surviving to adulthood,
its genes become more common in the adult population of the next generation.&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip; and also &amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>It is also equal to the average contribution to the gene pool of the next generation, made by the same individuals
of the specified genotype or phenotype.&lt;/p>
&lt;/blockquote>
&lt;p>We, however, will define &amp;ldquo;fitness&amp;rdquo; as a &lt;em>difference&lt;/em> between an organism and the ideal. Which is a bit vague, as there&amp;rsquo;s
no obvious way of substituting one image from another and produce an integer. We&amp;rsquo;ll get back to that in a bit.&lt;/p>
&lt;h2 id="loss-functions" >
&lt;a href="#loss-functions" aria-label="Anchor">#&lt;/a>
Loss functions
&lt;/h2>
&lt;p>&lt;a
href="https://en.wikipedia.org/wiki/Genetic_algorithm"
>Genetic Algorithms&lt;/a> (and
&lt;a
href="https://en.wikipedia.org/wiki/Evolutionary_algorithm"
>Evolutionary Algorithms&lt;/a>) are
&lt;a
href="https://en.wikipedia.org/wiki/Optimization_problem"
>optimization&lt;/a> algorithms that need a &amp;ldquo;goodness&amp;rdquo; of an organism, in
order to decide whether to discard it. We&amp;rsquo;re going to implement two scoring methods, both based on loss functions. L1
Loss Function and L2 Loss Function are defined as follows:&lt;/p>
&lt;p>$$
L1 = \sum_{i=0}^n \vert y_{true_i} - y_{predicted_i} \vert
\newline
L2 = \sum_{i=0}^n \left( y_{true_i} - y_{predicted_i} \right)^2
$$&lt;/p>
&lt;p>&lt;code>n&lt;/code> represents the size of the ideal image in pixels; we know, that both images have the exact same size, so it will
never &lt;code>out-of-range&lt;/code>.&lt;/p>
&lt;p>Both of these functions are used to covert an &amp;ldquo;object&amp;rdquo; or an &amp;ldquo;event&amp;rdquo;, to a real number representing its score. Which one
should be picked then? &lt;em>In general&lt;/em> L2 Loss Function is preferred in most of the cases. However, when the dataset has
outliers, then L2 Loss Function does not perform well &amp;ndash; it leads to much larger errors.&lt;/p>
&lt;p>Cool, we have a way of calculating differences between images&amp;rsquo; pixels. But how to calculate a difference between two
pixels? That question was already answered in
&lt;a
href="https://madebyme.today/blog/franklin/art-from-chaos/#step-2-scoring"
>Art From Chaos&lt;/a>. We take each of the pixels color
channels and calculate their differences.&lt;/p>
&lt;p>$$
f(O, S) = \sum_{i=0}^n \vert (r_2 - r_1)^2 + (g_2 - g_1)^2 + (b_2 - b_1)^2 \vert
$$&lt;/p>
&lt;h2 id="scoring-mechanism" >
&lt;a href="#scoring-mechanism" aria-label="Anchor">#&lt;/a>
Scoring mechanism
&lt;/h2>
&lt;p>First, let&amp;rsquo;s define a trait whereby the rest of the system will be able to interact with scoring methods.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FitnessFunction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="sd">/// This method calculates the fitness of `second_image` relative to `first_image`.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">///
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// In other words, it returns a value describing difference between those two images. The higher the value, the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// more those images are different from each other.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">second_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">Image&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The method assumes that the &lt;code>first_image&lt;/code> is the one being scored and &lt;code>second_image&lt;/code> is the ideal. However, what&amp;rsquo;s nice
about these loss functions, is that they return absolute values &amp;ndash; it does not matter which parameter is the ideal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">// True for both L1 and L2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="fm">assert_eq!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scorer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">first_image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">second_image&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scorer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">second_image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- Custom anchor adds a dash between "absolute" and "distance" -->
&lt;h3 id="implementation-of-l1-absolute-distance" >
&lt;a href="#implementation-of-l1-absolute-distance" aria-label="Anchor">#&lt;/a>
Implementation of L1: AbsoluteDistance
&lt;/h3>
&lt;p>The implementation isn&amp;rsquo;t complex - first we &lt;em>fold&lt;/em> each pixel pair to a &lt;code>usize&lt;/code>, and then we sum those parts together to
produce the score. Actually, we can do both by using Iterator&amp;rsquo;s &lt;code>fold&lt;/code> method.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">fold_pixels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">)&lt;/span>: &lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_r&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_r&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_g&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_g&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_g&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_b&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_b&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-5">&lt;a class="lnlinks" href="#hl-2-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-6">&lt;a class="lnlinks" href="#hl-2-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unsigned_abs&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-7">&lt;a class="lnlinks" href="#hl-2-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unsigned_abs&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-8">&lt;a class="lnlinks" href="#hl-2-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unsigned_abs&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-9">&lt;a class="lnlinks" href="#hl-2-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-10">&lt;a class="lnlinks" href="#hl-2-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-11">&lt;a class="lnlinks" href="#hl-2-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-12">&lt;a class="lnlinks" href="#hl-2-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-13">&lt;a class="lnlinks" href="#hl-2-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">#[derive(Debug, Default)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-14">&lt;a class="lnlinks" href="#hl-2-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">AbsoluteDistance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-15">&lt;a class="lnlinks" href="#hl-2-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-16">&lt;a class="lnlinks" href="#hl-2-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FitnessFunction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AbsoluteDistance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-17">&lt;a class="lnlinks" href="#hl-2-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-18">&lt;a class="lnlinks" href="#hl-2-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-19">&lt;a class="lnlinks" href="#hl-2-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">crate&lt;/span>::&lt;span class="n">models&lt;/span>::&lt;span class="n">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-20">&lt;a class="lnlinks" href="#hl-2-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">second_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">crate&lt;/span>::&lt;span class="n">models&lt;/span>::&lt;span class="n">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-21">&lt;a class="lnlinks" href="#hl-2-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-22">&lt;a class="lnlinks" href="#hl-2-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-23">&lt;a class="lnlinks" href="#hl-2-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-24">&lt;a class="lnlinks" href="#hl-2-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-25">&lt;a class="lnlinks" href="#hl-2-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">second_image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-26">&lt;a class="lnlinks" href="#hl-2-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fold_pixels&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-27">&lt;a class="lnlinks" href="#hl-2-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-28">&lt;a class="lnlinks" href="#hl-2-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- Custom anchor adds a dash between "square" and "distance" -->
&lt;h3 id="implementation-of-l1-square-distance" >
&lt;a href="#implementation-of-l1-square-distance" aria-label="Anchor">#&lt;/a>
Implementation of L2: SquareDistance
&lt;/h3>
&lt;p>Implementation of &lt;code>SquareDistance&lt;/code> is almost identical. The only difference is the squaring of color channels.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">fold_pixels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">)&lt;/span>: &lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_r&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_r&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_g&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_g&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_g&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_b&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_b&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-7">&lt;a class="lnlinks" href="#hl-3-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-8">&lt;a class="lnlinks" href="#hl-3-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-9">&lt;a class="lnlinks" href="#hl-3-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-10">&lt;a class="lnlinks" href="#hl-3-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-11">&lt;a class="lnlinks" href="#hl-3-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-12">&lt;a class="lnlinks" href="#hl-3-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-13">&lt;a class="lnlinks" href="#hl-3-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">#[derive(Debug, Default)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-14">&lt;a class="lnlinks" href="#hl-3-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">SquareDistance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-15">&lt;a class="lnlinks" href="#hl-3-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-16">&lt;a class="lnlinks" href="#hl-3-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FitnessFunction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SquareDistance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-17">&lt;a class="lnlinks" href="#hl-3-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-18">&lt;a class="lnlinks" href="#hl-3-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-19">&lt;a class="lnlinks" href="#hl-3-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">crate&lt;/span>::&lt;span class="n">models&lt;/span>::&lt;span class="n">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-20">&lt;a class="lnlinks" href="#hl-3-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">second_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">crate&lt;/span>::&lt;span class="n">models&lt;/span>::&lt;span class="n">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-21">&lt;a class="lnlinks" href="#hl-3-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-22">&lt;a class="lnlinks" href="#hl-3-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-23">&lt;a class="lnlinks" href="#hl-3-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-24">&lt;a class="lnlinks" href="#hl-3-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-25">&lt;a class="lnlinks" href="#hl-3-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">second_image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-26">&lt;a class="lnlinks" href="#hl-3-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fold_pixels&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-27">&lt;a class="lnlinks" href="#hl-3-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-28">&lt;a class="lnlinks" href="#hl-3-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fixing-mona-lisa" >
&lt;a href="#fixing-mona-lisa" aria-label="Anchor">#&lt;/a>
Fixing &amp;ldquo;Mona Lisa&amp;rdquo;
&lt;/h2>
&lt;p>Let&amp;rsquo;s wire up the scoring component with generation&amp;rsquo;s flow. During each generation, every specimens will be scored
relatively to the ideal image. Using the scores we will select the best &lt;span class="text-decoration-underline">5&lt;/span>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
organisms and discard the rest.&lt;/p>
&lt;p>Since there&amp;rsquo;s no crossover functionality yet, we need to fill the emptied generation space somehow. &lt;strong>Simplest
solution:&lt;/strong> once we have 5 best specimens, we&amp;rsquo;ll copy them over multiple times, to get a new generation 100 strong.&lt;/p>
&lt;figure class="img-thumbnail">&lt;img src="./output_010000.png"
alt="Mona Lisa (generation #10 000)" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;h4>Mona Lisa (generation #10 000)&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>&amp;#x1f90c;&lt;/p>
&lt;p>The image does look recognizable. And it&amp;rsquo;s still missing the last part &amp;ndash; crossing. However, as it&amp;rsquo;s not &lt;em>&amp;ldquo;required&amp;rdquo;&lt;/em>,
the algorithm works and it produces acceptable results.&lt;/p>
&lt;p>Next, we&amp;rsquo;ll implement the crossing function and we&amp;rsquo;ll see how much it improves algorithm&amp;rsquo;s efficiency &amp;ndash; defined as the
derivative of specimen score with respect to generation number.&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;figure class="img-thumbnail">&lt;img src="./fernando-venzano-ddVYvmwrvV4-unsplash.webp"
alt="On the Origin of Species" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;p>Photo by &lt;a
href="https://unsplash.com/pt-br/@fernandovenzano?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"
>Fernando Venzano&lt;/a> on &lt;a
href="https://unsplash.com/photos/ddVYvmwrvV4?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"
>Unsplash&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable line-length -->
&lt;!-- Footnotes -->
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;strong>Why 5?&lt;/strong> No particular reason. There should be enough specimen to fill the generation space again by
combining them in varied ways. It could be more than 5, but we need to remember, that the goal of dropping those &amp;ldquo;bad&amp;rdquo;
images is to discard mutations that resulted in decreasing overall &amp;ldquo;goodness&amp;rdquo;.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>How to: Security Keys</title><link>https://madebyme.today/blog/how-to-security-keys/</link><pubDate>Wed, 29 Mar 2023 20:25:35 +0200</pubDate><guid>https://madebyme.today/blog/how-to-security-keys/</guid><category>how-to</category><category>yubikey</category><description>&lt;p>Today I was &lt;em>again&lt;/em> setting up OpenPGP application on a new
&lt;a
href="https://www.yubico.com/products/yubikey-5-overview/"
>Yubikey&lt;/a>. After over two years I already forgot how &lt;em>tedious&lt;/em> that
can be&amp;hellip; I&amp;rsquo;m writing this blog post to create a clear trace of what I needed to do today and hopefully, when the time
comes to set up &lt;em>an another&lt;/em> key, it&amp;rsquo;ll be as easy as opening up a blog entry.&lt;/p>
&lt;h2 id="in-general" >
&lt;a href="#in-general" aria-label="Anchor">#&lt;/a>
In general
&lt;/h2>
&lt;p>I started to learn about security keys a few years back. I read &amp;ldquo;&lt;a
href="https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/45409.pdf"
>Security Keys: Practical Cryptographic Second
Factors for the Modern Web&lt;/a>&amp;rdquo;
research paper by Google, explaining how they work and how they made them &amp;ldquo;fool-proof&amp;rdquo;. The article is very detailed and
yet written in a easy-to-follow way. If you&amp;rsquo;re interested in security, then give it a try!&lt;/p>
&lt;p>The rest of this article is a ramp about configuring a new key. If you don&amp;rsquo;t have one/not having issues with one at the
moment, you can give it amiss.&lt;/p>
&lt;h2 id="setting-up-a-new-key" >
&lt;a href="#setting-up-a-new-key" aria-label="Anchor">#&lt;/a>
Setting up a new key
&lt;/h2>
&lt;p>&lt;a
href="https://www.yubico.com/"
>Yubico&lt;/a> offers &lt;a
href="https://www.yubico.com/support/download/"
>great software&lt;/a> for managing your
keys. If you&amp;rsquo;re planning on using yours as a &lt;a
href="https://en.wikipedia.org/wiki/Multi-factor_authentication"
>2FA&lt;/a> method or
&lt;a
href="https://www.yubico.com/resources/glossary/fido-2/"
>FIDO2&lt;/a>, then you are a happier person.&lt;/p>
&lt;h3 id="yubikey--macos" >
&lt;a href="#yubikey--macos" aria-label="Anchor">#&lt;/a>
Yubikey &amp;amp; macOS
&lt;/h3>
&lt;p>To start with, I could not make the key detectable by &lt;a
href="https://gnupg.org/"
>GnuPG&lt;/a>. I was getting &amp;ldquo;Operation not
supported by device&amp;rdquo; error.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">gpg --card-status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl">gpg: selecting card failed: Operation not supported by device
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">gpg: OpenPGP card not available: Operation not supported by device
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then I found DataDog&amp;rsquo;s Yubikey
&lt;a
href="https://github.com/DataDog/yubikey/blob/master/docs/troubleshooting.md"
>troubleshooting guide&lt;/a>. It fixed my problem &amp;ndash;
a config file was missing in my GnuPG home.&lt;/p>
&lt;h3 id="yubikey--openpgp" >
&lt;a href="#yubikey--openpgp" aria-label="Anchor">#&lt;/a>
Yubikey &amp;amp; OpenPGP
&lt;/h3>
&lt;p>Working with &lt;code>gpg&lt;/code> sucks.&lt;/p>
&lt;p>The tool is very advanced and offering a lot of features, so naturally its CLI is complex, to say the least. As it was
before, so it was now, I was saved by
&lt;a
href="https://github.com/drduh/YubiKey-Guide"
>this marvelous guide on how to prepare PGP keys for a Yubikey&lt;/a>.&lt;/p>
&lt;p>It encompasses everything: from generating keys, to rotating keys. It also offers different solutions depending on how
much you care about security. I &lt;strong>highly&lt;/strong> encourage you to configure your key with this guide.&lt;/p>
&lt;p>It got me through most of the OpenPGP stuff pretty smoothly. Again, I was lost on making the key work with &lt;code>gpg-agent&lt;/code>.&lt;/p>
&lt;h3 id="yubikey--ssh" >
&lt;a href="#yubikey--ssh" aria-label="Anchor">#&lt;/a>
Yubikey &amp;amp; SSH
&lt;/h3>
&lt;p>Once all three keys (Signing, Encryption, Authentication) are correctly set up, it&amp;rsquo;s the moment for the agent. I always
miss two parts: &lt;strong>configuring gpg-agent&lt;/strong> and &lt;strong>enabling SSH for gpg-agent&lt;/strong>.&lt;/p>
&lt;p>The first one requires these few lines at the end of your &lt;code>rc&lt;/code> file. I use Z shell, so it&amp;rsquo;s &lt;code>.zshrc&lt;/code> for me.&lt;/p>
&lt;script src="https://gist.github.com/nathiss/9a5a6b6db02ac31081ad3484da06e08e.js?file=.zshrc">&lt;/script>
&lt;p>Enabling SSH for gpg-agent can be done by adding &lt;code>gpg-agent.conf&lt;/code> file to your GnuPG home.&lt;/p>
&lt;script src="https://gist.github.com/nathiss/9a5a6b6db02ac31081ad3484da06e08e.js?file=gpg-agent.conf">&lt;/script>
&lt;p>You&amp;rsquo;ll probably need to update the path pointing to &lt;code>pinentry-program&lt;/code>. Just run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>&lt;/span>&lt;span class="cl">which pinentry-mac
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you don&amp;rsquo;t have &lt;code>pinentry-mac&lt;/code> installed, then&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1">1&lt;/a>&lt;/span>&lt;span class="cl">brew install pinentry
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cool. The last and yet &lt;strong>very important step&lt;/strong> is to relaunch the agent:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1">1&lt;/a>&lt;/span>&lt;span class="cl">gpgconf --kill gpg-agent
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It should hopefully work.&lt;/p>
&lt;h3 id="tips" >
&lt;a href="#tips" aria-label="Anchor">#&lt;/a>
Tips
&lt;/h3>
&lt;ol>
&lt;li>To get public SSH key run: &lt;code>ssh-add -L&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>It was around that time, when I tried to fetch my remote repo from GitHub&amp;hellip; and it wasn&amp;rsquo;t
working. I lost a significant amount of time looking for some configuration issue, but there wasn&amp;rsquo;t any. I redid
everything again to no avail.&lt;/p>
&lt;p>Then I saw that some of my GitHub Actions are not being triggered. :thinking_face: I dig a bit more and it turned out
&lt;a
href="https://www.githubstatus.com/incidents/z3c6q056q332"
>GitHub was having issues&lt;/a>.&lt;/p>
&lt;p>&lt;a
href="https://www.githubstatus.com/"
>GitHub Status&lt;/a> is a great site to keep in your RSS feed. When issues arise, they
cascade.&lt;/p></description></item><item><title>Randomness of Life</title><link>https://madebyme.today/blog/franklin/randomness-of-life/</link><pubDate>Mon, 20 Mar 2023 10:02:19 +0100</pubDate><guid>https://madebyme.today/blog/franklin/randomness-of-life/</guid><category>Genetic Algorithm</category><category>Rust</category><description>&lt;p>In &lt;a
href="https://madebyme.today/blog/franklin/art-from-chaos/"
>the previous article&lt;/a> from this series, we&amp;rsquo;ve talked about
genetic algorithms and how they can be used to generate art. Now let&amp;rsquo;s put those ideas into action and focus on
implementing the first part of our artistic toolset: &lt;strong>mutators&lt;/strong>.&lt;/p>
&lt;h2 id="preparing-the-ecosystem" >
&lt;a href="#preparing-the-ecosystem" aria-label="Anchor">#&lt;/a>
Preparing the ecosystem
&lt;/h2>
&lt;p>Before we begin working on mutators, we need to prepare an environment in which our specimens can thrive. We don&amp;rsquo;t need
much - right now the only thing is &lt;em>a generation&lt;/em>. For the record, in this context, a generation is a collection of
specimen which can be mutated, scored, and bred (basically experimented upon) to get us closer to the optimum. Since our
specimens are images, they can be represented by the following structs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="nc">Pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-8">&lt;a class="lnlinks" href="#hl-0-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-9">&lt;a class="lnlinks" href="#hl-0-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-10">&lt;a class="lnlinks" href="#hl-0-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-11">&lt;a class="lnlinks" href="#hl-0-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Representing each pixel as a 24-bit value gives us some flexibility here &amp;ndash; it allows us to operate on two color depths:
&lt;a
href="https://en.wikipedia.org/wiki/Color_depth#True_color_%2824-bit%29"
>true color&lt;/a> (which uses 24-bit colors) and
&lt;a
href="https://en.wikipedia.org/wiki/Grayscale"
>grayscale&lt;/a> (8-bit). Creating a grayscale pixel can be done by setting up all
color channels to the same value. True, it uses thrice as much memory as it could, but&amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>Premature optimization is the root of all evil.&lt;br>
~ Donald Knuth&lt;/p>
&lt;/blockquote>
&lt;p>&lt;span class="text-decoration-underline">Method of initializing&lt;/span>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> the generation will affect how fast we can search the
solution space. As the algorithm produces more fitted images, the specimens get closed to the source image. But we don&amp;rsquo;t
really care about how &lt;em>fast&lt;/em> the optimum can be achieved, frankly, we don&amp;rsquo;t really care about achieving the optimum in
the first place. It is &lt;em>the process&lt;/em> of getting more fitted images and seeing how they evolve what&amp;rsquo;s really interesting.
Therefore our generation will be initialized by blank images - images filled by white pixels. It will reduce pace of
solution space search, but will produce images that are more visually interesting. We are here to do art, after all.
&amp;#x1f3a8;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">const&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">white&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Pixel&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">const&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-10">&lt;a class="lnlinks" href="#hl-1-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-11">&lt;a class="lnlinks" href="#hl-1-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-12">&lt;a class="lnlinks" href="#hl-1-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-13">&lt;a class="lnlinks" href="#hl-1-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-14">&lt;a class="lnlinks" href="#hl-1-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-15">&lt;a class="lnlinks" href="#hl-1-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-16">&lt;a class="lnlinks" href="#hl-1-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-17">&lt;a class="lnlinks" href="#hl-1-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-18">&lt;a class="lnlinks" href="#hl-1-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-19">&lt;a class="lnlinks" href="#hl-1-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-20">&lt;a class="lnlinks" href="#hl-1-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-21">&lt;a class="lnlinks" href="#hl-1-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-22">&lt;a class="lnlinks" href="#hl-1-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-23">&lt;a class="lnlinks" href="#hl-1-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-24">&lt;a class="lnlinks" href="#hl-1-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">blank&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">Pixel&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-25">&lt;a class="lnlinks" href="#hl-1-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-26">&lt;a class="lnlinks" href="#hl-1-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">vec!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clone&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-27">&lt;a class="lnlinks" href="#hl-1-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-28">&lt;a class="lnlinks" href="#hl-1-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-29">&lt;a class="lnlinks" href="#hl-1-29">29&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-30">&lt;a class="lnlinks" href="#hl-1-30">30&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-31">&lt;a class="lnlinks" href="#hl-1-31">31&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-32">&lt;a class="lnlinks" href="#hl-1-32">32&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-33">&lt;a class="lnlinks" href="#hl-1-33">33&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">get_first_generation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-34">&lt;a class="lnlinks" href="#hl-1-34">34&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">vec_len&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-35">&lt;a class="lnlinks" href="#hl-1-35">35&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">image_height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-36">&lt;a class="lnlinks" href="#hl-1-36">36&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>: &lt;span class="kt">usize&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-37">&lt;a class="lnlinks" href="#hl-1-37">37&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Image&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-38">&lt;a class="lnlinks" href="#hl-1-38">38&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Pixel&lt;/span>::&lt;span class="n">white&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-39">&lt;a class="lnlinks" href="#hl-1-39">39&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">vec!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">Image&lt;/span>::&lt;span class="n">blank&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec_len&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-40">&lt;a class="lnlinks" href="#hl-1-40">40&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This code takes care of initializing the generation. &amp;#x1f44c;&lt;/p>
&lt;h2 id="throwing-dice-and-hoping-for-the-best" >
&lt;a href="#throwing-dice-and-hoping-for-the-best" aria-label="Anchor">#&lt;/a>
Throwing dice and hoping for the best
&lt;/h2>
&lt;p>As was mentioned in the previous article, mutators act only on one specimen at a time, inserting random modification
onto it. With that description alone, we can already define a contract for all mutators we&amp;rsquo;re going to implement:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Mutator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Image&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Why &lt;code>&amp;amp;self&lt;/code> and not &lt;code>&amp;amp;mut self&lt;/code>? Due to the fact that mutations are independent of one another, they can be performed
concurrently. In fact, as we will see in the future articles, mutating and scoring are the only steps that can be
&lt;em>easily&lt;/em> run in parallel.&lt;/p>
&lt;figure>&lt;img src="./genetic-algorithm-flow.webp"
alt="Genetic Algorithm Flow"loading="lazy"
/>&lt;figcaption>
&lt;p>A diagram showing the flow of actions applied on a single generation.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="throwing-a-rectangular-dice" >
&lt;a href="#throwing-a-rectangular-dice" aria-label="Anchor">#&lt;/a>
Throwing a rectangular dice
&lt;/h3>
&lt;p>Rectangles are the easiest shape to draw both algorithmically and IRL; our first mutator will use rectangles as a
mutation primitive. To generate a random rectangle we need have the following:&lt;/p>
&lt;ul>
&lt;li>coordinates of one of its corners,&lt;/li>
&lt;li>width,&lt;/li>
&lt;li>height,&lt;/li>
&lt;li>fill color.&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Fill color&lt;/em> is pretty straightforward, but other values have some constraints they need to meet. An image we&amp;rsquo;ll be
mutating has width and height &amp;ndash; let&amp;rsquo;s assume it&amp;rsquo;s &lt;span class="font-monospace">n&lt;/span>
and &lt;span class="font-monospace">m&lt;/span>
respectively. Coordinates of one of the corners, in our case it&amp;rsquo;s going to be top-left, are limited by the image
dimensions. Width and height are limited by both image dimensions, and the coordinates we just generated.&lt;/p>
&lt;p>$$
x \in \lbrack 0 .. n \lbrack \newline
y \in \lbrack 0 .. m \lbrack \newline
width \in \lbrack 1 .. n - x + 1 \lbrack \newline
height \in \lbrack 1 .. m - y + 1 \lbrack \newline
$$&lt;/p>
&lt;p>Why coordinates intervals are right-open? Because if the mutator selects the very right or bottom edge, then the
rectangle would need to have zero width/height. By not right-closing the intervals, we ensure that there&amp;rsquo;s at least one
pixel which can be mutated &amp;#x1f44c;. Similarly both &lt;span class="font-monospace">width&lt;/span>
and &lt;span class="font-monospace">height&lt;/span>
intervals are right-open to ensure that the rectangle will not overflow the image.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="nc">RandomRectangle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-7">&lt;a class="lnlinks" href="#hl-3-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-8">&lt;a class="lnlinks" href="#hl-3-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-9">&lt;a class="lnlinks" href="#hl-3-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">get_random_rectangle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Random&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">Image&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">RandomRectangle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-10">&lt;a class="lnlinks" href="#hl-3-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-11">&lt;a class="lnlinks" href="#hl-3-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-12">&lt;a class="lnlinks" href="#hl-3-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-13">&lt;a class="lnlinks" href="#hl-3-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-14">&lt;a class="lnlinks" href="#hl-3-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_height&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-15">&lt;a class="lnlinks" href="#hl-3-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-16">&lt;a class="lnlinks" href="#hl-3-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-17">&lt;a class="lnlinks" href="#hl-3-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-18">&lt;a class="lnlinks" href="#hl-3-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-19">&lt;a class="lnlinks" href="#hl-3-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">RandomRectangle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-20">&lt;a class="lnlinks" href="#hl-3-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-21">&lt;a class="lnlinks" href="#hl-3-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-22">&lt;a class="lnlinks" href="#hl-3-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-23">&lt;a class="lnlinks" href="#hl-3-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-24">&lt;a class="lnlinks" href="#hl-3-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-25">&lt;a class="lnlinks" href="#hl-3-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Function &lt;code>get_random_rectangle&lt;/code> is a neat helper: based on the given &lt;span class="text-decoration-underline">RNG&lt;/span>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> and
image, it returns a struct representing a random rectangle within the boundaries of the image.&lt;/p>
&lt;p>Only two things left to do: generate random color and draw the shape. The implementation of rectangle mutator will look
like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cp">#[derive(Debug, Default)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-2">&lt;a class="lnlinks" href="#hl-4-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">RectangleMutator&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-3">&lt;a class="lnlinks" href="#hl-4-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-4">&lt;a class="lnlinks" href="#hl-4-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Mutator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RectangleMutator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-5">&lt;a class="lnlinks" href="#hl-4-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Image&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-6">&lt;a class="lnlinks" href="#hl-4-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Random&lt;/span>::&lt;span class="n">default&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-7">&lt;a class="lnlinks" href="#hl-4-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">get_random_rectangle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-8">&lt;a class="lnlinks" href="#hl-4-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-9">&lt;a class="lnlinks" href="#hl-4-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-10">&lt;a class="lnlinks" href="#hl-4-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-11">&lt;a class="lnlinks" href="#hl-4-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-12">&lt;a class="lnlinks" href="#hl-4-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-13">&lt;a class="lnlinks" href="#hl-4-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-14">&lt;a class="lnlinks" href="#hl-4-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-15">&lt;a class="lnlinks" href="#hl-4-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-16">&lt;a class="lnlinks" href="#hl-4-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-17">&lt;a class="lnlinks" href="#hl-4-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-18">&lt;a class="lnlinks" href="#hl-4-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-19">&lt;a class="lnlinks" href="#hl-4-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-20">&lt;a class="lnlinks" href="#hl-4-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-21">&lt;a class="lnlinks" href="#hl-4-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-22">&lt;a class="lnlinks" href="#hl-4-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-23">&lt;a class="lnlinks" href="#hl-4-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-24">&lt;a class="lnlinks" href="#hl-4-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The implementation is really simple. First we get a random rectangle &lt;em>(using the helper function)&lt;/em>, then generate color
channels, and finally draw the shape. Drawing itself is done by two nested loops iterating over columns and rows of the
image. With the two indexes it references a specific pixel: &lt;code>j * image_width + 1&lt;/code> and finally overrides it using the
color channels.&lt;/p>
&lt;p>Cool, let&amp;rsquo;s see what the program generates after 10 000 generations when initialized with
&amp;ldquo;&lt;a
href="https://en.wikipedia.org/wiki/File:Mona_Lisa,_by_Leonardo_da_Vinci,_from_C2RMF_retouched.webp"
>Mona Lisa&lt;/a>&amp;rdquo;.&lt;/p>
&lt;figure class="img-thumbnail">&lt;img src="./output_010000.png"
alt="Random noise" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;h4>Mona Lisa (generation #10 000)&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Doesn&amp;rsquo;t really looks like anything. &amp;#x1f610;&lt;br>
Which isn&amp;rsquo;t very surprising; the code did what it was suppose to do: it generated random rectangles on the white image.
Since we don&amp;rsquo;t have any scoring logic yet (that&amp;rsquo;s a topic for another article) the resulting image is composed of random
noise. We&amp;rsquo;ll need to wait a bit longer to get an image that even remotely reflects &amp;ldquo;Mona Lisa&amp;rdquo;.&lt;/p>
&lt;h3 id="throwing-dice-of-other-shapes" >
&lt;a href="#throwing-dice-of-other-shapes" aria-label="Anchor">#&lt;/a>
Throwing dice of other shapes
&lt;/h3>
&lt;p>It&amp;rsquo;d be nice to have mutators other than &lt;code>RectangleMutator&lt;/code>, which are able to mutate images with different shapes, but
I&amp;rsquo;m not going to cover them here. The reason is simple &amp;ndash; they operate under the same rules: you need to define
boundaries first and then you need to draw the desired shape. I&amp;rsquo;ve implemented two other mutators: &lt;code>TriangleMutator&lt;/code> and
&lt;code>CircleMutator&lt;/code>. Their sources can be found
&lt;a
href="https://github.com/nathiss/franklin/tree/73aa8dada3e8c3cae9aff5e24637785268e3527a/src/mutators"
>here&lt;/a>.&lt;/p>
&lt;h2 id="afterword" >
&lt;a href="#afterword" aria-label="Anchor">#&lt;/a>
Afterword
&lt;/h2>
&lt;p>You might&amp;rsquo;ve noticed that the code examples of this article are not strictly bounded together, meaning you cannot just
copy them to have a working example. A bunch of things like: &lt;code>Random&lt;/code> implementation, loading the original image,
mutation loop, and the whole &lt;code>impl Image&lt;/code> block are missing. If you want to have a working solution it&amp;rsquo;s
&lt;a
href="https://github.com/nathiss/franklin/tree/73aa8dada3e8c3cae9aff5e24637785268e3527a"
>here&lt;/a> &lt;em>(locked down to the newest
commit at the moment of writing &amp;ndash; 73aa8da)&lt;/em>. The goal of this series is not to go through every single line of code to
build a working utility, but rather to present an idea. So, moving forward all future articles from this series will
also be done in that style.&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;figure class="img-thumbnail">&lt;img src="./alexander-grey-2eAkk5lIkC8-unsplash.webp"
alt="Randomness of Life" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;p>Photo by &lt;a
href="https://unsplash.com/@sharonmccutcheon?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"
>Alexander Grey&lt;/a> on &lt;a
href="https://unsplash.com/photos/2eAkk5lIkC8?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"
>Unsplash&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable line-length -->
&lt;p>Stay tuned &amp;#x1f30a;&lt;/p>
&lt;!-- Footnotes -->
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Usually the generation is generated randomly. See
&lt;a
href="https://en.wikipedia.org/wiki/Genetic_algorithm#Initialization"
>here&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>&lt;code>Random&lt;/code> is a project-private utility class. Source can be found
&lt;a
href="https://github.com/nathiss/franklin/blob/73aa8dada3e8c3cae9aff5e24637785268e3527a/src/util/random.rs"
>here&lt;/a>.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Art From Chaos</title><link>https://madebyme.today/blog/franklin/art-from-chaos/</link><pubDate>Sat, 04 Mar 2023 14:50:59 +0100</pubDate><guid>https://madebyme.today/blog/franklin/art-from-chaos/</guid><category>Genetic Algorithm</category><category>Art</category><description>&lt;p>Making art is hard. Drawing pictures is tedious. With programming, however, we can automate things. The point of
automation is to reduce the amount of manual labor. So let&amp;rsquo;s mix evolution, DNA, and programming together to make art
that &lt;em>makes&lt;/em> itself. Pictures that &lt;em>draw&lt;/em> themselves.&lt;/p>
&lt;h2 id="concepts-and-definitions" >
&lt;a href="#concepts-and-definitions" aria-label="Anchor">#&lt;/a>
Concepts and definitions
&lt;/h2>
&lt;p>Before we dive deep into making art, we need to understand some important concepts &amp;ndash; first things first.
&lt;span class="text-decoration-underline">Automatic art&lt;/span>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, at its core, uses generic algorithms.
&lt;a
href="https://en.wikipedia.org/wiki/Genetic_algorithm"
>Wikipedia&lt;/a> has a really nice page about them, if you&amp;rsquo;d like to read
it. However for the sake of the article this is enough:&lt;/p>
&lt;p>A &lt;strong>Genetic Algorithm&lt;/strong> is an algorithm inspired by the process of natural selection used to find solutions for
optimization problems. It has three main parts:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mutation&lt;/strong> - during which specimens are randomly changed,&lt;/li>
&lt;li>&lt;strong>Scoring&lt;/strong> - during which specimens are ranked by their &amp;ldquo;ability to adapt to their environment&amp;rdquo;,&lt;/li>
&lt;li>&lt;strong>Crossing&lt;/strong> - during which one or more specimens are mixed together to produce a new member.&lt;/li>
&lt;/ul>
&lt;p>OK. &amp;#x1f44c;&lt;/p>
&lt;p>With these terms out of the way, let&amp;rsquo;s try to understand how exactly it works. Imagine we need to find a solution
for a problem. It can be anything, like finding optimal timetable for a university class. Firstly, we need to encode a
solution as a series of bytes (their &lt;a
href="https://en.wikipedia.org/wiki/Genetic_representation"
>Genetic representation&lt;/a>, if
you will). Once we have that we can clone the encoded representation to create a generation.&lt;/p>
&lt;p>Each member of the generation will be randomly &lt;strong>mutated&lt;/strong> and then &lt;strong>scored&lt;/strong> based on how well they fit in our
constrains set. For example: we might want to have a timetable which leaves just enough break time to eat a quick lunch,
but not too much, so that we can go home earlier. This (and similar constrains) might be used to evaluate the value of
our new mutated timetable. With each specimen evaluated we leave a few of the best and discard the rest &amp;#x1f480;.&lt;br>
The last step is to mix our &lt;em>special&lt;/em> timetables to create new ones to fill the generation again.&lt;/p>
&lt;figure>&lt;img src="./genetic-algorithm-cycle.webp"
alt="Genetic Algorithm Cycle"loading="lazy"
/>
&lt;/figure>
&lt;p>To mutate, to score, to kill, to breed, to continue the cycle of life. It might sound simple, but in reality it is
shockingly efficient in searching the solution space.&lt;/p>
&lt;h2 id="art-from-evolution" >
&lt;a href="#art-from-evolution" aria-label="Anchor">#&lt;/a>
Art from evolution
&lt;/h2>
&lt;p>Alright. Now with the theory out of the way, let&amp;rsquo;s conceptualize a program for generating automatic art. Probably it&amp;rsquo;s
a good moment to explain the clickbaity summary at the top of this article: the pictures will not &lt;em>draw&lt;/em> themselves, the
goal is to make &lt;em>a program&lt;/em> which will generate art automatically. It&amp;rsquo;s going to be an iterative solution where each
cycle is parametrized by the results of its predecessor.&lt;/p>
&lt;h3 id="step-0-initialization" >
&lt;a href="#step-0-initialization" aria-label="Anchor">#&lt;/a>
Step 0: Initialization
&lt;/h3>
&lt;p>Before we do anything towards evolution we need to prepare a generation first. So what&amp;rsquo;s our generation size? Let&amp;rsquo;s see
if Wikipedia has something insightful to say:&lt;/p>
&lt;blockquote>
&lt;p>The population size depends on the nature of the problem, but typically contains several hundreds or thousands of
possible solutions.&lt;br>
~ &lt;a
href="https://en.wikipedia.org/wiki/Genetic_algorithm"
>Genetic algorithm @ Wikipedia&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Well, that&amp;rsquo;s really not the most helpful answer. &amp;#x1f610;&lt;br>
It really boils down to this: the more specimen we have, the more memory the program requires and more CPU time to
process each generation. On the other hand, the more specimen a generation have, the wider portion of solution space it
can search. Whatever the generation size will be, we need to have a prototype - a specimen, which cloned will fill the
generation. Since we&amp;rsquo;re dealing with art here, a &lt;em>&lt;a
href="https://en.wikipedia.org/wiki/Tabula_rasa"
>tabula rasa&lt;/a>&lt;/em> should be a
fitting choice.&lt;/p>
&lt;h3 id="step-1-mutation" >
&lt;a href="#step-1-mutation" aria-label="Anchor">#&lt;/a>
Step 1: Mutation
&lt;/h3>
&lt;p>Mutation method greatly affects the end result, so it&amp;rsquo;s imperative to select a right one. Mutation algorithms are
usually stateless, meaning modification of each specimen does not affect any other. In each iteration the mutator will
introduce a &lt;em>small&lt;/em> change into specimens&amp;rsquo; genetic representation. On images it can be, for example: changing random
pixels. This works, but the final image looks too detailed (in a bad way).&lt;/p>
&lt;p>Now, the changes does not technically need to be &lt;em>small&lt;/em> per se, however applying too big changes might result in
overriding a portion of the genome that was making this particular specimen a good candidate, thus resulting in loosing
progress achieved by previous generations.&lt;/p>
&lt;p>&lt;a
href="https://www.google.com/search?q=generating&amp;#43;images&amp;#43;with&amp;#43;genetic&amp;#43;algorithm"
>If you&amp;rsquo;d google &amp;ldquo;generating images with genetic algorithm&amp;rdquo;&lt;/a>,
you&amp;rsquo;d find that most projects on the subject use geometric shapes when applying mutation. Simple onces, like
&lt;strong>circles&lt;/strong>, &lt;strong>rectangles&lt;/strong>, and &lt;strong>triangles&lt;/strong> are a good choice. From these it&amp;rsquo;s rectangles, that can be the most
easily represented in code. Having said that let&amp;rsquo;s see how a single specimen might change over a few first iterations.&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;figure>&lt;img src="./mutation-diagram.webp"
alt="Mutation diagram"loading="lazy"
/>&lt;figcaption>
&lt;p>An exemplar of a 6-generation mutation process. Starting with generation 0 - no mutation applied, till generation 5 - five mutations applied.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable line-length -->
&lt;p>Each of the rectangles on that picture represents a random mutation applied onto the image, meaning that all information
needed to unambiguously identify a rectangle (width, height, coordinates of one of the corners, and its color) have been
randomly generated.&lt;/p>
&lt;p>The above illustrates the risk of allowing mutations which are not constrained by their impact: the mutation introduced
in 1&lt;sup>st&lt;/sup> step has been almost fully overwritten after 5 mutations. Don&amp;rsquo;t get me wrong, the result
might be beneficial, but overall we want to utilize genome that have evolved in past generations, not to discard it
completely.&lt;/p>
&lt;h3 id="step-2-scoring" >
&lt;a href="#step-2-scoring" aria-label="Anchor">#&lt;/a>
Step 2: Scoring
&lt;/h3>
&lt;p>Implementing scoring function can be tricky. Basically we need to have a way of mapping each specimen into an integer
value. Then with values for all specimens we can calculate a threshold and filter out all images above it. The genetic
algorithm does not provide to us any way of determining whether a mutation has been beneficial; that is strictly
depends on the implementation. So let&amp;rsquo;s talk about what it is exactly we&amp;rsquo;d like to achieve here.&lt;/p>
&lt;p>The idea behind generating images through evolution is that we have &lt;strong>an ideal&lt;/strong> to which we&amp;rsquo;re aiming to get as close
as possible. An original image, from which will derive a collection of images &lt;em>similar&lt;/em> to it, each mutated and scored
multiple times. A scoring function could calculate a difference between the original image and the one being currently
scored:&lt;/p>
&lt;p>$$ f(O, S) = \sum_{i=0}^n | O_n - S_n | \tag{1} $$&lt;/p>
&lt;p>Both &lt;code>O&lt;/code> and &lt;code>S&lt;/code> refer to a collection of pixels representing the original image and the current specimen respectively,
thus allowing us to index their pixels and calculate a difference between them. This, on its own, isn&amp;rsquo;t the most helpful
piece of advice, as it glides over the fact that we a calculating a difference of &lt;em>pixels&lt;/em> not numbers, we cannot do
arithmetics on them. To fix that we need to be a bit more clever here.&lt;/p>
&lt;p>We can utilize the fact that pixels are just color, usually represented in
&lt;a
href="https://en.wikipedia.org/wiki/RGB_color_model"
>RGB&lt;/a> notation. Each color in the RGB color space is represented by three
numbers from 0 to 255 (each encoding the amount of red, green, and blue). Numbers on their own don&amp;rsquo;t have any meaning,
its the context that makes them colors, points, or geometric shapes. If we&amp;rsquo;d interpret these three numbers as
coordinates in three-dimensional space, then they would become points. In that case, the difference between two points
can be implemented as the distance between then:&lt;/p>
&lt;p>$$ d(A, B) = \sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2 + (z_2 - z_1)^2} $$&lt;/p>
&lt;p>Alright &amp;#x1f44c;. The final thought: this formula calculates the difference between two points in space, but we don&amp;rsquo;t
really need &lt;em>the distance&lt;/em>, just &lt;em>an indication&lt;/em> of how similar the two pixels are. Since calculating a square root on
computers is expensive, we can remove that bit and we&amp;rsquo;re left with:&lt;/p>
&lt;p>$$ g(A, B) = (x_2 - x_1)^2 + (y_2 - y_1)^2 + (z_2 - z_1)^2 \tag{2} $$&lt;/p>
&lt;p>By combining (1) and (2) together we get:&lt;/p>
&lt;p>$$ f(O, S) = \sum_{i=0}^n | (r_2 - r_1)^2 + (g_2 - g_1)^2 + (b_2 - b_1)^2 | $$&lt;/p>
&lt;p>That was a bit more mathsy that I&amp;rsquo;ve initially anticipated &lt;code>◕_◕&lt;/code>.&lt;/p>
&lt;h3 id="step-3-crossing" >
&lt;a href="#step-3-crossing" aria-label="Anchor">#&lt;/a>
Step 3: Crossing
&lt;/h3>
&lt;p>In the last step the algorithm has to fill up &lt;em>almost&lt;/em> emptied generation. This step, quoting Wikipedia, it&amp;rsquo;s:&lt;/p>
&lt;blockquote>
&lt;p>[&amp;hellip;] a genetic operator used to combine the genetic information of two parents to generate new offspring. [&amp;hellip;]
Solutions can also be generated by cloning an existing solution, which is analogous to asexual reproduction.&lt;br>
~ &lt;a
href="https://en.wikipedia.org/wiki/Crossover_%28genetic_algorithm%29"
>Crossover (genetic algorithm)&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>There are several ways we can make it work, from naive ones:&lt;/p>
&lt;ul>
&lt;li>create an exact copy of one of the remaining images,&lt;/li>
&lt;li>create a mutated copy of one of the remaining images,&lt;/li>
&lt;li>split image into two halves and fill it with a respective half from one of the two parents,&lt;/li>
&lt;/ul>
&lt;p>to more sophisticated ones:&lt;/p>
&lt;ul>
&lt;li>for each pixel pair taken from two parents calculate an arithmetic average and use it to construct a new pixel,&lt;/li>
&lt;li>for each pixel pair taken from two parents calculate an weighted average and use it to construct a new pixel.&lt;/li>
&lt;/ul>
&lt;p>The methods mentioned above differ in their complexity, but more importantly, in how fitting specimens they create. It&amp;rsquo;s
worth to mention that in opposition to the previous two steps, this one isn&amp;rsquo;t strictly mandatory. The algorithm will
still work without it and the generated images will look acceptable. With &lt;strong>crossing&lt;/strong>, however the algorithm generates
more fitting specimens, relative to a one without the 3&lt;sup>rd&lt;/sup> step, in the same number of
generations.&lt;/p>
&lt;p>We will take a look at several of &lt;strong>crossing&lt;/strong> methods mentioned above and we will plot scores of their specimens as a
function of generation number, to see how well they perform. &amp;#x1f4c8;&lt;/p>
&lt;h2 id="next-steps" >
&lt;a href="#next-steps" aria-label="Anchor">#&lt;/a>
Next steps
&lt;/h2>
&lt;p>This is the first article from a series about generating art through genetic algorithms. In the next articles &lt;em>(coming
up soon-ish)&lt;/em> we&amp;rsquo;ll turn those ideas into &lt;a
href="https://www.rust-lang.org/"
>Rust&lt;/a> code and after that we&amp;rsquo;ll finally make art
that makes itself.&lt;/p>
&lt;!-- Image source: https://unsplash.com/photos/M3cxjDNiLlQ -->
&lt;!-- markdownlint-disable line-length -->
&lt;figure class="img-thumbnail">&lt;img src="./brett-jordan-M3cxjDNiLlQ-unsplash.webp"
alt="Order and Chaos" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;p>Photo by &lt;a
href="https://unsplash.com/@brett_jordan?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"
>Brett Jordan&lt;/a> on &lt;a
href="https://unsplash.com/photos/M3cxjDNiLlQ?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"
>Unsplash&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable line-length -->
&lt;p>See you around!&lt;/p>
&lt;p>&amp;#x1f30a;&lt;/p>
&lt;!-- Footnotes -->
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Term coined by me. If you want to read more about art generated by algorithms you should probably look for
&lt;a
href="https://en.wikipedia.org/wiki/Algorithmic_art"
>Algorithmic art&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Beginnings Are Hard</title><link>https://madebyme.today/blog/beginnings-are-hard/</link><pubDate>Sat, 25 Feb 2023 20:14:43 +0100</pubDate><guid>https://madebyme.today/blog/beginnings-are-hard/</guid><category>meta</category><category>Polaris</category><description>&lt;p>Well it took some time (almost 6 years) to create a personal blog, but here we are.&lt;/p>
&lt;h2 id="how-did-we-come-here" >
&lt;a href="#how-did-we-come-here" aria-label="Anchor">#&lt;/a>
How did we come here?
&lt;/h2>
&lt;p>This is not the first attempt on creating my own website. On my &lt;a
href="https://github.com/nathiss"
>GitHub&lt;/a> there are many
(most of them private) repos, which contains some sort of &lt;em>personal website&lt;/em>. All of them abandoned, but not this one!&lt;/p>
&lt;p>&amp;hellip; at least not yet. ✌(-‿-)✌ However I&amp;rsquo;m optimistic.&lt;/p>
&lt;p>To better understand why I have such high hopes for this project let&amp;rsquo;s go down the rabbit hole and analyze its ancestors
and try to point out why they failed.&lt;/p>
&lt;h3 id="platform-1-0x52-django-22" >
&lt;a href="#platform-1-0x52-django-22" aria-label="Anchor">#&lt;/a>
Platform 1: 0x52 (Django 2.2)
&lt;/h3>
&lt;p>&lt;a
href="https://www.djangoproject.com/"
>Django&lt;/a> is one of the first tools I&amp;rsquo;ve ever used to create something on the web.&lt;/p>
&lt;blockquote>
&lt;p>Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design.
Built by experienced developers, it takes care of much of the hassle of web development, so you can focus on writing
your app without needing to reinvent the wheel. It’s free and open source.&lt;br>
~ &lt;a
href="https://www.djangoproject.com/"
>Django website&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Using that framework I&amp;rsquo;ve built a web journal. The idea was that at any moment I could use one of my devices to create
a new journal entry. They were automatically sorted by creation date and tagged with tokens retrieved from the entry&amp;rsquo;s
content. The latter deserves a bit more digging into, so let&amp;rsquo;s consider the following entry:&lt;/p>
&lt;blockquote>
&lt;p>Lorem ipsum @dolor sit amet, consectetur adipiscing elit. Aliquam sed eleifend magna. @Quisque venenatis ex ex, a
suscipit purus iaculis ac. Sed @lacinia tincidunt nunc vitae consectetur.&lt;/p>
&lt;/blockquote>
&lt;p>A tag is a sequence of characters between &lt;code>'@'&lt;/code> and one of &lt;code>',&amp;lt;.&amp;gt;/?;:\'&amp;quot;[{]}\\|()=+#$%^&amp;amp;*~\r\n '&lt;/code>. When an entry was
either created or modified, then the logic extracted tags from content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nd">@staticmethod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">extract_tag_names&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">words&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">escape_delimiters&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_DELIMITERS&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="n">words&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">words&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">tag_name&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lower&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">tag_name&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">words&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">tag_name&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">startswith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Tag&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TAG_SYMBOL&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It worked pretty well. I could create a new tag or use an already existing one. When the tag was orphaned &lt;em>(meaning it
was referenced by no entry)&lt;/em> the logic was able to take care of that too. &amp;#x1f440;&lt;/p>
&lt;p>The solution was designed to be used by more that one user: each person would have an account and they would be able to
access only their own entries and tags.&lt;/p>
&lt;p>What happened with that project? I used it for a while, but after some time I wasn&amp;rsquo;t really actively adding new entries,
so it just fated away. Also it was more of a personal utility website, than a blog. It was publicly available on
&lt;a
href="https://www.heroku.com/"
>Heroku&lt;/a> until quite recently actually. I took down the website when &lt;a
href="https://help.heroku.com/RSBRUH58/removal-of-heroku-free-product-plans-faq"
>Heroku announced their
removal of free product plans&lt;/a>.&lt;/p>
&lt;h3 id="platform-2-titan-aspnet" >
&lt;a href="#platform-2-titan-aspnet" aria-label="Anchor">#&lt;/a>
Platform 2: Titan (ASP.NET)
&lt;/h3>
&lt;p>This was &lt;em>an another&lt;/em> iteration of personal website development. I&amp;rsquo;ve decided to use
&lt;a
href="https://en.wikipedia.org/wiki/.NET"
>.NET&lt;/a> for this one, because earlier in that year I got my first job in the field
and I was hyped to build something with the technology we used at work &lt;em>(we were developing a few solutions and one of
them was built on top of &lt;a
href="https://en.wikipedia.org/wiki/.NET_Framework"
>.NET Framework&lt;/a>)&lt;/em>.&lt;/p>
&lt;p>Sadly I deleted the source code some time ago as a part of my GitHub purge, but I remember quite vividly the problem(s)
with this one. In a sentence: it was too overengineered.&lt;/p>
&lt;blockquote>
&lt;p>the strategy is definitely: first make it work, then make it right, and, finally, make it fast.&lt;br>
~ &amp;ldquo;The C Language and Models for Systems Programming&amp;rdquo; in Byte magazine (August 1983)&lt;/p>
&lt;/blockquote>
&lt;p>I wanted to use &lt;a
href="https://en.wikipedia.org/wiki/JSON_Web_Token"
>JWT&lt;/a> as a user authentication method. I&amp;rsquo;ve read on many
places on the web that it&amp;rsquo;s a bad idea, but still I was devoted to make it work. One of the issues I was aware of was
that you cannot &lt;em>easily&lt;/em> and &lt;em>permanently&lt;/em> logout a user when using JWT.&lt;/p>
&lt;p>In a nutshell JWT are tokens stored on the client-side. However, due to encryption, they can only be read by the
service. So with each request the client sends its token to the sever (like a cookie, you might say). If the token is
well-formed, then the server, with quite high certainty, can assume it wasn&amp;rsquo;t tinkered with.&lt;/p>
&lt;p>Going back to logout issue: to ensure that session will not last indefinitely the server could add &lt;code>&amp;quot;expiryDate&amp;quot;&lt;/code> field
to payload and check its value with each request and respond accordingly. That works pretty well. The client has no way
of modifying &lt;code>&amp;quot;expiryDate&amp;quot;&lt;/code>.&lt;/p>
&lt;p>Yet it&amp;rsquo;s much harder to kill the session before token expiries. My attempt was to add a new field to token&amp;rsquo;s payload
which would indicate that its no longer valid and send it back to the client. The problem though is that the client does
not &lt;strong>need&lt;/strong> to use the new token. It still can use the old one and, since we don&amp;rsquo;t store session information on the
server, the service has not way of detecting that. &amp;#x1f4a2;&lt;/p>
&lt;p>The solution I came up with was to use &lt;a
href="https://redis.io/"
>Redis&lt;/a>. To store that information on the server-side.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Redis:&lt;/strong>
The open source, in-memory data store used by millions of developers as a database, cache, streaming engine,
and message broker.&lt;/p>
&lt;/blockquote>
&lt;p>Once the server decides the user should be logged out, it will store JWT&amp;rsquo;s ID in Redis alongside with an indication of
whether the session has ended.&lt;/p>
&lt;p>Can you see now when I said it was overengineered? So many complex solutions for a logout functionality. The project
ended because I was too wornout to finish it.&lt;/p>
&lt;h3 id="platform-3-polaris-react" >
&lt;a href="#platform-3-polaris-react" aria-label="Anchor">#&lt;/a>
Platform 3: Polaris (React)
&lt;/h3>
&lt;p>I&amp;rsquo;m actually quite proud of this one. It&amp;rsquo;s a static website running on &lt;a
href="https://reactjs.org/"
>React&lt;/a> and hosting my
vector graphics. It&amp;rsquo;s painfully simple, but that was kinda the point. I wanted to have a way of hosting those images
ASAP, hence React and GitHub Pages, &lt;a
href="https://www.madebyme.today/Polaris/"
>where the website is actually hosted&lt;/a>.&lt;/p>
&lt;p>It wasn&amp;rsquo;t my first contact with technologies used in frontend, but it was the first time when I used &lt;em>state of the art&lt;/em>
tools for a new website. My knowledge of &lt;a
href="https://nodejs.org/en/"
>NodeJS&lt;/a> and utilities built on top of it was
practically nonexistent. That changed once I&amp;rsquo;ve written Polaris; now I&amp;rsquo;m just new to this stuff.&lt;/p>
&lt;!-- markdownlint-disable no-bare-urls -->
&lt;figure class="img-thumbnail">&lt;a href="https://madebyme.today/Polaris/" class="hide-external" target="_blank">&lt;img src="./steam-on-the-horizon-small.webp"
alt="Steam on the horizon" class="img-thumbnail"loading="lazy"
/>&lt;/a>&lt;figcaption>
&lt;h4>Steam on the horizon&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable no-bare-urls -->
&lt;p>I don&amp;rsquo;t have much more to say here other that, it was a while when I&amp;rsquo;ve used &lt;a
href="https://inkscape.org/"
>Inkscape&lt;/a> to create
those images and when I needed to use it again, for the sake of this blog, it was terrifying to see how much one can
forget what one has learned. ಠ_ಠ&lt;/p>
&lt;h3 id="platforms-long-forgotten" >
&lt;a href="#platforms-long-forgotten" aria-label="Anchor">#&lt;/a>
Platforms long forgotten
&lt;/h3>
&lt;p>There were many more projects which aimed to create my personal space on the web, but only these mentioned above are
still remembered by me enough to write a few sentences about.&lt;/p>
&lt;p>It&amp;rsquo;s safe to say they all suffered from the same fundamental flaws:&lt;/p>
&lt;ul>
&lt;li>they were too complex,&lt;/li>
&lt;li>they were trying to solve all possible future problem without aiming to deliver the most basic functionality,&lt;/li>
&lt;li>backend is hard.&lt;/li>
&lt;/ul>
&lt;p>This blog, on the other hand, is a static content website build with &lt;a
href="https://gohugo.io/"
>Hugo&lt;/a>. I think to some extend
I was aware that tools like Hugo existed, but I&amp;rsquo;ve never considered using them. I cannot really explain as to why; maybe
I was trying too hard to use a new fancy tool I&amp;rsquo;ve just learned about.&lt;/p>
&lt;h2 id="the-goal-and-future-of-this-project" >
&lt;a href="#the-goal-and-future-of-this-project" aria-label="Anchor">#&lt;/a>
The goal and future of this project
&lt;/h2>
&lt;p>The goal of this project is to create an archive for stuff I&amp;rsquo;m going to learn. It&amp;rsquo;s still unclear as to what I&amp;rsquo;m going
to post on this blog, but it&amp;rsquo;s safe to say that it&amp;rsquo;s going to be techy.&lt;/p>
&lt;p>I cannot say with any amount of certainty how often I&amp;rsquo;ll be writing new articles. I&amp;rsquo;m really looking forward to making
new content though. I believe it will also tilt me significantly into learning about new things.&lt;/p>
&lt;p>There are still some adjustments I need to make on the website, I&amp;rsquo;m probably going to focus on them before I&amp;rsquo;ll work on
new articles, but in general it is functionally complete.&lt;/p>
&lt;p>So as of now, thank you for reading.&lt;/p>
&lt;p>&amp;#x1f30a;&lt;/p></description></item></channel></rss>