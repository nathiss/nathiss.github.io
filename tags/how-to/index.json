[{"content":"Today I was again setting up OpenPGP application on a new Yubikey. After over two years I already forgot how tedious that can be\u0026hellip; I\u0026rsquo;m writing this blog post to create a clear trace of what I needed to do today and hopefully, when the time comes to set up an another key, it\u0026rsquo;ll be as easy as opening up a blog entry.\nIn general I started to learn about security keys a few years back. I read \u0026ldquo;Security Keys: Practical Cryptographic Second Factors for the Modern Web\u0026rdquo; research paper by Google, explaining how they work and how they made them \u0026ldquo;fool-proof\u0026rdquo;. The article is very detailed and yet written in a easy-to-follow way. If you\u0026rsquo;re interested in security, then give it a try!\nThe rest of this article is a ramp about configuring a new key. If you don\u0026rsquo;t have one/not having issues with one at the moment, you can give it amiss.\nSetting up a new key Yubico offers great software for managing your keys. If you\u0026rsquo;re planning on using yours as a 2FA method or FIDO2, then you are a happier person.\nYubikey \u0026amp; macOS To start with, I could not make the key detectable by GnuPG. I was getting \u0026ldquo;Operation not supported by device\u0026rdquo; error.\ngpg --card-status gpg: selecting card failed: Operation not supported by device gpg: OpenPGP card not available: Operation not supported by device Then I found DataDog\u0026rsquo;s Yubikey troubleshooting guide. It fixed my problem - a config file was missing in my GnuPG home.\nYubikey \u0026amp; OpenPGP Working with gpg sucks.\nThe tool is very advanced and offering a lot of features, so naturally its CLI is complex, to say the least. As it was before, so it was now, I was saved by this marvelous guide on how to prepare PGP keys for a Yubikey.\nIt encompasses everything: from generating keys, to rotating keys. It also offers different solutions depending on how much you care about security. I highly encourage you to configure your key with this guide.\nIt got me through most of the OpenPGP stuff pretty smoothly. Again, I was lost on making the key work with gpg-agent.\nYubikey \u0026amp; SSH Once all three keys (Signing, Encryption, Authentication) are correctly set up, it\u0026rsquo;s the moment for the agent. I always miss two parts: configuring gpg-agent and enabling SSH for gpg-agent.\nThe first one requires these few lines at the end of your rc file. I use Z shell, so it\u0026rsquo;s .zshrc for me.\nEnabling SSH for gpg-agent can be done by adding gpg-agent.conf file to your GnuPG home.\nYou\u0026rsquo;ll probably need to update the path pointing to pinentry-program. Just run\nwhich pinentry-mac If you don\u0026rsquo;t have pinentry-mac installed, then\nbrew install pinentry Cool. The last and yet very important step is to relaunch the agent:\ngpgconf --kill gpg-agent It should hopefully work.\nTips To get public SSH key run: ssh-add -L. It was around that time, when I tried to fetch my remote repo from GitHub\u0026hellip; and it wasn\u0026rsquo;t working. I lost a significant amount of time looking for some configuration issue, but there wasn\u0026rsquo;t any. I redid everything again to no avail.\nThen I saw that some of my GitHub Actions are not being triggered. ðŸ¤” I dig a bit more and it turned out GitHub was having issues.\nGitHub Status is a great site to keep in your RSS feed. Then issues arise, they cascade.\n","permalink":"https://madebyme.today/articles/how-to-security-keys/","summary":"Today I was again setting up OpenPGP application on a new Yubikey. After over two years I already forgot how tedious that can be\u0026hellip; I\u0026rsquo;m writing this blog post to create a clear trace of what I needed to do today and hopefully, when the time comes to set up an another key, it\u0026rsquo;ll be as easy as opening up a blog entry.\n","tag":"how-to","title":"How to: Security Keys"}]