<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on MadeByMe</title><link>https://madebyme.today/tags/rust/</link><description>Recent content in Rust on MadeByMe</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright 2023-2025, Kamil Rusin</copyright><lastBuildDate>Sun, 25 Feb 2024 14:26:12 +0100</lastBuildDate><atom:link href="https://madebyme.today/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Generating SVG Avatars From Identifiers</title><link>https://madebyme.today/projects/generating-svg-avatars-from-identifiers/</link><pubDate>Sun, 25 Feb 2024 14:26:12 +0100</pubDate><guid>https://madebyme.today/projects/generating-svg-avatars-from-identifiers/</guid><category>SVG</category><category>Rust</category><description>&lt;p>When you create a new social service on the internet, one of the things you need to think about is how to make a user&amp;rsquo;s
space feel like their own. Services like &lt;a href="https://github.blog/2013-08-14-identicons/">GitHub&lt;/a>, Roll20, or &lt;a href="https://www.reddit.com/r/reddit/comments/vtkmni/introducing_collectible_avatars/">Reddit&lt;/a>
generate &amp;mdash; or allow you to generate &amp;mdash; a custom avatar (i.e. &lt;a href="https://en.wikipedia.org/wiki/Identicon">Identicons&lt;/a>) for your account. Avatar auto-generation
is especially neat, as it does not require any engagement from the user. Let&amp;rsquo;s try to figure that out on our own.&lt;/p>
&lt;div class="alert alert-info text-left text-text flex flex-col items-start gap-0" >
&lt;h6 class="text-info-content flex gap-1 items-center !my-0 !text-lg">&lt;span class="">&lt;svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
&lt;path stroke-linecap="round" stroke-linejoin="round" d="M12 21a9.004 9.004 0 0 0 8.716-6.747M12 21a9.004 9.004 0 0 1-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 0 1 7.843 4.582M12 3a8.997 8.997 0 0 0-7.843 4.582m15.686 0A11.953 11.953 0 0 1 12 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0 1 21 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0 1 12 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 0 1 3 12c0-1.605.42-3.113 1.157-4.418" />
&lt;/svg>&lt;/span>Standing on the shoulders of giants&lt;/h6>
&lt;div class="collapsible-content w-full">
&lt;div class="mt-2 w-full text-base-content markdown-body">This blog post has been inspired by &lt;a href="https://francoisbest.com/posts/2021/hashvatars">Representing SHA-256 Hashes As Avatars&lt;/a> by &lt;a href="https://francoisbest.com/">François Best&lt;/a>. I&amp;rsquo;m re-creating ideas
presented by François in their article &amp;mdash; with slight modifications &amp;mdash; in &lt;a href="https://madebyme.today/tags/rust/">Rust&lt;/a>.&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>I think this blog post is one of those things which are easier to understand if you&amp;rsquo;d see the end result first. So, for
those interested here&amp;rsquo;s a spoiler.&lt;/p>
&lt;details class="collapse collapse-arrow alert alert-spoiler text-left p-0 text-text flex flex-col items-start gap-0" >
&lt;summary class="collapse-title text-spoiler-content flex gap-1 items-center !my-0 !text-lg">Spoiler!&lt;/summary>
&lt;div class="collapsible-content p-4 w-full">
&lt;div class="mt-2 w-full text-base-content markdown-body">&lt;p>This is the end result:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360874092143">
#figure-svg-1758503360874092143 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;g>
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(127.51471, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(127.51471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(144.38971, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(135.01471, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(135.01471, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(151.88971, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(146.26471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(138.76471, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(251.18384, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(239.93384, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(230.55884, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(228.68384, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(224.93384, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(228.68384, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z"
fill="hsl(230.55884, 20%, 52.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(228.68384, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z"
fill="hsl(167.05148, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z"
fill="hsl(172.67648, 20%, 65%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z"
fill="hsl(168.92648, 80%, 52.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z"
fill="hsl(178.30148, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z"
fill="hsl(176.42648, 40%, 40%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z"
fill="hsl(180.17648, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z"
fill="hsl(185.80148, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z"
fill="hsl(183.92648, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/g>
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for identifier &amp;quot;Foo&amp;quot;.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>The avatar has 24 segments and consists of 24 &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathElement">&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> tags. The coordinates describing paths are static, but their
colors are generated from &lt;a href="https://en.wikipedia.org/wiki/SHA-2">SHA-256&lt;/a> of the identifier.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">SHA256(&amp;#34;Foo&amp;#34;) == [ 44, 38, 180, 107, 104, 255, 198, 143,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl"> 249, 155, 69, 60, 29, 48, 65, 52,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl"> 19, 66, 45, 112, 100, 131, 191, 160,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl"> 249, 138, 94, 136, 98, 102, 231, 174]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>&lt;/span>&lt;span class="cl">Base64(SHA256(&amp;#34;Foo&amp;#34;)) == LCa0a2j/xo/5m0U8HTBBNBNCLXBkg7+g+YpeiGJm564=
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The rest of this blog post focuses on translating the byte array into an avatar that looks &lt;em>nice&lt;/em>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;h2 id="svg-scaffolding" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#svg-scaffolding" aria-label="Anchor">SVG scaffolding&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>Let&amp;rsquo;s think how to prepare the SVG&amp;rsquo;s structure. We know that each segment must be its own &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathElement">&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> element, so we can
color them individually with the &lt;a href="https://www.w3.org/TR/SVG2/painting.html#SpecifyingFillPaint">fill&lt;/a> property. Generating annuluses sectors can be challenging &amp;mdash; it would require
using two(!) &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands">arcs&lt;/a>, which is way too much &amp;mdash; instead, we can cheat a little and create overlapping
circle sectors. It will make paths simpler and requires only one(!) arc.&lt;/p>
&lt;p>Starting with the &lt;code>&amp;lt;svg&amp;gt;&lt;/code> tag we get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-svg" data-lang="svg">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;svg&lt;/span> &lt;span class="na">viewBox=&lt;/span>&lt;span class="s">&amp;#34;-1 -1 2 2&amp;#34;&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;/svg&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Paths generation gets much easier if the center of &amp;ldquo;circles&amp;rdquo; is in $(0, 0)$. We can do that by setting the &lt;code>viewBox&lt;/code>
property as shown above: top-left corner is $(-1, -1)$, width is $2$, and height is $2$.&lt;/p>
&lt;p>OK. Now we need to create circle sectors. SVG has some tags for constructing &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes">basic shapes&lt;/a> (like circles, rectangles,
or ellipses). Sadly, pizza slices are &lt;em>not&lt;/em> considered as &amp;ldquo;basic&amp;rdquo;, so there&amp;rsquo;s no &lt;code>&amp;lt;pizza-slice&amp;gt;&lt;/code> to help us here.
Instead, we need to use the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathElement">&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> tag.&lt;/p>
&lt;h3 id="making-pizza-slices-pizza" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#making-pizza-slices-pizza" aria-label="Anchor">Making pizza slices &amp;#x1f355;&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h3>
&lt;p>The &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathElement">&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> tag is nice, because it allows you to construct any complex shape. For it to work we need to describe how
we want our shape to look like with its special &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathData">path data&lt;/a> syntax. It&amp;rsquo;s fairly complex, but we only need to grasp 4 of
its commands:&lt;/p>
&lt;ul>
&lt;li>the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataMovetoCommands">absolute &lt;strong>&amp;ldquo;moveto&amp;rdquo;&lt;/strong>&lt;/a> command &amp;mdash; which establishes a new initial point,&lt;/li>
&lt;li>the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataLinetoCommands">absolute &lt;strong>&amp;ldquo;lineto&amp;rdquo;&lt;/strong>&lt;/a> command &amp;mdash; which draws a line from the current point to the given
$(x, y)$,&lt;/li>
&lt;li>the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands">absolute elliptical arc curve&lt;/a> command &amp;mdash; which draws an elliptical arc from the current point to
the given $(x, y)$,&lt;/li>
&lt;li>the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataClosePathCommand">&lt;strong>&amp;ldquo;closepath&amp;rdquo;&lt;/strong>&lt;/a> command &amp;mdash; which ends the current path by connecting it back to its initial
point.&lt;/li>
&lt;/ul>
&lt;p>To start easy, let&amp;rsquo;s consider an example with 4 pizza slices:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-svg" data-lang="svg">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;svg&lt;/span> &lt;span class="na">overflow=&lt;/span>&lt;span class="s">&amp;#34;visible&amp;#34;&lt;/span> &lt;span class="na">viewBox=&lt;/span>&lt;span class="s">&amp;#34;-1 -1 2 2&amp;#34;&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;IndianRed&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3">3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L 1,0 A 1,1,0,0,1,0,1 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;LightCoral&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4">4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;Salmon&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5">5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;DarkSalmon&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;/svg&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It renders to:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360875236915">
#figure-svg-1758503360875236915 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0,1 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;div class="alert alert-info text-left text-text flex flex-col items-start gap-0" >
&lt;h6 class="text-info-content flex gap-1 items-center !my-0 !text-lg">&lt;span class="">&lt;svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
&lt;path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125" />
&lt;/svg>&lt;/span>Note&lt;/h6>
&lt;div class="collapsible-content w-full">
&lt;div class="mt-2 w-full text-base-content markdown-body">I added &lt;code>overflow=&amp;quot;visible&amp;quot;&lt;/code> to the SVG tag, because &amp;mdash; with a non-zero stroke &amp;mdash; the image is &lt;em>slightly&lt;/em> bigger than
its &lt;code>viewBox&lt;/code> and the stroke lines get cut off at $(-1, 0)$, $(1, 0)$, $(0, 1)$, and $(-1, 0)$.&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>We can see an interesting patter here: coordinates of the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataLinetoCommands">&lt;strong>&amp;ldquo;lineto&amp;rdquo;&lt;/strong>&lt;/a> command are the same, as the
coordinates of the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands">elliptical arc curve&lt;/a> command of the &lt;em>previous&lt;/em> element.&lt;/p>
&lt;p>&lt;em>Ok, but how to divide these slices into halves?&lt;/em> &amp;mdash; you may ask.&lt;/p>
&lt;p>To do that we need to find the points in the middle of the arcs.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360875652769">
#figure-svg-1758503360875652769 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg id="slices-with-points" overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;style>
#slices-with-points text {
font-size: 0.2px;
font-family: var(--bs-font-monospace);
fill: var(--bs-body-color);
display: inline-block;
}
#slices-with-points circle {
fill: var(--bs-body-color);
stroke: none;
}
&lt;/style>
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0,1 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;circle cx="0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="-0.70710678118" text-anchor="start" dominant-baseline="text-top">(ax, ay)&lt;/text>
&lt;circle cx="0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="0.70710678118" text-anchor="start" dominant-baseline="hanging">(bx, by)&lt;/text>
&lt;circle cx="-0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="-0.70710678118" text-anchor="end" dominant-baseline="text-top">(cx, cy)&lt;/text>
&lt;circle cx="-0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="0.70710678118" text-anchor="end" dominant-baseline="hanging">(dx, dy)&lt;/text>
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;p>Fortunately &amp;mdash; since the circle&amp;rsquo;s middle point is $(0, 0)$ and the arc points are in the middle of their arcs &amp;mdash; we
know that the absolute value of their coordinates is the same. So, our diagram simplifies to:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360875867850">
#figure-svg-1758503360875867850 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg id="slices-with-same-points" overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;style>
#slices-with-same-points text {
font-size: 0.2px;
font-family: var(--bs-font-monospace);
fill: var(--bs-body-color);
display: inline-block;
}
#slices-with-same-points circle {
fill: var(--bs-body-color);
stroke: none;
}
&lt;/style>
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0,1 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;circle cx="0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="-0.70710678118" text-anchor="start" dominant-baseline="text-top">(a, -a)&lt;/text>
&lt;circle cx="0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="0.70710678118" text-anchor="start" dominant-baseline="hanging">(a, a)&lt;/text>
&lt;circle cx="-0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="-0.70710678118" text-anchor="end" dominant-baseline="text-top">(-a, -a)&lt;/text>
&lt;circle cx="-0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="0.70710678118" text-anchor="end" dominant-baseline="hanging">(-a, a)&lt;/text>
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;p>Great. &amp;#x1f44c;&lt;/p>
&lt;p>Now we can use the equation of a circle to find the middle points.&lt;/p>
&lt;p>$$
\begin{aligned}
(x - x_0)^2 + (y - y_0)^2 &amp;amp;= r^2 \\[0.25em]
(a - 0)^2 + (a - 0)^2 &amp;amp;= 1^2 \\[0.25em]
2a^2 &amp;amp;= 1 \\[0.25em]
a^2 &amp;amp;= \frac{1}{2} \\[0.25em]
a &amp;amp;= \sqrt{\frac{1}{2}}
\end{aligned}
$$&lt;/p>
&lt;p>By adding four more pizza slices we get:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360876115401">
#figure-svg-1758503360876115401 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;h3 id="layers-of-pizza" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#layers-of-pizza" aria-label="Anchor">Layers of pizza&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h3>
&lt;p>The next step is to create additional (smaller) layers of circle sectors. Let&amp;rsquo;s say we want three circles; there&amp;rsquo;re two
obvious ways of selecting division points: equal radii, or equal areas. Equal radii is simpler, so let&amp;rsquo;s try this one
first.&lt;/p>
&lt;p>If the outermost circle has a radius of $1$, then the middle circle will have a radius of $0.\overline{6}$, and the
smallest one will have $0.\overline{3}$.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360876339228">
#figure-svg-1758503360876339228 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.6666667 A0.6666667,0.6666667,0,0,1,0.47140452,-0.47140452 z" fill="LightYellow" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.47140452,-0.47140452 A0.6666667,0.6666667,0,0,1,0.6666667,0 z" fill="LemonChiffon" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.6666667,0 A0.6666667,0.6666667,0,0,1,0.47140452,0.47140452 z" fill="LightGoldenrodYellow"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.47140452,0.47140452 A0.6666667,0.6666667,0,0,1,0,0.6666667 z" fill="PapayaWhip" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.6666667 A0.6666667,0.6666667,0,0,1,-0.47140452,0.47140452 z" fill="Moccasin" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.47140452,0.47140452 A0.6666667,0.6666667,0,0,1,-0.6666667,0 z" fill="PeachPuff" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.6666667,0 A0.6666667,0.6666667,0,0,1,-0.47140452,-0.47140452 z" fill="PaleGoldenrod"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.47140452,-0.47140452 A0.6666667,0.6666667,0,0,1,-0,-0.6666667 z" fill="Khaki" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.33333334 A0.33333334,0.33333334,0,0,1,0.23570226,-0.23570226 z" fill="MediumSeaGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.23570226,-0.23570226 A0.33333334,0.33333334,0,0,1,0.33333334,0 z" fill="SeaGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.33333334,0 A0.33333334,0.33333334,0,0,1,0.23570226,0.23570226 z" fill="ForestGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.23570226,0.23570226 A0.33333334,0.33333334,0,0,1,0,0.33333334 z" fill="Green" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.33333334 A0.33333334,0.33333334,0,0,1,-0.23570226,0.23570226 z" fill="DarkGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.23570226,0.23570226 A0.33333334,0.33333334,0,0,1,-0.33333334,0 z" fill="YellowGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.33333334,0 A0.33333334,0.33333334,0,0,1,-0.23570226,-0.23570226 z" fill="OliveDrab" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.23570226,-0.23570226 A0.33333334,0.33333334,0,0,1,-0,-0.33333334 z" fill="Olive" stroke="black"
stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
\quad\text{and}\quad
r_2 = 0.\overline{6}
\quad\text{and}\quad
r_3 = 0.\overline{3}
$$&lt;/p>
&lt;p>Not that it matters, but the smallest circle is a little &lt;em>too&lt;/em> small for my liking. But, before we decide, we need to
see circles with equal areas first.&lt;/p>
&lt;p>$$
\begin{aligned}
\Pi r_1^2 - \Pi r_2^2 = \Pi r_2^2 - \Pi r_3^2
\quad&amp;amp;\text{and}\quad
\Pi r_2^2 - \Pi r_3^2 = \Pi r_3^2 \\[0.25em]
1 - r_2^2 = r_2^2 - r_3^2
\quad&amp;amp;\text{and}\quad
r_2^2 - r_3^2 = r_3^2 \\[0.25em]
1 = 2r_2^2 - r_3^2
\quad&amp;amp;\text{and}\quad
r_2^2 = 2r_3^2 \\[0.25em]
1 = 3r_3^2
\quad&amp;amp;\text{and}\quad
r_2^2 = 2r_3^2 \\[0.25em]
r_3 = \sqrt{\frac{1}{3}}
\quad&amp;amp;\text{and}\quad
r_2 = \sqrt{\frac{2}{3}}
\end{aligned}
$$&lt;/p>
&lt;p>Which gives us this avatar:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360876541444">
#figure-svg-1758503360876541444 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.8164966 A0.8164966,0.8164966,0,0,1,0.57735026,-0.57735026 z" fill="LightYellow" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.57735026,-0.57735026 A0.8164966,0.8164966,0,0,1,0.8164966,0 z" fill="LemonChiffon" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.8164966,0 A0.8164966,0.8164966,0,0,1,0.57735026,0.57735026 z" fill="LightGoldenrodYellow"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.57735026,0.57735026 A0.8164966,0.8164966,0,0,1,0,0.8164966 z" fill="PapayaWhip" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.8164966 A0.8164966,0.8164966,0,0,1,-0.57735026,0.57735026 z" fill="Moccasin" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.57735026,0.57735026 A0.8164966,0.8164966,0,0,1,-0.8164966,0 z" fill="PeachPuff" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.8164966,0 A0.8164966,0.8164966,0,0,1,-0.57735026,-0.57735026 z" fill="PaleGoldenrod"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.57735026,-0.57735026 A0.8164966,0.8164966,0,0,1,-0,-0.8164966 z" fill="Khaki" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.57735026 A0.57735026,0.57735026,0,0,1,0.4082483,-0.4082483 z" fill="MediumSeaGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.4082483,-0.4082483 A0.57735026,0.57735026,0,0,1,0.57735026,0 z" fill="SeaGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.57735026,0 A0.57735026,0.57735026,0,0,1,0.4082483,0.4082483 z" fill="ForestGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.4082483,0.4082483 A0.57735026,0.57735026,0,0,1,0,0.57735026 z" fill="Green" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.57735026 A0.57735026,0.57735026,0,0,1,-0.4082483,0.4082483 z" fill="DarkGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.4082483,0.4082483 A0.57735026,0.57735026,0,0,1,-0.57735026,0 z" fill="YellowGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.57735026,0 A0.57735026,0.57735026,0,0,1,-0.4082483,-0.4082483 z" fill="OliveDrab" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.4082483,-0.4082483 A0.57735026,0.57735026,0,0,1,-0,-0.57735026 z" fill="Olive" stroke="black"
stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
\quad\text{and}\quad
r_2 = \sqrt{\frac{2}{3}}
\quad\text{and}\quad
r_3 = \sqrt{\frac{1}{3}}
$$&lt;/p>
&lt;p>Which is also not ideal, but the other way around&amp;hellip; I was tinkering with the radii a bit and I think I found a &lt;a href="https://en.wikipedia.org/wiki/Arithmetic_mean">middle
ground&lt;/a> with which I&amp;rsquo;m happy.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360876748670">
#figure-svg-1758503360876748670 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="LightYellow" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="LemonChiffon" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="LightGoldenrodYellow"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="PapayaWhip" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="Moccasin" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="PeachPuff" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="PaleGoldenrod" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="Khaki" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z" fill="MediumSeaGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="SeaGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="ForestGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="Green" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="DarkGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z" fill="YellowGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z" fill="OliveDrab" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z" fill="Olive" stroke="black"
stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
\quad\text{and}\quad
r_2 = \frac{0.\overline{6} + \sqrt{\frac{2}{3}}}{2}
\quad\text{and}\quad
r_3 = \frac{0.\overline{3} + \sqrt{\frac{1}{3}}}{2}
$$&lt;/p>
&lt;p>Radii in the circles above are the arithmetic average of the equal radii variant and the equal areas variant.&lt;/p>
&lt;h2 id="working-with-colors" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#working-with-colors" aria-label="Anchor">Working with colors&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>With the SVG structure out of the way we can focus on selecting quasi-random colors for the circle segments based on the
identifier&amp;rsquo;s hash. &lt;a href="https://en.wikipedia.org/wiki/SHA-2">SHA-256&lt;/a> hashes have 32 bytes; it&amp;rsquo;s more than we need &amp;mdash; assuming we need a single byte
per circle sector &amp;mdash; which gives us another benefit: we can slide in the 4&lt;sup>th&lt;/sup> circle, if we want
to.&lt;/p>
&lt;p>For now though, let&amp;rsquo;s talk about the colors. If we&amp;rsquo;d use &lt;a href="https://en.wikipedia.org/wiki/HSL_and_HSV">HSL&lt;/a>, we can split each byte into 4 pieces: 4 bits for hue
(since it&amp;rsquo;s the most dominant), 2 bits for saturation, and 2 bits for lightness. Path&amp;rsquo;s &lt;a href="https://www.w3.org/TR/SVG2/painting.html#SpecifyingFillPaint">fill&lt;/a> property accepts any
&lt;a href="https://www.w3.org/TR/SVG2/painting.html#SpecifyingPaint">paint&lt;/a> value, which basically means we need to format our color to a standard CSS&amp;rsquo;s hue.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-5">&lt;a class="lnlinks" href="#hl-2-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-6">&lt;a class="lnlinks" href="#hl-2-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">16.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-7">&lt;a class="lnlinks" href="#hl-2-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-8">&lt;a class="lnlinks" href="#hl-2-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-9">&lt;a class="lnlinks" href="#hl-2-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-10">&lt;a class="lnlinks" href="#hl-2-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-11">&lt;a class="lnlinks" href="#hl-2-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">20.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">80.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-12">&lt;a class="lnlinks" href="#hl-2-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">40.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">50.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-13">&lt;a class="lnlinks" href="#hl-2-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-14">&lt;a class="lnlinks" href="#hl-2-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">format!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hsl(&lt;/span>&lt;span class="si">{h}&lt;/span>&lt;span class="s">, &lt;/span>&lt;span class="si">{s}&lt;/span>&lt;span class="s">%, &lt;/span>&lt;span class="si">{l}&lt;/span>&lt;span class="s">%)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-15">&lt;a class="lnlinks" href="#hl-2-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alright, let&amp;rsquo;s generate an avatar for &lt;code>&amp;quot;foo&amp;quot;&lt;/code> and see how it looks like.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360876959673">
#figure-svg-1758503360876959673 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(45, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(45, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(247.5, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(135, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(135, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(337.5, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(270, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(180, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(337.5, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(202.5, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(90, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(67.5, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(22.5, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(67.5, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="hsl(90, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(67.5, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z" fill="hsl(22.5, 20%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="hsl(90, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="hsl(45, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="hsl(157.5, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="hsl(135, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z" fill="hsl(180, 20%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z" fill="hsl(247.5, 80%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z" fill="hsl(225, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for &amp;quot;foo&amp;quot;.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Well, it does not look terrible, but it&amp;rsquo;s not eye-catching either. To be perfectly honest, we should expect something
like this; &lt;a href="https://en.wikipedia.org/wiki/SHA-2">SHA-256&lt;/a> returns (and for that matter all other hash functions too) a quasi-random values. If we
convert those &lt;em>raw&lt;/em> bytes to fill colors, we&amp;rsquo;ll get quasi-random colors. To make it nicer we need to modify our
algorithm slightly; we need to calculate a global theme, if you will, for the avatar, so that a part of circle segments'
colors come from that theme. We can do that by folding all hash bytes into a single one with XOR.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalized_theme&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">16.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-7">&lt;a class="lnlinks" href="#hl-3-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-8">&lt;a class="lnlinks" href="#hl-3-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-9">&lt;a class="lnlinks" href="#hl-3-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-10">&lt;a class="lnlinks" href="#hl-3-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">120.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-11">&lt;a class="lnlinks" href="#hl-3-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">20.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">80.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-12">&lt;a class="lnlinks" href="#hl-3-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">40.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">50.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-13">&lt;a class="lnlinks" href="#hl-3-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-14">&lt;a class="lnlinks" href="#hl-3-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">format!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hsl(&lt;/span>&lt;span class="si">{h}&lt;/span>&lt;span class="s">, &lt;/span>&lt;span class="si">{s}&lt;/span>&lt;span class="s">%, &lt;/span>&lt;span class="si">{l}&lt;/span>&lt;span class="s">%)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-15">&lt;a class="lnlinks" href="#hl-3-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-16">&lt;a class="lnlinks" href="#hl-3-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-17">&lt;a class="lnlinks" href="#hl-3-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">f32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-18">&lt;a class="lnlinks" href="#hl-3-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-19">&lt;a class="lnlinks" href="#hl-3-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-20">&lt;a class="lnlinks" href="#hl-3-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">u8&lt;/span>::&lt;span class="no">MAX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-21">&lt;a class="lnlinks" href="#hl-3-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-22">&lt;a class="lnlinks" href="#hl-3-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-23">&lt;a class="lnlinks" href="#hl-3-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">generate_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash&lt;/span>: &lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-24">&lt;a class="lnlinks" href="#hl-3-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-25">&lt;a class="lnlinks" href="#hl-3-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-26">&lt;a class="lnlinks" href="#hl-3-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">colors&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-27">&lt;a class="lnlinks" href="#hl-3-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cloned&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-28">&lt;a class="lnlinks" href="#hl-3-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-29">&lt;a class="lnlinks" href="#hl-3-29">29&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">collect&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-30">&lt;a class="lnlinks" href="#hl-3-30">30&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-31">&lt;a class="lnlinks" href="#hl-3-31">31&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">unimplemented!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Generate SVG paths.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-32">&lt;a class="lnlinks" href="#hl-3-32">32&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This code renders:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360877235076">
#figure-svg-1758503360877235076 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(133.58824, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(133.58824, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(201.08824, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(163.58824, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(163.58824, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(231.08824, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(208.58824, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(178.58824, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(231.08824, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(186.08824, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(148.58824, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(141.08824, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(126.08824, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(141.08824, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="hsl(148.58824, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(141.08824, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z"
fill="hsl(126.08824, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="hsl(148.58824, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="hsl(133.58824, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="hsl(171.08824, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="hsl(163.58824, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z"
fill="hsl(178.58824, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z"
fill="hsl(201.08824, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z"
fill="hsl(193.58824, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for &amp;quot;foo&amp;quot; with a theme.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>It looks rather good, if I say so myself. The solution works as it&amp;rsquo;s suppose to: it &lt;em>most probably&lt;/em> produces different
avatars for different identifiers (&lt;a href="https://en.wikipedia.org/wiki/Hash_collision">hash collisions&lt;/a> do happen) and they look acceptable. However, the rings seem to
&lt;em>phase&lt;/em> into each other &amp;mdash; their colors are too similar. We could experiment with another theme: a ring theme &amp;mdash; which
would be a XOR-fold of all bytes that represent a single ring &amp;mdash; and check the results.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalized_theme&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_ring_theme&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-2">&lt;a class="lnlinks" href="#hl-4-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-3">&lt;a class="lnlinks" href="#hl-4-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-4">&lt;a class="lnlinks" href="#hl-4-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-5">&lt;a class="lnlinks" href="#hl-4-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-6">&lt;a class="lnlinks" href="#hl-4-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">16.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-7">&lt;a class="lnlinks" href="#hl-4-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-8">&lt;a class="lnlinks" href="#hl-4-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-9">&lt;a class="lnlinks" href="#hl-4-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-10">&lt;a class="lnlinks" href="#hl-4-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_theme&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-11">&lt;a class="lnlinks" href="#hl-4-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">120.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_ring_theme&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-12">&lt;a class="lnlinks" href="#hl-4-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">30.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-13">&lt;a class="lnlinks" href="#hl-4-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">20.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">80.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-14">&lt;a class="lnlinks" href="#hl-4-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">40.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">50.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-15">&lt;a class="lnlinks" href="#hl-4-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-16">&lt;a class="lnlinks" href="#hl-4-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">format!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hsl(&lt;/span>&lt;span class="si">{h}&lt;/span>&lt;span class="s">, &lt;/span>&lt;span class="si">{s}&lt;/span>&lt;span class="s">%, &lt;/span>&lt;span class="si">{l}&lt;/span>&lt;span class="s">%)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-17">&lt;a class="lnlinks" href="#hl-4-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-18">&lt;a class="lnlinks" href="#hl-4-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-19">&lt;a class="lnlinks" href="#hl-4-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">f32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-20">&lt;a class="lnlinks" href="#hl-4-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-21">&lt;a class="lnlinks" href="#hl-4-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">u8&lt;/span>::&lt;span class="no">MAX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-22">&lt;a class="lnlinks" href="#hl-4-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-23">&lt;a class="lnlinks" href="#hl-4-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-24">&lt;a class="lnlinks" href="#hl-4-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">generate_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash&lt;/span>: &lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-25">&lt;a class="lnlinks" href="#hl-4-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-26">&lt;a class="lnlinks" href="#hl-4-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ring_themes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-27">&lt;a class="lnlinks" href="#hl-4-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">windows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-28">&lt;a class="lnlinks" href="#hl-4-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calculate_theme&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-29">&lt;a class="lnlinks" href="#hl-4-29">29&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">collect&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-30">&lt;a class="lnlinks" href="#hl-4-30">30&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-31">&lt;a class="lnlinks" href="#hl-4-31">31&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">colors&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-32">&lt;a class="lnlinks" href="#hl-4-32">32&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-33">&lt;a class="lnlinks" href="#hl-4-33">33&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cloned&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-34">&lt;a class="lnlinks" href="#hl-4-34">34&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">enumerate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-35">&lt;a class="lnlinks" href="#hl-4-35">35&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ring_themes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-36">&lt;a class="lnlinks" href="#hl-4-36">36&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">collect&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-37">&lt;a class="lnlinks" href="#hl-4-37">37&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-38">&lt;a class="lnlinks" href="#hl-4-38">38&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">unimplemented!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Generate SVG paths.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-39">&lt;a class="lnlinks" href="#hl-4-39">39&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With the final touch we get:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360877537369">
#figure-svg-1758503360877537369 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(127.51471, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(127.51471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(144.38971, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(135.01471, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(135.01471, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(151.88971, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(146.26471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(138.76471, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(251.18384, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(239.93384, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(230.55884, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(228.68384, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(224.93384, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(228.68384, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="hsl(230.55884, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(228.68384, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z"
fill="hsl(167.05148, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="hsl(172.67648, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="hsl(168.92648, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="hsl(178.30148, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="hsl(176.42648, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z"
fill="hsl(180.17648, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z"
fill="hsl(185.80148, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z"
fill="hsl(183.92648, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for &amp;quot;foo&amp;quot; with a global theme and a ring theme.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Which is exactly the thing that hides in the spoiler block at the top. If you restrained yourself and didn&amp;rsquo;t check it
out: congratulations. Now feel free to do so. &amp;#x1f603;&lt;/p>
&lt;h2 id="conclusions" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#conclusions" aria-label="Anchor">Conclusions&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>Working on this blog post has been an effort I wanted to make to better understand how SVGs work from the inside, as
well as, a challenge to reverse-engineer ideas from &lt;a href="https://francoisbest.com/posts/2021/hashvatars">Representing SHA-256 Hashes As Avatars&lt;/a>.&lt;/p>
&lt;p>I&amp;rsquo;m not working on any service which would benefit from these avatars. If I happen to work on one in the future I&amp;rsquo;ll for
sure like to try them out. To make this solution easier to re-use in other places, I&amp;rsquo;ve made a Rust crate called
&lt;a href="https://crates.io/crates/svg_avatars">&lt;code>svg_avatars&lt;/code>&lt;/a>, which implements this exact solution. The crate is fairly minimal, so if anyone has any idea on how to
enhance it, I&amp;rsquo;d love to hear from you/check out your PRs.&lt;/p>
&lt;p>As a closing thought, one of the parameters of the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands">absolute elliptical arc curve&lt;/a> command is the
&lt;code>sweep-flag&lt;/code> parameter. It allows you to determine, whether an arc should be a smiley face or a sad face. If the
parameter is &lt;code>1&lt;/code> &amp;mdash; as it is in our case &amp;mdash; then the arc is a sad face. However, if you&amp;rsquo;d flip the flags to be &lt;code>0&lt;/code>,
then all arcs become smiley faces&amp;hellip;&lt;/p>
&lt;figure>&lt;style id="figure-svg-1758503360877770703">
#figure-svg-1758503360877770703 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,0,0.70710677,-0.70710677 z" fill="hsl(127.51471, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,0,1,0 z" fill="hsl(127.51471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,0,0.70710677,0.70710677 z" fill="hsl(144.38971, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,0,0,1 z" fill="hsl(135.01471, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,0,-0.70710677,0.70710677 z" fill="hsl(135.01471, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,0,-1,0 z" fill="hsl(151.88971, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,0,-0.70710677,-0.70710677 z" fill="hsl(146.26471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,0,-0,-1 z" fill="hsl(138.76471, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,0,0.5243774,-0.5243774 z" fill="hsl(251.18384, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,0,0.7415816,0 z" fill="hsl(239.93384, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,0,0.5243774,0.5243774 z" fill="hsl(230.55884, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,0,0,0.7415816 z" fill="hsl(228.68384, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,0,-0.5243774,0.5243774 z" fill="hsl(224.93384, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,0,-0.7415816,0 z" fill="hsl(228.68384, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,0,-0.5243774,-0.5243774 z" fill="hsl(230.55884, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,0,-0,-0.7415816 z" fill="hsl(228.68384, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,0,0.32197526,-0.32197526 z"
fill="hsl(167.05148, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,0,0.45534182,0 z" fill="hsl(172.67648, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,0,0.32197526,0.32197526 z" fill="hsl(168.92648, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,0,0,0.45534182 z" fill="hsl(178.30148, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,0,-0.32197526,0.32197526 z" fill="hsl(176.42648, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,0,-0.45534182,0 z"
fill="hsl(180.17648, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,0,-0.32197526,-0.32197526 z"
fill="hsl(185.80148, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,0,-0,-0.45534182 z"
fill="hsl(183.92648, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>&lt;em>Smiley-face&lt;/em> avatar for &amp;quot;foo&amp;quot;.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>&amp;hellip;and the avatar &lt;a href="https://en.wikipedia.org/wiki/Emergence">emerges&lt;/a> as a spiderweb. Who does not love a single-line-change feature for Spooktober.&lt;/p>
&lt;!-- Footnotes &amp; link definitions -->
&lt;!-- markdownlint-disable link-image-reference-definitions -->
&lt;!-- markdownlint-enable link-image-reference-definitions -->
&lt;!-- markdownlint-disable link-image-reference-definitions -->
&lt;!-- markdownlint-enable link-image-reference-definitions -->
&lt;!-- markdownlint-disable link-image-reference-definitions -->
&lt;!-- markdownlint-enable link-image-reference-definitions --></description></item><item><title>Cancellable</title><link>https://madebyme.today/projects/cancellable/</link><pubDate>Wed, 26 Jul 2023 09:08:18 +0200</pubDate><guid>https://madebyme.today/projects/cancellable/</guid><category>Rust</category><category>Crates</category><category>Open Source</category><description>&lt;p>Recently I&amp;rsquo;m investing a lot of time into developing a game server in &lt;a href="https://www.rust-lang.org/">Rust&lt;/a>. I started with
implementing network layer based on &lt;a href="https://en.wikipedia.org/wiki/WebSocket">WebSockets&lt;/a>. It&amp;rsquo;s far from being ready,
but I developed a helper crate for creating detached, cancellable services.&lt;/p>
&lt;h2 id="game-server-backstory" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#game-server-backstory" aria-label="Anchor">Game server backstory&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>The idea of developing an authoritative game server always seemed appealing to me. Network programming, however, has
many pitfalls:&lt;/p>
&lt;ul>
&lt;li>Server need to validate all use inputs to protect game state from bad actors.&lt;/li>
&lt;li>Ill-formed data sent by one client &lt;em>should&lt;/em> not deny service for another player.&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Async/await">Async programming&lt;/a> is hard in general.&lt;/li>
&lt;/ul>
&lt;p>So, in the past I have had many attempts to develop a game server. Each improving on mistakes made in the previous one.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/nathiss/spectrum-old">spectrum-old&lt;/a> &amp;ndash; A real-time multiplayer browser game,&lt;/li>
&lt;li>&lt;a href="https://github.com/nathiss/Fusion-cpp">Fusion-cpp&lt;/a> &amp;ndash; This is the source code of the server for the Fusion game,&lt;/li>
&lt;li>&lt;em>[private repo]&lt;/em>,&lt;/li>
&lt;li>&lt;em>[private repo]&lt;/em>,&lt;/li>
&lt;li>&lt;em>[private repo]&lt;/em>.&lt;/li>
&lt;/ul>
&lt;p>And now I&amp;rsquo;m working on another. :thumbs_up:&lt;/p>
&lt;p>This time, improvements over the previous one are creating implementation that depend on traits and organizing TODOs to
a single GitHub project.&lt;/p>
&lt;!-- markdownlint-disable no-bare-urls -->
&lt;figure>&lt;a href="https://xkcd.com/1906/" class="hide-external" target="_blank">&lt;img src="https://imgs.xkcd.com/comics/making_progress.png"
alt="xkcd: Making Progress"loading="lazy"
/>&lt;/a>&lt;figcaption>
&lt;h4>Making Progress&lt;/h4>&lt;p>xkcd #1906&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable no-bare-urls -->
&lt;h2 id="cancellable-crate" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#cancellable-crate" aria-label="Anchor">Cancellable crate&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>Network functionalities in game servers (listeners, TCP streams, etc.) await for some input and &lt;em>usually&lt;/em> yield a
result.&lt;/p>
&lt;div class="table-responsive">&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Component&lt;/th>
&lt;th>Input&lt;/th>
&lt;th>Output&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Listener&lt;/td>
&lt;td>new incoming connection&lt;/td>
&lt;td>&lt;code>Client&lt;/code> object&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP Stream&lt;/td>
&lt;td>data package&lt;/td>
&lt;td>parsed &lt;code>ClientMessage&lt;/code> model&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ping service&lt;/td>
&lt;td>timer tick&lt;/td>
&lt;td>new ping frame&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;p>We can define a &lt;code>trait&lt;/code> that will describe common interface for all of them:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cp">#[async_trait::async_trait]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Cancellable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span> &lt;span class="nb">Result&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span> &lt;span class="nc">Error&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">CancellationResult&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Method &lt;code>run&lt;/code> performs a single unit of work of the service. Internally it can &lt;code>await&lt;/code> for the input to be available and
then return its result. If the returned value is &lt;code>Err(Self::Error)&lt;/code> then the service completes. If it succeeds, then it
should return &lt;code>Ok(CancellationResult)&lt;/code>. &lt;code>CancellationResult&lt;/code> is an enum defined as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">enum&lt;/span> &lt;span class="nc">CancellationResult&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Continue&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Break&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CancellationResult&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>: &lt;span class="nc">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Into&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="n">Item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">into&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-10">&lt;a class="lnlinks" href="#hl-1-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-11">&lt;a class="lnlinks" href="#hl-1-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enum&amp;rsquo;s variant control whether the service will continue to perform its work. If the service produces a value, then it
should wrap it as &lt;code>CancellableResult::Item(t)&lt;/code>; it&amp;rsquo;s also a signal that the service should continue to work. If no
value is available, but the service should continue then it returns &lt;code>CancellableResult::Continue&lt;/code> (similar to
&lt;a href="https://doc.rust-lang.org/stable/std/task/enum.Poll.html#variant.Pending">&lt;code>Poll::Pending&lt;/code>&lt;/a>).&lt;/p>
&lt;p>If the service finishes its work successfully (e.g. when the peer closes the connection) then the service should return
&lt;code>CancellableResult::Break&lt;/code>.&lt;/p>
&lt;p>&lt;code>Cancellable&lt;/code> trait has methods for spawning the service as a detached, background task:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cp">#[async_trait::async_trait]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Cancellable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-5">&lt;a class="lnlinks" href="#hl-2-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">spawn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cancellation_token&lt;/span>: &lt;span class="nc">CancellationToken&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">CancellableHandle&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="bp">Self&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-6">&lt;a class="lnlinks" href="#hl-2-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-7">&lt;a class="lnlinks" href="#hl-2-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-8">&lt;a class="lnlinks" href="#hl-2-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-9">&lt;a class="lnlinks" href="#hl-2-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">spawn_with_callback&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">F&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-10">&lt;a class="lnlinks" href="#hl-2-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-11">&lt;a class="lnlinks" href="#hl-2-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cancellation_token&lt;/span>: &lt;span class="nc">CancellationToken&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-12">&lt;a class="lnlinks" href="#hl-2-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">callback&lt;/span>: &lt;span class="nc">F&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-13">&lt;a class="lnlinks" href="#hl-2-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">CancellableHandle&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="bp">Self&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-14">&lt;a class="lnlinks" href="#hl-2-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-15">&lt;a class="lnlinks" href="#hl-2-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">F&lt;/span>: &lt;span class="nb">FnMut&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="nb">Result&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-16">&lt;a class="lnlinks" href="#hl-2-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-17">&lt;a class="lnlinks" href="#hl-2-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-18">&lt;a class="lnlinks" href="#hl-2-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-19">&lt;a class="lnlinks" href="#hl-2-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Both return a handle, which can be awaited for the service to complete, &lt;span class="text-decoration-underline">once it has been
cancelled&lt;/span>!&lt;/p>
&lt;p>If the service produces results, then it can be spawned with &lt;code>spawn_with_callback&lt;/code>, to consume them. If the callback
returns &lt;code>Err(Self::Result)&lt;/code> then the service completes immediately.&lt;/p>
&lt;p>This setup offers a way of detaching services which perform work &amp;ldquo;on their own&amp;rdquo;, but sometimes services &lt;em>need&lt;/em> to accept
additional data. An example is TCP stream: it reads data packages from a peer and consumes them via callback. However,
if the server decides the connection should be terminated, then the service should complete its work.&lt;/p>
&lt;p>Enter&amp;hellip;&lt;/p>
&lt;h3 id="communicating-with-detached-service" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#communicating-with-detached-service" aria-label="Anchor">Communicating with detached service&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h3>
&lt;p>When we spawn the service task we already get a handle:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CancellableToken&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">handle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">spawn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">token&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clone&lt;/span>&lt;span class="p">()).&lt;/span>&lt;span class="k">await&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The handle can be used as an interface to send data to its service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="n">handle&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ConnectionStatus&lt;/span>::&lt;span class="n">TerminatedByServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reason&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The actual interface needs to be implementation-dependent &amp;ndash; defined in the &lt;code>Cancellable&lt;/code> trait. By easily extending
the trait we get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-5-1">&lt;a class="lnlinks" href="#hl-5-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cp">#[async_trait::async_trait]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-2">&lt;a class="lnlinks" href="#hl-5-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Cancellable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-3">&lt;a class="lnlinks" href="#hl-5-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-4">&lt;a class="lnlinks" href="#hl-5-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">type&lt;/span> &lt;span class="nc">Handle&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-5">&lt;a class="lnlinks" href="#hl-5-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-6">&lt;a class="lnlinks" href="#hl-5-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">async&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">new_handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>::&lt;span class="n">Handle&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-5-7">&lt;a class="lnlinks" href="#hl-5-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When the service is spawned (either by &lt;code>spawn&lt;/code> or &lt;code>spawn_with_callback&lt;/code>), the method will call &lt;code>new_handle&lt;/code> to construct
the handle. The handle is owned by &lt;code>CancellableHandle&lt;/code>, which implements &lt;code>Deref&lt;/code> for &lt;code>Self::Handle&lt;/code> type. With that
setup, we can define a channel by which spawner can communicate with spawnee.&lt;/p>
&lt;p>I like the final product, so I&amp;rsquo;ve packaged it as a crate. It&amp;rsquo;s available on
&lt;a href="https://crates.io/crates/cancellable">crates.io&lt;/a>.&lt;/p>
&lt;p>&amp;#x1f30a;&lt;/p></description></item><item><title>Natural Selection and Loss Functions</title><link>https://madebyme.today/blog/franklin/natural-selection-and-loss-functions/</link><pubDate>Sun, 02 Apr 2023 14:50:51 +0200</pubDate><guid>https://madebyme.today/blog/franklin/natural-selection-and-loss-functions/</guid><category>Genetic Algorithm</category><category>Rust</category><category>Algorithm</category><description>&lt;p>Natural Selection is what allows our species (and images!) to improve over time. In this article we&amp;rsquo;ll implement a
scoring mechanism, through which &amp;ldquo;&lt;a href="https://madebyme.today/blog/franklin/randomness-of-life/">Mona Lisa&lt;/a>&amp;rdquo; will actually
look like one.&lt;/p>
&lt;h2 id="natural-selection" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#natural-selection" aria-label="Anchor">Natural Selection&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Natural_selection">Natural selection&lt;/a> is the process though which species adapt to their
environments. If the &lt;a href="https://en.wikipedia.org/wiki/Evolution">evolution&lt;/a> is a wheel, then natural selection is the
force that spins it. Organism that are better adapted tend to produce more offspring and pass on their genes. This
process favours genes that aided their bearers to survive/reproduce, increasing their number in the following
generations.&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Fitness_(biology)">In biology&lt;/a> &lt;em>&amp;ldquo;fitness&amp;rdquo;&lt;/em> is defined by how successful an organism is at
reproduction.&lt;/p>
&lt;p>Wikipedia says:&lt;/p>
&lt;blockquote>
&lt;p>If an organism lives half as long as others of its species, but has twice as many offspring surviving to adulthood,
its genes become more common in the adult population of the next generation.&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip; and also &amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>It is also equal to the average contribution to the gene pool of the next generation, made by the same individuals
of the specified genotype or phenotype.&lt;/p>
&lt;/blockquote>
&lt;p>We, however, will define &amp;ldquo;fitness&amp;rdquo; as a &lt;em>difference&lt;/em> between an organism and the ideal. Which is a bit vague, as there&amp;rsquo;s
no obvious way of substituting one image from another and produce an integer. We&amp;rsquo;ll get back to that in a bit.&lt;/p>
&lt;h2 id="loss-functions" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#loss-functions" aria-label="Anchor">Loss functions&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Genetic_algorithm">Genetic Algorithms&lt;/a> (and
&lt;a href="https://en.wikipedia.org/wiki/Evolutionary_algorithm">Evolutionary Algorithms&lt;/a>) are
&lt;a href="https://en.wikipedia.org/wiki/Optimization_problem">optimization&lt;/a> algorithms that need a &amp;ldquo;goodness&amp;rdquo; of an organism, in
order to decide whether to discard it. We&amp;rsquo;re going to implement two scoring methods, both based on loss functions. L1
Loss Function and L2 Loss Function are defined as follows:&lt;/p>
&lt;p>$$
L1 = \sum_{i=0}^n \vert y_{true_i} - y_{predicted_i} \vert
\newline
L2 = \sum_{i=0}^n \left( y_{true_i} - y_{predicted_i} \right)^2
$$&lt;/p>
&lt;p>&lt;code>n&lt;/code> represents the size of the ideal image in pixels; we know, that both images have the exact same size, so it will
never &lt;code>out-of-range&lt;/code>.&lt;/p>
&lt;p>Both of these functions are used to covert an &amp;ldquo;object&amp;rdquo; or an &amp;ldquo;event&amp;rdquo;, to a real number representing its score. Which one
should be picked then? &lt;em>In general&lt;/em> L2 Loss Function is preferred in most of the cases. However, when the dataset has
outliers, then L2 Loss Function does not perform well &amp;ndash; it leads to much larger errors.&lt;/p>
&lt;p>Cool, we have a way of calculating differences between images&amp;rsquo; pixels. But how to calculate a difference between two
pixels? That question was already answered in
&lt;a href="https://madebyme.today/blog/franklin/art-from-chaos/#step-2-scoring">Art From Chaos&lt;/a>. We take each of the pixels color
channels and calculate their differences.&lt;/p>
&lt;p>$$
f(O, S) = \sum_{i=0}^n \vert (r_2 - r_1)^2 + (g_2 - g_1)^2 + (b_2 - b_1)^2 \vert
$$&lt;/p>
&lt;h2 id="scoring-mechanism" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#scoring-mechanism" aria-label="Anchor">Scoring mechanism&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>First, let&amp;rsquo;s define a trait whereby the rest of the system will be able to interact with scoring methods.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FitnessFunction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="sd">/// This method calculates the fitness of `second_image` relative to `first_image`.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">///
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// In other words, it returns a value describing difference between those two images. The higher the value, the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// more those images are different from each other.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">second_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">Image&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7">7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The method assumes that the &lt;code>first_image&lt;/code> is the one being scored and &lt;code>second_image&lt;/code> is the ideal. However, what&amp;rsquo;s nice
about these loss functions, is that they return absolute values &amp;ndash; it does not matter which parameter is the ideal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">// True for both L1 and L2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="fm">assert_eq!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scorer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">first_image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">second_image&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4">4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scorer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">second_image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5">5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- Custom anchor adds a dash between "absolute" and "distance" -->
&lt;h3 id="implementation-of-l1-absolute-distance" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#implementation-of-l1-absolute-distance" aria-label="Anchor">Implementation of L1: AbsoluteDistance&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h3>
&lt;p>The implementation isn&amp;rsquo;t complex - first we &lt;em>fold&lt;/em> each pixel pair to a &lt;code>usize&lt;/code>, and then we sum those parts together to
produce the score. Actually, we can do both by using Iterator&amp;rsquo;s &lt;code>fold&lt;/code> method.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">fold_pixels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">)&lt;/span>: &lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_r&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_r&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_g&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_g&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_g&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_b&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_b&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-5">&lt;a class="lnlinks" href="#hl-2-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-6">&lt;a class="lnlinks" href="#hl-2-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unsigned_abs&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-7">&lt;a class="lnlinks" href="#hl-2-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unsigned_abs&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-8">&lt;a class="lnlinks" href="#hl-2-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unsigned_abs&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-9">&lt;a class="lnlinks" href="#hl-2-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-10">&lt;a class="lnlinks" href="#hl-2-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-11">&lt;a class="lnlinks" href="#hl-2-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-12">&lt;a class="lnlinks" href="#hl-2-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-13">&lt;a class="lnlinks" href="#hl-2-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">#[derive(Debug, Default)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-14">&lt;a class="lnlinks" href="#hl-2-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">AbsoluteDistance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-15">&lt;a class="lnlinks" href="#hl-2-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-16">&lt;a class="lnlinks" href="#hl-2-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FitnessFunction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AbsoluteDistance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-17">&lt;a class="lnlinks" href="#hl-2-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-18">&lt;a class="lnlinks" href="#hl-2-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-19">&lt;a class="lnlinks" href="#hl-2-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">crate&lt;/span>::&lt;span class="n">models&lt;/span>::&lt;span class="n">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-20">&lt;a class="lnlinks" href="#hl-2-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">second_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">crate&lt;/span>::&lt;span class="n">models&lt;/span>::&lt;span class="n">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-21">&lt;a class="lnlinks" href="#hl-2-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-22">&lt;a class="lnlinks" href="#hl-2-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-23">&lt;a class="lnlinks" href="#hl-2-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-24">&lt;a class="lnlinks" href="#hl-2-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-25">&lt;a class="lnlinks" href="#hl-2-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">second_image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-26">&lt;a class="lnlinks" href="#hl-2-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fold_pixels&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-27">&lt;a class="lnlinks" href="#hl-2-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-28">&lt;a class="lnlinks" href="#hl-2-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- Custom anchor adds a dash between "square" and "distance" -->
&lt;h3 id="implementation-of-l1-square-distance" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#implementation-of-l1-square-distance" aria-label="Anchor">Implementation of L2: SquareDistance&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h3>
&lt;p>Implementation of &lt;code>SquareDistance&lt;/code> is almost identical. The only difference is the squaring of color channels.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">fold_pixels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">)&lt;/span>: &lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_r&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_r&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_g&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_g&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_g&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_b&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">isize&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_b&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-7">&lt;a class="lnlinks" href="#hl-3-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-8">&lt;a class="lnlinks" href="#hl-3-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">diff_b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-9">&lt;a class="lnlinks" href="#hl-3-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-10">&lt;a class="lnlinks" href="#hl-3-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-11">&lt;a class="lnlinks" href="#hl-3-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-12">&lt;a class="lnlinks" href="#hl-3-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-13">&lt;a class="lnlinks" href="#hl-3-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">#[derive(Debug, Default)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-14">&lt;a class="lnlinks" href="#hl-3-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">SquareDistance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-15">&lt;a class="lnlinks" href="#hl-3-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-16">&lt;a class="lnlinks" href="#hl-3-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FitnessFunction&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SquareDistance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-17">&lt;a class="lnlinks" href="#hl-3-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_fitness&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-18">&lt;a class="lnlinks" href="#hl-3-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-19">&lt;a class="lnlinks" href="#hl-3-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">crate&lt;/span>::&lt;span class="n">models&lt;/span>::&lt;span class="n">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-20">&lt;a class="lnlinks" href="#hl-3-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">second_image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">crate&lt;/span>::&lt;span class="n">models&lt;/span>::&lt;span class="n">Image&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-21">&lt;a class="lnlinks" href="#hl-3-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-22">&lt;a class="lnlinks" href="#hl-3-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">first_image&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-23">&lt;a class="lnlinks" href="#hl-3-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-24">&lt;a class="lnlinks" href="#hl-3-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-25">&lt;a class="lnlinks" href="#hl-3-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">second_image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-26">&lt;a class="lnlinks" href="#hl-3-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fold_pixels&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-27">&lt;a class="lnlinks" href="#hl-3-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-28">&lt;a class="lnlinks" href="#hl-3-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fixing-mona-lisa" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#fixing-mona-lisa" aria-label="Anchor">Fixing &amp;ldquo;Mona Lisa&amp;rdquo;&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>Let&amp;rsquo;s wire up the scoring component with generation&amp;rsquo;s flow. During each generation, every specimens will be scored
relatively to the ideal image. Using the scores we will select the best &lt;span class="text-decoration-underline">5&lt;/span>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
organisms and discard the rest.&lt;/p>
&lt;p>Since there&amp;rsquo;s no crossover functionality yet, we need to fill the emptied generation space somehow. &lt;strong>Simplest
solution:&lt;/strong> once we have 5 best specimens, we&amp;rsquo;ll copy them over multiple times, to get a new generation 100 strong.&lt;/p>
&lt;figure class="img-thumbnail">&lt;img src="https://madebyme.today/blog/franklin/natural-selection-and-loss-functions/output_010000.png"
alt="Mona Lisa (generation #10 000)" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;h4>Mona Lisa (generation #10 000)&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>&amp;#x1f90c;&lt;/p>
&lt;p>The image does look recognizable. And it&amp;rsquo;s still missing the last part &amp;ndash; crossing. However, as it&amp;rsquo;s not &lt;em>&amp;ldquo;required&amp;rdquo;&lt;/em>,
the algorithm works and it produces acceptable results.&lt;/p>
&lt;p>Next, we&amp;rsquo;ll implement the crossing function and we&amp;rsquo;ll see how much it improves algorithm&amp;rsquo;s efficiency &amp;ndash; defined as the
derivative of specimen score with respect to generation number.&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;figure class="img-thumbnail">&lt;img src="https://madebyme.today/blog/franklin/natural-selection-and-loss-functions/fernando-venzano-ddVYvmwrvV4-unsplash.webp"
alt="On the Origin of Species" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;p>Photo by &lt;a href="https://unsplash.com/pt-br/@fernandovenzano?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText">Fernando Venzano&lt;/a> on &lt;a href="https://unsplash.com/photos/ddVYvmwrvV4?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText">Unsplash&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable line-length -->
&lt;!-- Footnotes -->
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;strong>Why 5?&lt;/strong> No particular reason. There should be enough specimen to fill the generation space again by
combining them in varied ways. It could be more than 5, but we need to remember, that the goal of dropping those &amp;ldquo;bad&amp;rdquo;
images is to discard mutations that resulted in decreasing overall &amp;ldquo;goodness&amp;rdquo;.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Randomness of Life</title><link>https://madebyme.today/blog/franklin/randomness-of-life/</link><pubDate>Mon, 20 Mar 2023 10:02:19 +0100</pubDate><guid>https://madebyme.today/blog/franklin/randomness-of-life/</guid><category>Genetic Algorithm</category><category>Rust</category><category>Algorithm</category><description>&lt;p>In &lt;a href="https://madebyme.today/blog/franklin/art-from-chaos/">the previous article&lt;/a> from this series, we&amp;rsquo;ve talked about
genetic algorithms and how they can be used to generate art. Now let&amp;rsquo;s put those ideas into action and focus on
implementing the first part of our artistic toolset: &lt;strong>mutators&lt;/strong>.&lt;/p>
&lt;h2 id="preparing-the-ecosystem" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#preparing-the-ecosystem" aria-label="Anchor">Preparing the ecosystem&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>Before we begin working on mutators, we need to prepare an environment in which our specimens can thrive. We don&amp;rsquo;t need
much - right now the only thing is &lt;em>a generation&lt;/em>. For the record, in this context, a generation is a collection of
specimen which can be mutated, scored, and bred (basically experimented upon) to get us closer to the optimum. Since our
specimens are images, they can be represented by the following structs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="nc">Pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-8">&lt;a class="lnlinks" href="#hl-0-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-9">&lt;a class="lnlinks" href="#hl-0-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-10">&lt;a class="lnlinks" href="#hl-0-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-11">&lt;a class="lnlinks" href="#hl-0-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Representing each pixel as a 24-bit value gives us some flexibility here &amp;ndash; it allows us to operate on two color depths:
&lt;a href="https://en.wikipedia.org/wiki/Color_depth#True_color_(24-bit)">true color&lt;/a> (which uses 24-bit colors) and
&lt;a href="https://en.wikipedia.org/wiki/Grayscale">grayscale&lt;/a> (8-bit). Creating a grayscale pixel can be done by setting up all
color channels to the same value. True, it uses thrice as much memory as it could, but&amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>Premature optimization is the root of all evil.&lt;br>
~ Donald Knuth&lt;/p>
&lt;/blockquote>
&lt;p>&lt;span class="text-decoration-underline">Method of initializing&lt;/span>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> the generation will affect how fast we can search the
solution space. As the algorithm produces more fitted images, the specimens get closed to the source image. But we don&amp;rsquo;t
really care about how &lt;em>fast&lt;/em> the optimum can be achieved, frankly, we don&amp;rsquo;t really care about achieving the optimum in
the first place. It is &lt;em>the process&lt;/em> of getting more fitted images and seeing how they evolve what&amp;rsquo;s really interesting.
Therefore our generation will be initialized by blank images - images filled by white pixels. It will reduce pace of
solution space search, but will produce images that are more visually interesting. We are here to do art, after all.
&amp;#x1f3a8;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">const&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">white&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Pixel&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">const&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-10">&lt;a class="lnlinks" href="#hl-1-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-11">&lt;a class="lnlinks" href="#hl-1-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-12">&lt;a class="lnlinks" href="#hl-1-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-13">&lt;a class="lnlinks" href="#hl-1-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Image&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-14">&lt;a class="lnlinks" href="#hl-1-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-15">&lt;a class="lnlinks" href="#hl-1-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Pixel&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-16">&lt;a class="lnlinks" href="#hl-1-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-17">&lt;a class="lnlinks" href="#hl-1-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-18">&lt;a class="lnlinks" href="#hl-1-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-19">&lt;a class="lnlinks" href="#hl-1-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-20">&lt;a class="lnlinks" href="#hl-1-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-21">&lt;a class="lnlinks" href="#hl-1-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-22">&lt;a class="lnlinks" href="#hl-1-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-23">&lt;a class="lnlinks" href="#hl-1-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-24">&lt;a class="lnlinks" href="#hl-1-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">blank&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">Pixel&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-25">&lt;a class="lnlinks" href="#hl-1-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-26">&lt;a class="lnlinks" href="#hl-1-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">vec!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clone&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-27">&lt;a class="lnlinks" href="#hl-1-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-28">&lt;a class="lnlinks" href="#hl-1-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="bp">Self&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixels&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-29">&lt;a class="lnlinks" href="#hl-1-29">29&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-30">&lt;a class="lnlinks" href="#hl-1-30">30&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-31">&lt;a class="lnlinks" href="#hl-1-31">31&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-32">&lt;a class="lnlinks" href="#hl-1-32">32&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-33">&lt;a class="lnlinks" href="#hl-1-33">33&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">get_first_generation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-34">&lt;a class="lnlinks" href="#hl-1-34">34&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">vec_len&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-35">&lt;a class="lnlinks" href="#hl-1-35">35&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">image_height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-36">&lt;a class="lnlinks" href="#hl-1-36">36&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>: &lt;span class="kt">usize&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-37">&lt;a class="lnlinks" href="#hl-1-37">37&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Image&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-38">&lt;a class="lnlinks" href="#hl-1-38">38&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Pixel&lt;/span>::&lt;span class="n">white&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-39">&lt;a class="lnlinks" href="#hl-1-39">39&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">vec!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">Image&lt;/span>::&lt;span class="n">blank&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec_len&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-40">&lt;a class="lnlinks" href="#hl-1-40">40&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This code takes care of initializing the generation. &amp;#x1f44c;&lt;/p>
&lt;h2 id="throwing-dice-and-hoping-for-the-best" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#throwing-dice-and-hoping-for-the-best" aria-label="Anchor">Throwing dice and hoping for the best&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>As was mentioned in the previous article, mutators act only on one specimen at a time, inserting random modification
onto it. With that description alone, we can already define a contract for all mutators we&amp;rsquo;re going to implement:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">trait&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Mutator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2">2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Image&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Why &lt;code>&amp;amp;self&lt;/code> and not &lt;code>&amp;amp;mut self&lt;/code>? Due to the fact that mutations are independent of one another, they can be performed
concurrently. In fact, as we will see in the future articles, mutating and scoring are the only steps that can be
&lt;em>easily&lt;/em> run in parallel.&lt;/p>
&lt;figure>&lt;img src="https://madebyme.today/blog/franklin/randomness-of-life/genetic-algorithm-flow.webp"
alt="Genetic Algorithm Flow"loading="lazy"
/>&lt;figcaption>
&lt;p>A diagram showing the flow of actions applied on a single generation.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="throwing-a-rectangular-dice" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#throwing-a-rectangular-dice" aria-label="Anchor">Throwing a rectangular dice&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h3>
&lt;p>Rectangles are the easiest shape to draw both algorithmically and IRL; our first mutator will use rectangles as a
mutation primitive. To generate a random rectangle we need have the following:&lt;/p>
&lt;ul>
&lt;li>coordinates of one of its corners,&lt;/li>
&lt;li>width,&lt;/li>
&lt;li>height,&lt;/li>
&lt;li>fill color.&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Fill color&lt;/em> is pretty straightforward, but other values have some constraints they need to meet. An image we&amp;rsquo;ll be
mutating has width and height &amp;ndash; let&amp;rsquo;s assume it&amp;rsquo;s &lt;span class="font-monospace">n&lt;/span> and &lt;span class="font-monospace">m&lt;/span>
respectively. Coordinates of one of the corners, in our case it&amp;rsquo;s going to be top-left, are limited by the image
dimensions. Width and height are limited by both image dimensions, and the coordinates we just generated.&lt;/p>
&lt;p>$$
x \in \lbrack 0 .. n \lbrack \newline
y \in \lbrack 0 .. m \lbrack \newline
width \in \lbrack 1 .. n - x + 1 \lbrack \newline
height \in \lbrack 1 .. m - y + 1 \lbrack \newline
$$&lt;/p>
&lt;p>Why coordinates intervals are right-open? Because if the mutator selects the very right or bottom edge, then the
rectangle would need to have zero width/height. By not right-closing the intervals, we ensure that there&amp;rsquo;s at least one
pixel which can be mutated &amp;#x1f44c;. Similarly both &lt;span class="font-monospace">width&lt;/span> and &lt;span class="font-monospace">height&lt;/span>
intervals are right-open to ensure that the rectangle will not overflow the image.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="nc">RandomRectangle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-7">&lt;a class="lnlinks" href="#hl-3-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-8">&lt;a class="lnlinks" href="#hl-3-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cp">#[must_use]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-9">&lt;a class="lnlinks" href="#hl-3-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">get_random_rectangle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Random&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">Image&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">RandomRectangle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-10">&lt;a class="lnlinks" href="#hl-3-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-11">&lt;a class="lnlinks" href="#hl-3-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-12">&lt;a class="lnlinks" href="#hl-3-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-13">&lt;a class="lnlinks" href="#hl-3-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-14">&lt;a class="lnlinks" href="#hl-3-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_height&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-15">&lt;a class="lnlinks" href="#hl-3-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-16">&lt;a class="lnlinks" href="#hl-3-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-17">&lt;a class="lnlinks" href="#hl-3-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-18">&lt;a class="lnlinks" href="#hl-3-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-19">&lt;a class="lnlinks" href="#hl-3-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">RandomRectangle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-20">&lt;a class="lnlinks" href="#hl-3-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-21">&lt;a class="lnlinks" href="#hl-3-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-22">&lt;a class="lnlinks" href="#hl-3-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-23">&lt;a class="lnlinks" href="#hl-3-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-24">&lt;a class="lnlinks" href="#hl-3-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-25">&lt;a class="lnlinks" href="#hl-3-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Function &lt;code>get_random_rectangle&lt;/code> is a neat helper: based on the given &lt;span class="text-decoration-underline">RNG&lt;/span>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> and
image, it returns a struct representing a random rectangle within the boundaries of the image.&lt;/p>
&lt;p>Only two things left to do: generate random color and draw the shape. The implementation of rectangle mutator will look
like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="cp">#[derive(Debug, Default)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-2">&lt;a class="lnlinks" href="#hl-4-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">RectangleMutator&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-3">&lt;a class="lnlinks" href="#hl-4-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-4">&lt;a class="lnlinks" href="#hl-4-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Mutator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RectangleMutator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-5">&lt;a class="lnlinks" href="#hl-4-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">mutate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Image&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-6">&lt;a class="lnlinks" href="#hl-4-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Random&lt;/span>::&lt;span class="n">default&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-7">&lt;a class="lnlinks" href="#hl-4-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">get_random_rectangle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-8">&lt;a class="lnlinks" href="#hl-4-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-9">&lt;a class="lnlinks" href="#hl-4-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-10">&lt;a class="lnlinks" href="#hl-4-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-11">&lt;a class="lnlinks" href="#hl-4-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">255&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-12">&lt;a class="lnlinks" href="#hl-4-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-13">&lt;a class="lnlinks" href="#hl-4-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-14">&lt;a class="lnlinks" href="#hl-4-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-15">&lt;a class="lnlinks" href="#hl-4-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-16">&lt;a class="lnlinks" href="#hl-4-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">..&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-17">&lt;a class="lnlinks" href="#hl-4-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">image_width&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-18">&lt;a class="lnlinks" href="#hl-4-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-19">&lt;a class="lnlinks" href="#hl-4-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-20">&lt;a class="lnlinks" href="#hl-4-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pixel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-21">&lt;a class="lnlinks" href="#hl-4-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-22">&lt;a class="lnlinks" href="#hl-4-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-23">&lt;a class="lnlinks" href="#hl-4-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-24">&lt;a class="lnlinks" href="#hl-4-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The implementation is really simple. First we get a random rectangle &lt;em>(using the helper function)&lt;/em>, then generate color
channels, and finally draw the shape. Drawing itself is done by two nested loops iterating over columns and rows of the
image. With the two indexes it references a specific pixel: &lt;code>j * image_width + 1&lt;/code> and finally overrides it using the
color channels.&lt;/p>
&lt;p>Cool, let&amp;rsquo;s see what the program generates after 10 000 generations when initialized with
&amp;ldquo;&lt;a href="https://en.wikipedia.org/wiki/File:Mona_Lisa,_by_Leonardo_da_Vinci,_from_C2RMF_retouched.webp">Mona Lisa&lt;/a>&amp;rdquo;.&lt;/p>
&lt;figure class="img-thumbnail">&lt;img src="https://madebyme.today/blog/franklin/randomness-of-life/output_010000.png"
alt="Random noise" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;h4>Mona Lisa (generation #10 000)&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Doesn&amp;rsquo;t really looks like anything. &amp;#x1f610;&lt;br>
Which isn&amp;rsquo;t very surprising; the code did what it was suppose to do: it generated random rectangles on the white image.
Since we don&amp;rsquo;t have any scoring logic yet (that&amp;rsquo;s a topic for another article) the resulting image is composed of random
noise. We&amp;rsquo;ll need to wait a bit longer to get an image that even remotely reflects &amp;ldquo;Mona Lisa&amp;rdquo;.&lt;/p>
&lt;h3 id="throwing-dice-of-other-shapes" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#throwing-dice-of-other-shapes" aria-label="Anchor">Throwing dice of other shapes&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h3>
&lt;p>It&amp;rsquo;d be nice to have mutators other than &lt;code>RectangleMutator&lt;/code>, which are able to mutate images with different shapes, but
I&amp;rsquo;m not going to cover them here. The reason is simple &amp;ndash; they operate under the same rules: you need to define
boundaries first and then you need to draw the desired shape. I&amp;rsquo;ve implemented two other mutators: &lt;code>TriangleMutator&lt;/code> and
&lt;code>CircleMutator&lt;/code>. Their sources can be found on
&lt;a href="https://github.com/nathiss/franklin/tree/73aa8dada3e8c3cae9aff5e24637785268e3527a/src/mutators">github.com/nathiss/franklin&lt;/a>.&lt;/p>
&lt;h2 id="afterword" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#afterword" aria-label="Anchor">Afterword&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>You might&amp;rsquo;ve noticed that the code examples of this article are not strictly bounded together, meaning you cannot just
copy them to have a working example. A bunch of things like: &lt;code>Random&lt;/code> implementation, loading the original image,
mutation loop, and the whole &lt;code>impl Image&lt;/code> block are missing. If you want to have a working solution it&amp;rsquo;s
&lt;a href="https://github.com/nathiss/franklin/tree/73aa8dada3e8c3cae9aff5e24637785268e3527a">github.com/nathiss/franklin&lt;/a>
&lt;em>(locked down to the newest commit at the moment of writing &amp;ndash; 73aa8da)&lt;/em>. The goal of this series is not to go through
every single line of code to build a working utility, but rather to present an idea. So, moving forward all future
articles from this series will also be done in that style.&lt;/p>
&lt;!-- markdownlint-disable line-length -->
&lt;figure class="img-thumbnail">&lt;img src="https://madebyme.today/blog/franklin/randomness-of-life/alexander-grey-2eAkk5lIkC8-unsplash.webp"
alt="Randomness of Life" class="img-thumbnail"loading="lazy"
/>&lt;figcaption>
&lt;p>Photo by &lt;a href="https://unsplash.com/@sharonmccutcheon?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText">Alexander Grey&lt;/a> on &lt;a href="https://unsplash.com/photos/2eAkk5lIkC8?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText">Unsplash&lt;/a>&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;!-- markdownlint-enable line-length -->
&lt;p>Stay tuned &amp;#x1f30a;&lt;/p>
&lt;!-- Footnotes -->
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Usually the generation is generated randomly. See
&lt;a href="https://en.wikipedia.org/wiki/Genetic_algorithm#Initialization">Genetic_algorithm&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>&lt;code>Random&lt;/code> is a project-private utility class. Source can be found
&lt;a href="https://github.com/nathiss/franklin/blob/73aa8dada3e8c3cae9aff5e24637785268e3527a/src/util/random.rs">github.com/nathiss/franklin&lt;/a>.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item></channel></rss>