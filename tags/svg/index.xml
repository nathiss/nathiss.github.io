<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SVG on MadeByMe</title><link>https://madebyme.today/tags/svg/</link><description>Recent content in SVG on MadeByMe</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright 2023-2024, Kamil Rusin</copyright><lastBuildDate>Sun, 25 Feb 2024 14:26:12 +0100</lastBuildDate><atom:link href="https://madebyme.today/tags/svg/index.xml" rel="self" type="application/rss+xml"/><item><title>Generating SVG Avatars From Identifiers</title><link>https://madebyme.today/projects/generating-svg-avatars-from-identifiers/</link><pubDate>Sun, 25 Feb 2024 14:26:12 +0100</pubDate><guid>https://madebyme.today/projects/generating-svg-avatars-from-identifiers/</guid><category>SVG</category><category>Rust</category><description>&lt;p>When you create a new social service on the internet, one of the things you need to think about is how to make a user&amp;rsquo;s
space feel like their own. Services like &lt;a href="https://github.blog/2013-08-14-identicons/">GitHub&lt;/a>, Roll20, or &lt;a href="https://www.reddit.com/r/reddit/comments/vtkmni/introducing_collectible_avatars/">Reddit&lt;/a>
generate &amp;mdash; or allow you to generate &amp;mdash; a custom avatar (i.e. &lt;a href="https://en.wikipedia.org/wiki/Identicon">Identicons&lt;/a>) for your account. Avatar auto-generation
is especially neat, as it does not require any engagement from the user. Let&amp;rsquo;s try to figure that out on our own.&lt;/p>
&lt;div class="alert alert-info text-left text-text flex flex-col items-start gap-0" >
&lt;h6 class="text-info-content flex gap-1 items-center !my-0 !text-lg">&lt;span class="">&lt;svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
&lt;path stroke-linecap="round" stroke-linejoin="round" d="M12 21a9.004 9.004 0 0 0 8.716-6.747M12 21a9.004 9.004 0 0 1-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 0 1 7.843 4.582M12 3a8.997 8.997 0 0 0-7.843 4.582m15.686 0A11.953 11.953 0 0 1 12 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0 1 21 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0 1 12 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 0 1 3 12c0-1.605.42-3.113 1.157-4.418" />
&lt;/svg>&lt;/span>Standing on the shoulders of giants&lt;/h6>
&lt;div class="collapsible-content w-full">
&lt;div class="mt-2 w-full text-base-content markdown-body">This blog post has been inspired by &lt;a href="https://francoisbest.com/posts/2021/hashvatars">Representing SHA-256 Hashes As Avatars&lt;/a> by &lt;a href="https://francoisbest.com/">François Best&lt;/a>. I&amp;rsquo;m re-creating ideas
presented by François in their article &amp;mdash; with slight modifications &amp;mdash; in &lt;a href="https://madebyme.today/tags/rust/">Rust&lt;/a>.&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>I think this blog post is one of those things which are easier to understand if you&amp;rsquo;d see the end result first. So, for
those interested here&amp;rsquo;s a spoiler.&lt;/p>
&lt;details class="collapse collapse-arrow alert alert-spoiler text-left p-0 text-text flex flex-col items-start gap-0" >
&lt;summary class="collapse-title text-spoiler-content flex gap-1 items-center !my-0 !text-lg">Spoiler!&lt;/summary>
&lt;div class="collapsible-content p-4 w-full">
&lt;div class="mt-2 w-full text-base-content markdown-body">&lt;p>This is the end result:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768584324005">
#figure-svg-1724779768584324005 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;g>
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(127.51471, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(127.51471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(144.38971, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(135.01471, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(135.01471, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(151.88971, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(146.26471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(138.76471, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(251.18384, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(239.93384, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(230.55884, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(228.68384, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(224.93384, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(228.68384, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z"
fill="hsl(230.55884, 20%, 52.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(228.68384, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z"
fill="hsl(167.05148, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z"
fill="hsl(172.67648, 20%, 65%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z"
fill="hsl(168.92648, 80%, 52.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z"
fill="hsl(178.30148, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z"
fill="hsl(176.42648, 40%, 40%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z"
fill="hsl(180.17648, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z"
fill="hsl(185.80148, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z"
fill="hsl(183.92648, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/g>
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for identifier &amp;quot;Foo&amp;quot;.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>The avatar has 24 segments and consists of 24 &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathElement">&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> tags. The coordinates describing paths are static, but their
colors are generated from &lt;a href="https://en.wikipedia.org/wiki/SHA-2">SHA-256&lt;/a> of the identifier.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">SHA256(&amp;#34;Foo&amp;#34;) == [ 44, 38, 180, 107, 104, 255, 198, 143,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl"> 249, 155, 69, 60, 29, 48, 65, 52,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl"> 19, 66, 45, 112, 100, 131, 191, 160,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>&lt;/span>&lt;span class="cl"> 249, 138, 94, 136, 98, 102, 231, 174]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>&lt;/span>&lt;span class="cl">Base64(SHA256(&amp;#34;Foo&amp;#34;)) == LCa0a2j/xo/5m0U8HTBBNBNCLXBkg7+g+YpeiGJm564=
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The rest of this blog post focuses on translating the byte array into an avatar that looks &lt;em>nice&lt;/em>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/details>
&lt;h2 id="svg-scaffolding" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#svg-scaffolding" aria-label="Anchor">SVG scaffolding&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>Let&amp;rsquo;s think how to prepare the SVG&amp;rsquo;s structure. We know that each segment must be its own &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathElement">&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> element, so we can
color them individually with the &lt;a href="https://www.w3.org/TR/SVG2/painting.html#SpecifyingFillPaint">fill&lt;/a> property. Generating annuluses sectors can be challenging &amp;mdash; it would require
using two(!) &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands">arcs&lt;/a>, which is way too much &amp;mdash; instead, we can cheat a little and create overlapping
circle sectors. It will make paths simpler and requires only one(!) arc.&lt;/p>
&lt;p>Starting with the &lt;code>&amp;lt;svg&amp;gt;&lt;/code> tag we get:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-svg" data-lang="svg">&lt;span class="line">&lt;span class="ln" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;svg&lt;/span> &lt;span class="na">viewBox=&lt;/span>&lt;span class="s">&amp;#34;-1 -1 2 2&amp;#34;&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;/svg&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Paths generation gets much easier if the center of &amp;ldquo;circles&amp;rdquo; is in $(0, 0)$. We can do that by setting the &lt;code>viewBox&lt;/code>
property as shown above: top-left corner is $(-1, -1)$, width is $2$, and height is $2$.&lt;/p>
&lt;p>OK. Now we need to create circle sectors. SVG has some tags for constructing &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes">basic shapes&lt;/a> (like circles, rectangles,
or ellipses). Sadly, pizza slices are &lt;em>not&lt;/em> considered as &amp;ldquo;basic&amp;rdquo;, so there&amp;rsquo;s no &lt;code>&amp;lt;pizza-slice&amp;gt;&lt;/code> to help us here.
Instead, we need to use the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathElement">&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> tag.&lt;/p>
&lt;h3 id="making-pizza-slices-pizza" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#making-pizza-slices-pizza" aria-label="Anchor">Making pizza slices &amp;#x1f355;&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h3>
&lt;p>The &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathElement">&lt;code>&amp;lt;path&amp;gt;&lt;/code>&lt;/a> tag is nice, because it allows you to construct any complex shape. For it to work we need to describe how
we want our shape to look like with its special &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathData">path data&lt;/a> syntax. It&amp;rsquo;s fairly complex, but we only need to grasp 4 of
its commands:&lt;/p>
&lt;ul>
&lt;li>the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataMovetoCommands">absolute &lt;strong>&amp;ldquo;moveto&amp;rdquo;&lt;/strong>&lt;/a> command &amp;mdash; which establishes a new initial point,&lt;/li>
&lt;li>the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataLinetoCommands">absolute &lt;strong>&amp;ldquo;lineto&amp;rdquo;&lt;/strong>&lt;/a> command &amp;mdash; which draws a line from the current point to the given
$(x, y)$,&lt;/li>
&lt;li>the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands">absolute elliptical arc curve&lt;/a> command &amp;mdash; which draws an elliptical arc from the current point to
the given $(x, y)$,&lt;/li>
&lt;li>the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataClosePathCommand">&lt;strong>&amp;ldquo;closepath&amp;rdquo;&lt;/strong>&lt;/a> command &amp;mdash; which ends the current path by connecting it back to its initial
point.&lt;/li>
&lt;/ul>
&lt;p>To start easy, let&amp;rsquo;s consider an example with 4 pizza slices:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-svg" data-lang="svg">&lt;span class="line">&lt;span class="ln" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;svg&lt;/span> &lt;span class="na">overflow=&lt;/span>&lt;span class="s">&amp;#34;visible&amp;#34;&lt;/span> &lt;span class="na">viewBox=&lt;/span>&lt;span class="s">&amp;#34;-1 -1 2 2&amp;#34;&lt;/span> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;IndianRed&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3">3&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L 1,0 A 1,1,0,0,1,0,1 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;LightCoral&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4">4&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;Salmon&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5">5&lt;/a>&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;path&lt;/span> &lt;span class="na">d=&lt;/span>&lt;span class="s">&amp;#34;M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z&amp;#34;&lt;/span> &lt;span class="na">fill=&lt;/span>&lt;span class="s">&amp;#34;DarkSalmon&amp;#34;&lt;/span> &lt;span class="na">stroke=&lt;/span>&lt;span class="s">&amp;#34;black&amp;#34;&lt;/span> &lt;span class="na">stroke-width=&lt;/span>&lt;span class="s">&amp;#34;0.01&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6">6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;/svg&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It renders to:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768585097000">
#figure-svg-1724779768585097000 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0,1 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;div class="alert alert-info text-left text-text flex flex-col items-start gap-0" >
&lt;h6 class="text-info-content flex gap-1 items-center !my-0 !text-lg">&lt;span class="">&lt;svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
&lt;path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125" />
&lt;/svg>&lt;/span>Note&lt;/h6>
&lt;div class="collapsible-content w-full">
&lt;div class="mt-2 w-full text-base-content markdown-body">I added &lt;code>overflow=&amp;quot;visible&amp;quot;&lt;/code> to the SVG tag, because &amp;mdash; with a non-zero stroke &amp;mdash; the image is &lt;em>slightly&lt;/em> bigger than
its &lt;code>viewBox&lt;/code> and the stroke lines get cut off at $(-1, 0)$, $(1, 0)$, $(0, 1)$, and $(-1, 0)$.&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>We can see an interesting patter here: coordinates of the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataLinetoCommands">&lt;strong>&amp;ldquo;lineto&amp;rdquo;&lt;/strong>&lt;/a> command are the same, as the
coordinates of the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands">elliptical arc curve&lt;/a> command of the &lt;em>previous&lt;/em> element.&lt;/p>
&lt;p>&lt;em>Ok, but how to divide these slices into halves?&lt;/em> &amp;mdash; you may ask.&lt;/p>
&lt;p>To do that we need to find the points in the middle of the arcs.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768585447585">
#figure-svg-1724779768585447585 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg id="slices-with-points" overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;style>
#slices-with-points text {
font-size: 0.2px;
font-family: var(--bs-font-monospace);
fill: var(--bs-body-color);
display: inline-block;
}
#slices-with-points circle {
fill: var(--bs-body-color);
stroke: none;
}
&lt;/style>
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0,1 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;circle cx="0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="-0.70710678118" text-anchor="start" dominant-baseline="text-top">(ax, ay)&lt;/text>
&lt;circle cx="0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="0.70710678118" text-anchor="start" dominant-baseline="hanging">(bx, by)&lt;/text>
&lt;circle cx="-0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="-0.70710678118" text-anchor="end" dominant-baseline="text-top">(cx, cy)&lt;/text>
&lt;circle cx="-0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="0.70710678118" text-anchor="end" dominant-baseline="hanging">(dx, dy)&lt;/text>
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;p>Fortunately &amp;mdash; since the circle&amp;rsquo;s middle point is $(0, 0)$ and the arc points are in the middle of their arcs &amp;mdash; we
know that the absolute value of their coordinates is the same. So, our diagram simplifies to:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768585646613">
#figure-svg-1724779768585646613 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg id="slices-with-same-points" overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;style>
#slices-with-same-points text {
font-size: 0.2px;
font-family: var(--bs-font-monospace);
fill: var(--bs-body-color);
display: inline-block;
}
#slices-with-same-points circle {
fill: var(--bs-body-color);
stroke: none;
}
&lt;/style>
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,1,0 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0,1 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-1,0 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,0,-1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;circle cx="0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="-0.70710678118" text-anchor="start" dominant-baseline="text-top">(a, -a)&lt;/text>
&lt;circle cx="0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="0.70710678118" y="0.70710678118" text-anchor="start" dominant-baseline="hanging">(a, a)&lt;/text>
&lt;circle cx="-0.70710678118" cy="-0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="-0.70710678118" text-anchor="end" dominant-baseline="text-top">(-a, -a)&lt;/text>
&lt;circle cx="-0.70710678118" cy="0.70710678118" r="0.03" />
&lt;text x="-0.70710678118" y="0.70710678118" text-anchor="end" dominant-baseline="hanging">(-a, a)&lt;/text>
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;p>Great. &amp;#x1f44c;&lt;/p>
&lt;p>Now we can use the equation of a circle to find the middle points.&lt;/p>
&lt;p>$$
\begin{aligned}
(x - x_0)^2 + (y - y_0)^2 &amp;amp;= r^2 \\[0.25em]
(a - 0)^2 + (a - 0)^2 &amp;amp;= 1^2 \\[0.25em]
2a^2 &amp;amp;= 1 \\[0.25em]
a^2 &amp;amp;= \frac{1}{2} \\[0.25em]
a &amp;amp;= \sqrt{\frac{1}{2}}
\end{aligned}
$$&lt;/p>
&lt;p>By adding four more pizza slices we get:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768585850699">
#figure-svg-1724779768585850699 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
$$&lt;/p>
&lt;h3 id="layers-of-pizza" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#layers-of-pizza" aria-label="Anchor">Layers of pizza&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h3>
&lt;p>The next step is to create additional (smaller) layers of circle sectors. Let&amp;rsquo;s say we want three circles; there&amp;rsquo;re two
obvious ways of selecting division points: equal radii, or equal areas. Equal radii is simpler, so let&amp;rsquo;s try this one
first.&lt;/p>
&lt;p>If the outermost circle has a radius of $1$, then the middle circle will have a radius of $0.\overline{6}$, and the
smallest one will have $0.\overline{3}$.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768586037002">
#figure-svg-1724779768586037002 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.6666667 A0.6666667,0.6666667,0,0,1,0.47140452,-0.47140452 z" fill="LightYellow" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.47140452,-0.47140452 A0.6666667,0.6666667,0,0,1,0.6666667,0 z" fill="LemonChiffon" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.6666667,0 A0.6666667,0.6666667,0,0,1,0.47140452,0.47140452 z" fill="LightGoldenrodYellow"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.47140452,0.47140452 A0.6666667,0.6666667,0,0,1,0,0.6666667 z" fill="PapayaWhip" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.6666667 A0.6666667,0.6666667,0,0,1,-0.47140452,0.47140452 z" fill="Moccasin" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.47140452,0.47140452 A0.6666667,0.6666667,0,0,1,-0.6666667,0 z" fill="PeachPuff" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.6666667,0 A0.6666667,0.6666667,0,0,1,-0.47140452,-0.47140452 z" fill="PaleGoldenrod"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.47140452,-0.47140452 A0.6666667,0.6666667,0,0,1,-0,-0.6666667 z" fill="Khaki" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.33333334 A0.33333334,0.33333334,0,0,1,0.23570226,-0.23570226 z" fill="MediumSeaGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.23570226,-0.23570226 A0.33333334,0.33333334,0,0,1,0.33333334,0 z" fill="SeaGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.33333334,0 A0.33333334,0.33333334,0,0,1,0.23570226,0.23570226 z" fill="ForestGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.23570226,0.23570226 A0.33333334,0.33333334,0,0,1,0,0.33333334 z" fill="Green" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.33333334 A0.33333334,0.33333334,0,0,1,-0.23570226,0.23570226 z" fill="DarkGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.23570226,0.23570226 A0.33333334,0.33333334,0,0,1,-0.33333334,0 z" fill="YellowGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.33333334,0 A0.33333334,0.33333334,0,0,1,-0.23570226,-0.23570226 z" fill="OliveDrab" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.23570226,-0.23570226 A0.33333334,0.33333334,0,0,1,-0,-0.33333334 z" fill="Olive" stroke="black"
stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
\quad\text{and}\quad
r_2 = 0.\overline{6}
\quad\text{and}\quad
r_3 = 0.\overline{3}
$$&lt;/p>
&lt;p>Not that it matters, but the smallest circle is a little &lt;em>too&lt;/em> small for my liking. But, before we decide, we need to
see circles with equal areas first.&lt;/p>
&lt;p>$$
\begin{aligned}
\Pi r_1^2 - \Pi r_2^2 = \Pi r_2^2 - \Pi r_3^2
\quad&amp;amp;\text{and}\quad
\Pi r_2^2 - \Pi r_3^2 = \Pi r_3^2 \\[0.25em]
1 - r_2^2 = r_2^2 - r_3^2
\quad&amp;amp;\text{and}\quad
r_2^2 - r_3^2 = r_3^2 \\[0.25em]
1 = 2r_2^2 - r_3^2
\quad&amp;amp;\text{and}\quad
r_2^2 = 2r_3^2 \\[0.25em]
1 = 3r_3^2
\quad&amp;amp;\text{and}\quad
r_2^2 = 2r_3^2 \\[0.25em]
r_3 = \sqrt{\frac{1}{3}}
\quad&amp;amp;\text{and}\quad
r_2 = \sqrt{\frac{2}{3}}
\end{aligned}
$$&lt;/p>
&lt;p>Which gives us this avatar:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768586224338">
#figure-svg-1724779768586224338 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.8164966 A0.8164966,0.8164966,0,0,1,0.57735026,-0.57735026 z" fill="LightYellow" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.57735026,-0.57735026 A0.8164966,0.8164966,0,0,1,0.8164966,0 z" fill="LemonChiffon" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.8164966,0 A0.8164966,0.8164966,0,0,1,0.57735026,0.57735026 z" fill="LightGoldenrodYellow"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.57735026,0.57735026 A0.8164966,0.8164966,0,0,1,0,0.8164966 z" fill="PapayaWhip" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.8164966 A0.8164966,0.8164966,0,0,1,-0.57735026,0.57735026 z" fill="Moccasin" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.57735026,0.57735026 A0.8164966,0.8164966,0,0,1,-0.8164966,0 z" fill="PeachPuff" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.8164966,0 A0.8164966,0.8164966,0,0,1,-0.57735026,-0.57735026 z" fill="PaleGoldenrod"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.57735026,-0.57735026 A0.8164966,0.8164966,0,0,1,-0,-0.8164966 z" fill="Khaki" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.57735026 A0.57735026,0.57735026,0,0,1,0.4082483,-0.4082483 z" fill="MediumSeaGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.4082483,-0.4082483 A0.57735026,0.57735026,0,0,1,0.57735026,0 z" fill="SeaGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.57735026,0 A0.57735026,0.57735026,0,0,1,0.4082483,0.4082483 z" fill="ForestGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.4082483,0.4082483 A0.57735026,0.57735026,0,0,1,0,0.57735026 z" fill="Green" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.57735026 A0.57735026,0.57735026,0,0,1,-0.4082483,0.4082483 z" fill="DarkGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.4082483,0.4082483 A0.57735026,0.57735026,0,0,1,-0.57735026,0 z" fill="YellowGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.57735026,0 A0.57735026,0.57735026,0,0,1,-0.4082483,-0.4082483 z" fill="OliveDrab" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.4082483,-0.4082483 A0.57735026,0.57735026,0,0,1,-0,-0.57735026 z" fill="Olive" stroke="black"
stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
\quad\text{and}\quad
r_2 = \sqrt{\frac{2}{3}}
\quad\text{and}\quad
r_3 = \sqrt{\frac{1}{3}}
$$&lt;/p>
&lt;p>Which is also not ideal, but the other way around&amp;hellip; I was tinkering with the radii a bit and I think I found a &lt;a href="https://en.wikipedia.org/wiki/Arithmetic_mean">middle
ground&lt;/a> with which I&amp;rsquo;m happy.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768586414649">
#figure-svg-1724779768586414649 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M 0,0 L 0,-1 A 1,1,0,0,1,0.70710677,-0.70710677 z" fill="IndianRed" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,-0.70710677 A 1,1,0,0,1,1,0 z" fill="LightCoral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 1,0 A 1,1,0,0,1,0.70710677,0.70710677 z" fill="Salmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0.70710677,0.70710677 A 1,1,0,0,1,0,1 z" fill="DarkSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L 0,1 A 1,1,0,0,1,-0.70710677,0.70710677 z" fill="LightSalmon" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,0.70710677 A 1,1,0,0,1,-1,0 z" fill="Coral" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -1,0 A 1,1,0,0,1,-0.70710677,-0.70710677 z" fill="Tomato" stroke="black" stroke-width="0.01" />
&lt;path d="M 0,0 L -0.70710677,-0.70710677 A 1,1,0,0,1,0,-1 z" fill="OrangeRed" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="LightYellow" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="LemonChiffon" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="LightGoldenrodYellow"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="PapayaWhip" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="Moccasin" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="PeachPuff" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="PaleGoldenrod" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="Khaki" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z" fill="MediumSeaGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="SeaGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="ForestGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="Green" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="DarkGreen" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z" fill="YellowGreen"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z" fill="OliveDrab" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z" fill="Olive" stroke="black"
stroke-width="0.01" />
&lt;/svg>
&lt;/figure>
&lt;p>$$
r_1 = 1
\quad\text{and}\quad
r_2 = \frac{0.\overline{6} + \sqrt{\frac{2}{3}}}{2}
\quad\text{and}\quad
r_3 = \frac{0.\overline{3} + \sqrt{\frac{1}{3}}}{2}
$$&lt;/p>
&lt;p>Radii in the circles above are the arithmetic average of the equal radii variant and the equal areas variant.&lt;/p>
&lt;h2 id="working-with-colors" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#working-with-colors" aria-label="Anchor">Working with colors&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>With the SVG structure out of the way we can focus on selecting quasi-random colors for the circle segments based on the
identifier&amp;rsquo;s hash. &lt;a href="https://en.wikipedia.org/wiki/SHA-2">SHA-256&lt;/a> hashes have 32 bytes; it&amp;rsquo;s more than we need &amp;mdash; assuming we need a single byte
per circle sector &amp;mdash; which gives us another benefit: we can slide in the 4&lt;sup>th&lt;/sup> circle, if we want
to.&lt;/p>
&lt;p>For now though, let&amp;rsquo;s talk about the colors. If we&amp;rsquo;d use &lt;a href="https://en.wikipedia.org/wiki/HSL_and_HSV">HSL&lt;/a>, we can split each byte into 4 pieces: 4 bits for hue
(since it&amp;rsquo;s the most dominant), 2 bits for saturation, and 2 bits for lightness. Path&amp;rsquo;s &lt;a href="https://www.w3.org/TR/SVG2/painting.html#SpecifyingFillPaint">fill&lt;/a> property accepts any
&lt;a href="https://www.w3.org/TR/SVG2/painting.html#SpecifyingPaint">paint&lt;/a> value, which basically means we need to format our color to a standard CSS&amp;rsquo;s hue.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-2-1">&lt;a class="lnlinks" href="#hl-2-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-2">&lt;a class="lnlinks" href="#hl-2-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-3">&lt;a class="lnlinks" href="#hl-2-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-4">&lt;a class="lnlinks" href="#hl-2-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-5">&lt;a class="lnlinks" href="#hl-2-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-6">&lt;a class="lnlinks" href="#hl-2-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">16.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-7">&lt;a class="lnlinks" href="#hl-2-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-8">&lt;a class="lnlinks" href="#hl-2-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-9">&lt;a class="lnlinks" href="#hl-2-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-10">&lt;a class="lnlinks" href="#hl-2-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-11">&lt;a class="lnlinks" href="#hl-2-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">20.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">80.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-12">&lt;a class="lnlinks" href="#hl-2-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">40.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">50.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-13">&lt;a class="lnlinks" href="#hl-2-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-14">&lt;a class="lnlinks" href="#hl-2-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">format!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hsl(&lt;/span>&lt;span class="si">{h}&lt;/span>&lt;span class="s">, &lt;/span>&lt;span class="si">{s}&lt;/span>&lt;span class="s">%, &lt;/span>&lt;span class="si">{l}&lt;/span>&lt;span class="s">%)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-2-15">&lt;a class="lnlinks" href="#hl-2-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alright, let&amp;rsquo;s generate an avatar for &lt;code>&amp;quot;foo&amp;quot;&lt;/code> and see how it looks like.&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768586618515">
#figure-svg-1724779768586618515 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(45, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(45, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(247.5, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(135, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(135, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(337.5, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(270, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(180, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(337.5, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(202.5, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(90, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(67.5, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(22.5, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(67.5, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="hsl(90, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(67.5, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z" fill="hsl(22.5, 20%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="hsl(90, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="hsl(45, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="hsl(157.5, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="hsl(135, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z" fill="hsl(180, 20%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z" fill="hsl(247.5, 80%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z" fill="hsl(225, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for &amp;quot;foo&amp;quot;.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Well, it does not look terrible, but it&amp;rsquo;s not eye-catching either. To be perfectly honest, we should expect something
like this; &lt;a href="https://en.wikipedia.org/wiki/SHA-2">SHA-256&lt;/a> returns (and for that matter all other hash functions too) a quasi-random values. If we
convert those &lt;em>raw&lt;/em> bytes to fill colors, we&amp;rsquo;ll get quasi-random colors. To make it nicer we need to modify our
algorithm slightly; we need to calculate a global theme, if you will, for the avatar, so that a part of circle segments'
colors come from that theme. We can do that by folding all hash bytes into a single one with XOR.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-3-1">&lt;a class="lnlinks" href="#hl-3-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalized_theme&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-2">&lt;a class="lnlinks" href="#hl-3-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-3">&lt;a class="lnlinks" href="#hl-3-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-4">&lt;a class="lnlinks" href="#hl-3-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-5">&lt;a class="lnlinks" href="#hl-3-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-6">&lt;a class="lnlinks" href="#hl-3-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">16.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-7">&lt;a class="lnlinks" href="#hl-3-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-8">&lt;a class="lnlinks" href="#hl-3-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-9">&lt;a class="lnlinks" href="#hl-3-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-10">&lt;a class="lnlinks" href="#hl-3-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">120.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-11">&lt;a class="lnlinks" href="#hl-3-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">20.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">80.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-12">&lt;a class="lnlinks" href="#hl-3-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">40.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">50.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-13">&lt;a class="lnlinks" href="#hl-3-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-14">&lt;a class="lnlinks" href="#hl-3-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">format!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hsl(&lt;/span>&lt;span class="si">{h}&lt;/span>&lt;span class="s">, &lt;/span>&lt;span class="si">{s}&lt;/span>&lt;span class="s">%, &lt;/span>&lt;span class="si">{l}&lt;/span>&lt;span class="s">%)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-15">&lt;a class="lnlinks" href="#hl-3-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-16">&lt;a class="lnlinks" href="#hl-3-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-17">&lt;a class="lnlinks" href="#hl-3-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">f32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-18">&lt;a class="lnlinks" href="#hl-3-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-19">&lt;a class="lnlinks" href="#hl-3-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-20">&lt;a class="lnlinks" href="#hl-3-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">u8&lt;/span>::&lt;span class="no">MAX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-21">&lt;a class="lnlinks" href="#hl-3-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-22">&lt;a class="lnlinks" href="#hl-3-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-23">&lt;a class="lnlinks" href="#hl-3-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">generate_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash&lt;/span>: &lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-24">&lt;a class="lnlinks" href="#hl-3-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-25">&lt;a class="lnlinks" href="#hl-3-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-26">&lt;a class="lnlinks" href="#hl-3-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">colors&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-27">&lt;a class="lnlinks" href="#hl-3-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cloned&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-28">&lt;a class="lnlinks" href="#hl-3-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-29">&lt;a class="lnlinks" href="#hl-3-29">29&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">collect&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-30">&lt;a class="lnlinks" href="#hl-3-30">30&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-31">&lt;a class="lnlinks" href="#hl-3-31">31&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">unimplemented!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Generate SVG paths.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-3-32">&lt;a class="lnlinks" href="#hl-3-32">32&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This code renders:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768586839464">
#figure-svg-1724779768586839464 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(133.58824, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(133.58824, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(201.08824, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(163.58824, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(163.58824, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(231.08824, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(208.58824, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(178.58824, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(231.08824, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(186.08824, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(148.58824, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(141.08824, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(126.08824, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(141.08824, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="hsl(148.58824, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(141.08824, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z"
fill="hsl(126.08824, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="hsl(148.58824, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="hsl(133.58824, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="hsl(171.08824, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="hsl(163.58824, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z"
fill="hsl(178.58824, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z"
fill="hsl(201.08824, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z"
fill="hsl(193.58824, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for &amp;quot;foo&amp;quot; with a theme.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>It looks rather good, if I say so myself. The solution works as it&amp;rsquo;s suppose to: it &lt;em>most probably&lt;/em> produces different
avatars for different identifiers (&lt;a href="https://en.wikipedia.org/wiki/Hash_collision">hash collisions&lt;/a> do happen) and they look acceptable. However, the rings seem to
&lt;em>phase&lt;/em> into each other &amp;mdash; their colors are too similar. We could experiment with another theme: a ring theme &amp;mdash; which
would be a XOR-fold of all bytes that represent a single ring &amp;mdash; and check the results.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="ln" id="hl-4-1">&lt;a class="lnlinks" href="#hl-4-1"> 1&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="k">fn&lt;/span> &lt;span class="nf">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">normalized_theme&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_ring_theme&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>: &lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-2">&lt;a class="lnlinks" href="#hl-4-2"> 2&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-3">&lt;a class="lnlinks" href="#hl-4-3"> 3&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-4">&lt;a class="lnlinks" href="#hl-4-4"> 4&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mh">0x03&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-5">&lt;a class="lnlinks" href="#hl-4-5"> 5&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-6">&lt;a class="lnlinks" href="#hl-4-6"> 6&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">16.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-7">&lt;a class="lnlinks" href="#hl-4-7"> 7&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-8">&lt;a class="lnlinks" href="#hl-4-8"> 8&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">4.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-9">&lt;a class="lnlinks" href="#hl-4-9"> 9&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-10">&lt;a class="lnlinks" href="#hl-4-10">10&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">360.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_theme&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-11">&lt;a class="lnlinks" href="#hl-4-11">11&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">120.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_ring_theme&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-12">&lt;a class="lnlinks" href="#hl-4-12">12&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">30.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_h&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-13">&lt;a class="lnlinks" href="#hl-4-13">13&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">20.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">80.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-14">&lt;a class="lnlinks" href="#hl-4-14">14&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">40.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">50.0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">normalized_l&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-15">&lt;a class="lnlinks" href="#hl-4-15">15&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-16">&lt;a class="lnlinks" href="#hl-4-16">16&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">format!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hsl(&lt;/span>&lt;span class="si">{h}&lt;/span>&lt;span class="s">, &lt;/span>&lt;span class="si">{s}&lt;/span>&lt;span class="s">%, &lt;/span>&lt;span class="si">{l}&lt;/span>&lt;span class="s">%)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-17">&lt;a class="lnlinks" href="#hl-4-17">17&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-18">&lt;a class="lnlinks" href="#hl-4-18">18&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-19">&lt;a class="lnlinks" href="#hl-4-19">19&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">f32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-20">&lt;a class="lnlinks" href="#hl-4-20">20&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="k">u8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-21">&lt;a class="lnlinks" href="#hl-4-21">21&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">u8&lt;/span>::&lt;span class="no">MAX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-22">&lt;a class="lnlinks" href="#hl-4-22">22&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-23">&lt;a class="lnlinks" href="#hl-4-23">23&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-24">&lt;a class="lnlinks" href="#hl-4-24">24&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">generate_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hash&lt;/span>: &lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-25">&lt;a class="lnlinks" href="#hl-4-25">25&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">calculate_theme&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-26">&lt;a class="lnlinks" href="#hl-4-26">26&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ring_themes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-27">&lt;a class="lnlinks" href="#hl-4-27">27&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">windows&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-28">&lt;a class="lnlinks" href="#hl-4-28">28&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calculate_theme&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-29">&lt;a class="lnlinks" href="#hl-4-29">29&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">collect&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-30">&lt;a class="lnlinks" href="#hl-4-30">30&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-31">&lt;a class="lnlinks" href="#hl-4-31">31&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">colors&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hash&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-32">&lt;a class="lnlinks" href="#hl-4-32">32&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-33">&lt;a class="lnlinks" href="#hl-4-33">33&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cloned&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-34">&lt;a class="lnlinks" href="#hl-4-34">34&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">enumerate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-35">&lt;a class="lnlinks" href="#hl-4-35">35&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">to_color&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">theme&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ring_themes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">byte&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-36">&lt;a class="lnlinks" href="#hl-4-36">36&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">collect&lt;/span>::&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-37">&lt;a class="lnlinks" href="#hl-4-37">37&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-38">&lt;a class="lnlinks" href="#hl-4-38">38&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">unimplemented!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Generate SVG paths.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln" id="hl-4-39">&lt;a class="lnlinks" href="#hl-4-39">39&lt;/a>&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With the final touch we get:&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768587059952">
#figure-svg-1724779768587059952 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,1,0.70710677,-0.70710677 z" fill="hsl(127.51471, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,1,1,0 z" fill="hsl(127.51471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,1,0.70710677,0.70710677 z" fill="hsl(144.38971, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,1,0,1 z" fill="hsl(135.01471, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,1,-0.70710677,0.70710677 z" fill="hsl(135.01471, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,1,-1,0 z" fill="hsl(151.88971, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,1,-0.70710677,-0.70710677 z" fill="hsl(146.26471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,1,-0,-1 z" fill="hsl(138.76471, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,1,0.5243774,-0.5243774 z" fill="hsl(251.18384, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,0.7415816,0 z" fill="hsl(239.93384, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,1,0.5243774,0.5243774 z" fill="hsl(230.55884, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,0,0.7415816 z" fill="hsl(228.68384, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,1,-0.5243774,0.5243774 z" fill="hsl(224.93384, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,1,-0.7415816,0 z" fill="hsl(228.68384, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,1,-0.5243774,-0.5243774 z" fill="hsl(230.55884, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,1,-0,-0.7415816 z" fill="hsl(228.68384, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,1,0.32197526,-0.32197526 z"
fill="hsl(167.05148, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,0.45534182,0 z" fill="hsl(172.67648, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,1,0.32197526,0.32197526 z" fill="hsl(168.92648, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,0,0.45534182 z" fill="hsl(178.30148, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,1,-0.32197526,0.32197526 z" fill="hsl(176.42648, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,1,-0.45534182,0 z"
fill="hsl(180.17648, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,1,-0.32197526,-0.32197526 z"
fill="hsl(185.80148, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,1,-0,-0.45534182 z"
fill="hsl(183.92648, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>Avatar for &amp;quot;foo&amp;quot; with a global theme and a ring theme.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Which is exactly the thing that hides in the spoiler block at the top. If you restrained yourself and didn&amp;rsquo;t check it
out: congratulations. Now feel free to do so. &amp;#x1f603;&lt;/p>
&lt;h2 id="conclusions" class="my-8 md:my-12 flex items-center justify-center">
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;a class="font-bold text-center w-full md:w-fit mx-4 !no-underline !link-neutral"
href="#conclusions" aria-label="Anchor">Conclusions&lt;/a>
&lt;hr class="w-1/12 border-neutral shrink-0 hidden md:block" />
&lt;/h2>
&lt;p>Working on this blog post has been an effort I wanted to make to better understand how SVGs work from the inside, as
well as, a challenge to reverse-engineer ideas from &lt;a href="https://francoisbest.com/posts/2021/hashvatars">Representing SHA-256 Hashes As Avatars&lt;/a>.&lt;/p>
&lt;p>I&amp;rsquo;m not working on any service which would benefit from these avatars. If I happen to work on one in the future I&amp;rsquo;ll for
sure like to try them out. To make this solution easier to re-use in other places, I&amp;rsquo;ve made a Rust crate called
&lt;a href="https://crates.io/crates/svg_avatars">&lt;code>svg_avatars&lt;/code>&lt;/a>, which implements this exact solution. The crate is fairly minimal, so if anyone has any idea on how to
enhance it, I&amp;rsquo;d love to hear from you/check out your PRs.&lt;/p>
&lt;p>As a closing thought, one of the parameters of the &lt;a href="https://www.w3.org/TR/SVG2/paths.html#PathDataEllipticalArcCommands">absolute elliptical arc curve&lt;/a> command is the
&lt;code>sweep-flag&lt;/code> parameter. It allows you to determine, whether an arc should be a smiley face or a sad face. If the
parameter is &lt;code>1&lt;/code> &amp;mdash; as it is in our case &amp;mdash; then the arc is a sad face. However, if you&amp;rsquo;d flip the flags to be &lt;code>0&lt;/code>,
then all arcs become smiley faces&amp;hellip;&lt;/p>
&lt;figure>&lt;style id="figure-svg-1724779768587278146">
#figure-svg-1724779768587278146 + svg {
width: 180px;
height: 180px;
}
&lt;/style>&lt;svg overflow="visible" viewBox="-1 -1 2 2" xmlns="http://www.w3.org/2000/svg">
&lt;path d="M0,0 L0,-1 A1,1,0,0,0,0.70710677,-0.70710677 z" fill="hsl(127.51471, 80%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,-0.70710677 A1,1,0,0,0,1,0 z" fill="hsl(127.51471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L1,0 A1,1,0,0,0,0.70710677,0.70710677 z" fill="hsl(144.38971, 40%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0.70710677,0.70710677 A1,1,0,0,0,0,1 z" fill="hsl(135.01471, 60%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,1 A1,1,0,0,0,-0.70710677,0.70710677 z" fill="hsl(135.01471, 60%, 40%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,0.70710677 A1,1,0,0,0,-1,0 z" fill="hsl(151.88971, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-1,0 A1,1,0,0,0,-0.70710677,-0.70710677 z" fill="hsl(146.26471, 40%, 65%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L-0.70710677,-0.70710677 A1,1,0,0,0,-0,-1 z" fill="hsl(138.76471, 80%, 77.5%)" stroke="black"
stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.7415816 A0.7415816,0.7415816,0,0,0,0.5243774,-0.5243774 z" fill="hsl(251.18384, 60%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,0,0.7415816,0 z" fill="hsl(239.93384, 60%, 77.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.7415816,0 A0.7415816,0.7415816,0,0,0,0.5243774,0.5243774 z" fill="hsl(230.55884, 40%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.5243774,0.5243774 A0.7415816,0.7415816,0,0,0,0,0.7415816 z" fill="hsl(228.68384, 80%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.7415816 A0.7415816,0.7415816,0,0,0,-0.5243774,0.5243774 z" fill="hsl(224.93384, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,0.5243774 A0.7415816,0.7415816,0,0,0,-0.7415816,0 z" fill="hsl(228.68384, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.7415816,0 A0.7415816,0.7415816,0,0,0,-0.5243774,-0.5243774 z" fill="hsl(230.55884, 20%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.5243774,-0.5243774 A0.7415816,0.7415816,0,0,0,-0,-0.7415816 z" fill="hsl(228.68384, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,-0.45534182 A0.45534182,0.45534182,0,0,0,0.32197526,-0.32197526 z"
fill="hsl(167.05148, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,0,0.45534182,0 z" fill="hsl(172.67648, 20%, 65%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.45534182,0 A0.45534182,0.45534182,0,0,0,0.32197526,0.32197526 z" fill="hsl(168.92648, 80%, 52.5%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0.32197526,0.32197526 A0.45534182,0.45534182,0,0,0,0,0.45534182 z" fill="hsl(178.30148, 20%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L0,0.45534182 A0.45534182,0.45534182,0,0,0,-0.32197526,0.32197526 z" fill="hsl(176.42648, 40%, 40%)"
stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,0.32197526 A0.45534182,0.45534182,0,0,0,-0.45534182,0 z"
fill="hsl(180.17648, 20%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.45534182,0 A0.45534182,0.45534182,0,0,0,-0.32197526,-0.32197526 z"
fill="hsl(185.80148, 80%, 77.5%)" stroke="black" stroke-width="0.01" />
&lt;path d="M0,0 L-0.32197526,-0.32197526 A0.45534182,0.45534182,0,0,0,-0,-0.45534182 z"
fill="hsl(183.92648, 20%, 40%)" stroke="black" stroke-width="0.01" />
&lt;/svg>
&lt;figcaption>
&lt;p>&lt;em>Smiley-face&lt;/em> avatar for &amp;quot;foo&amp;quot;.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>&amp;hellip;and the avatar &lt;a href="https://en.wikipedia.org/wiki/Emergence">emerges&lt;/a> as a spiderweb. Who does not love a single-line-change feature for Spooktober.&lt;/p>
&lt;!-- Footnotes &amp; link definitions -->
&lt;!-- markdownlint-disable link-image-reference-definitions -->
&lt;!-- markdownlint-enable link-image-reference-definitions -->
&lt;!-- markdownlint-disable link-image-reference-definitions -->
&lt;!-- markdownlint-enable link-image-reference-definitions -->
&lt;!-- markdownlint-disable link-image-reference-definitions -->
&lt;!-- markdownlint-enable link-image-reference-definitions --></description></item></channel></rss>